

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Sat Feb 15 16:01:44 2025

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 6 "C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 6 "C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
    45  2007  FF71               	dw 0xFFFD & 0xFFFB & 0xFFF7 & 0xFFFF & 0xFFFF & 0xFF7F ;#
    46                           	FNCALL	_main,_InitLCD
    47                           	FNCALL	_main,_ClearLCD
    48                           	FNCALL	_main,_checkButtons
    49                           	FNCALL	_main,_displayState
    50                           	FNCALL	_displayState,_SetPosLCD
    51                           	FNCALL	_displayState,_WriteStringToLCD
    52                           	FNCALL	_displayState,_displayTime
    53                           	FNCALL	_displayTime,___lwdiv
    54                           	FNCALL	_displayTime,___lwmod
    55                           	FNCALL	_displayTime,_sprintf
    56                           	FNCALL	_displayTime,_WriteStringToLCD
    57                           	FNCALL	_WriteStringToLCD,_WriteDataToLCD
    58                           	FNCALL	_WriteDataToLCD,_CheckBusyLCD
    59                           	FNCALL	_WriteDataToLCD,_ToggleEpinOfLCD
    60                           	FNCALL	_ClearLCD,_CheckBusyLCD
    61                           	FNCALL	_ClearLCD,_WriteCommandToLCD
    62                           	FNCALL	_InitLCD,_ToggleEpinOfLCD
    63                           	FNCALL	_InitLCD,_WriteCommandToLCD
    64                           	FNCALL	_SetPosLCD,_CheckBusyLCD
    65                           	FNCALL	_SetPosLCD,_WriteCommandToLCD
    66                           	FNCALL	_WriteCommandToLCD,_ToggleEpinOfLCD
    67                           	FNCALL	_CheckBusyLCD,_ReadBusyFlagLCD
    68                           	FNCALL	_checkButtons,_StopTimer1
    69                           	FNCALL	_checkButtons,_StartTimer1
    70                           	FNCALL	_sprintf,_isdigit
    71                           	FNCALL	_sprintf,___wmul
    72                           	FNCALL	_sprintf,___lwdiv
    73                           	FNCALL	_sprintf,___lwmod
    74                           	FNROOT	_main
    75                           	FNCALL	intlevel1,_ISR
    76                           	global	intlevel1
    77                           	FNROOT	intlevel1
    78                           	global	_dpowers
    79                           psect	strings,class=STRING,delta=2
    80                           global __pstrings
    81  048A                     __pstrings:
    82                           ;	global	stringdir,stringtab,__stringbase
    83  048A                     stringtab:
    84                           ;	String table - string pointers are 1 byte each
    85  048A  1BFF               	btfsc	(btemp+1),7
    86  048B  2C94               	ljmp	stringcode
    87  048C  1383               	bcf	status,7
    88  048D  187F               	btfsc	(btemp+1),0
    89  048E  1783               	bsf	status,7
    90  048F  0800               	movf	indf,w
    91  0490  0A84               	incf fsr
    92  0491  1903               skipnz
    93  0492  0AFF               incf btemp+1
    94  0493  0008               	return
    95  0494                     stringcode:stringdir:
      + 0494                     stringdir:	
    96  0494  3004               movlw high(stringdir)
    97  0495  008A               movwf pclath
    98  0496  0804               movf fsr,w
    99  0497  0A84               incf fsr
   100  0498  0782               	addwf pc
   101  0499                     __stringbase:
   102  0499  3400               	retlw	0
   103                           psect	strings
   104                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
   105                           	line	350
   106  049A                     _dpowers:
   107  049A  3401               	retlw	01h
   108  049B  3400               	retlw	0
   109                           
   110  049C  340A               	retlw	0Ah
   111  049D  3400               	retlw	0
   112                           
   113  049E  3464               	retlw	064h
   114  049F  3400               	retlw	0
   115                           
   116  04A0  34E8               	retlw	0E8h
   117  04A1  3403               	retlw	03h
   118                           
   119  04A2  3410               	retlw	010h
   120  04A3  3427               	retlw	027h
   121                           
   122                           	global	_dpowers
   123                           	global	_time
   124                           	global	_halfSecCount
   125                           	global	_mode
   126                           	global	_running
   127                           	global	checkButtons@oldDec
   128                           	global	checkButtons@oldInc
   129                           	global	checkButtons@oldMode
   130                           	global	checkButtons@oldReset
   131                           	global	checkButtons@oldStartStop
   132                           	global	_PORTB
   133  0006                     _PORTB	set	6
   134                           	global	_T1CON
   135  0010                     _T1CON	set	16
   136                           	global	_TMR1H
   137  000F                     _TMR1H	set	15
   138                           	global	_TMR1L
   139  000E                     _TMR1L	set	14
   140                           	global	_CARRY
   141  0018                     _CARRY	set	24
   142                           	global	_GIE
   143  005F                     _GIE	set	95
   144                           	global	_PEIE
   145  005E                     _PEIE	set	94
   146                           	global	_RA0
   147  0028                     _RA0	set	40
   148                           	global	_RA1
   149  0029                     _RA1	set	41
   150                           	global	_RA2
   151  002A                     _RA2	set	42
   152                           	global	_RB0
   153  0030                     _RB0	set	48
   154                           	global	_RB1
   155  0031                     _RB1	set	49
   156                           	global	_RD3
   157  0043                     _RD3	set	67
   158                           	global	_RD4
   159  0044                     _RD4	set	68
   160                           	global	_RD5
   161  0045                     _RD5	set	69
   162                           	global	_RD6
   163  0046                     _RD6	set	70
   164                           	global	_RD7
   165  0047                     _RD7	set	71
   166                           	global	_TMR1IF
   167  0060                     _TMR1IF	set	96
   168                           	global	_TMR1ON
   169  0080                     _TMR1ON	set	128
   170                           	global	_ADCON1
   171  009F                     _ADCON1	set	159
   172                           	global	_TRISA
   173  0085                     _TRISA	set	133
   174                           	global	_TRISB
   175  0086                     _TRISB	set	134
   176                           	global	_TRISD
   177  0088                     _TRISD	set	136
   178                           	global	_TMR1IE
   179  0460                     _TMR1IE	set	1120
   180                           	global	_EEADR
   181  010D                     _EEADR	set	269
   182                           	global	_EEDATA
   183  010C                     _EEDATA	set	268
   184                           	global	_EECON1
   185  018C                     _EECON1	set	396
   186                           	global	_EECON2
   187  018D                     _EECON2	set	397
   188                           	global	_RD
   189  0C60                     _RD	set	3168
   190                           	global	_WR
   191  0C61                     _WR	set	3169
   192                           	global	_WREN
   193  0C62                     _WREN	set	3170
   194                           	
   195  04A4                     STR_3:	
   196  04A4  3454               	retlw	84	;'T'
   197  04A5  3449               	retlw	73	;'I'
   198  04A6  344D               	retlw	77	;'M'
   199  04A7  3445               	retlw	69	;'E'
   200  04A8  3452               	retlw	82	;'R'
   201  04A9  3420               	retlw	32	;' '
   202  04AA  3420               	retlw	32	;' '
   203  04AB  3420               	retlw	32	;' '
   204  04AC  3420               	retlw	32	;' '
   205  04AD  3420               	retlw	32	;' '
   206  04AE  3420               	retlw	32	;' '
   207  04AF  3420               	retlw	32	;' '
   208  04B0  3420               	retlw	32	;' '
   209  04B1  3400               	retlw	0
   210                           psect	strings
   211                           	
   212  04B2                     STR_2:	
   213  04B2  3453               	retlw	83	;'S'
   214  04B3  3454               	retlw	84	;'T'
   215  04B4  344F               	retlw	79	;'O'
   216  04B5  3450               	retlw	80	;'P'
   217  04B6  3457               	retlw	87	;'W'
   218  04B7  3441               	retlw	65	;'A'
   219  04B8  3454               	retlw	84	;'T'
   220  04B9  3443               	retlw	67	;'C'
   221  04BA  3448               	retlw	72	;'H'
   222  04BB  3420               	retlw	32	;' '
   223  04BC  3420               	retlw	32	;' '
   224  04BD  3420               	retlw	32	;' '
   225  04BE  3420               	retlw	32	;' '
   226  04BF  3400               	retlw	0
   227                           psect	strings
   228                           	
   229  04C0                     STR_1:	
   230  04C0  3425               	retlw	37	;'%'
   231  04C1  3430               	retlw	48	;'0'
   232  04C2  3432               	retlw	50	;'2'
   233  04C3  3475               	retlw	117	;'u'
   234  04C4  343A               	retlw	58	;':'
   235  04C5  3425               	retlw	37	;'%'
   236  04C6  3430               	retlw	48	;'0'
   237  04C7  3432               	retlw	50	;'2'
   238  04C8  3475               	retlw	117	;'u'
   239  04C9  3400               	retlw	0
   240                           psect	strings
   241  04AD                     STR_4	equ	STR_3+9
   242  04AD                     STR_5	equ	STR_3+9
   243                           	file	"C:\Users\henry\AppData\Local\Temp\s3co."
   244                           	line	#
   245                           psect cinit,class=CODE,delta=2
   246                           global start_initialization
   247  0664                     start_initialization:
   248                           
   249                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   250                           global __pbitbssCOMMON
   251  03C0                     __pbitbssCOMMON:
   252  03C0                     checkButtons@oldDec:
   253  03C0                            ds      1
   254                           
   255  03C1                     checkButtons@oldInc:
   256  03C1                            ds      1
   257                           
   258  03C2                     checkButtons@oldMode:
   259  03C2                            ds      1
   260                           
   261  03C3                     checkButtons@oldReset:
   262  03C3                            ds      1
   263                           
   264  03C4                     checkButtons@oldStartStop:
   265  03C4                            ds      1
   266                           
   267                           psect	bssBANK0,class=BANK0,space=1
   268                           global __pbssBANK0
   269  0051                     __pbssBANK0:
   270  0051                     _time:
   271  0051                            ds      2
   272                           
   273  0053                     _halfSecCount:
   274  0053                            ds      1
   275                           
   276  0054                     _mode:
   277  0054                            ds      1
   278                           
   279  0055                     _running:
   280  0055                            ds      1
   281                           
   282                           ; Clear objects allocated to BITCOMMON
   283                           psect cinit,class=CODE,delta=2
   284  0664  01F8               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   285                           ; Clear objects allocated to BANK0
   286                           psect cinit,class=CODE,delta=2
   287  0665  01D1               	clrf	((__pbssBANK0)+0)&07Fh
   288  0666  01D2               	clrf	((__pbssBANK0)+1)&07Fh
   289  0667  01D3               	clrf	((__pbssBANK0)+2)&07Fh
   290  0668  01D4               	clrf	((__pbssBANK0)+3)&07Fh
   291  0669  01D5               	clrf	((__pbssBANK0)+4)&07Fh
   292                           psect cinit,class=CODE,delta=2
   293                           global end_of_initialization
   294                           
   295                           ;End of C runtime variable initialization code
   296                           
   297  066A                     end_of_initialization:
   298  066A  0183               clrf status
   299  066B  120A  118A  2CCA   ljmp _main	;jump to C main() function
   300                           psect	cstackCOMMON,class=COMMON,space=1
   301                           global __pcstackCOMMON
   302  0070                     __pcstackCOMMON:
   303                           	global	?_SetPosLCD
   304  0070                     ?_SetPosLCD:	; 0 bytes @ 0x0
   305                           	global	?_InitLCD
   306  0070                     ?_InitLCD:	; 0 bytes @ 0x0
   307                           	global	?_ClearLCD
   308  0070                     ?_ClearLCD:	; 0 bytes @ 0x0
   309                           	global	?_isdigit
   310  0070                     ?_isdigit:	; 1 bit 
   311                           	global	?_ISR
   312  0070                     ?_ISR:	; 0 bytes @ 0x0
   313                           	global	??_ISR
   314  0070                     ??_ISR:	; 0 bytes @ 0x0
   315                           	global	?_StartTimer1
   316  0070                     ?_StartTimer1:	; 0 bytes @ 0x0
   317                           	global	?_StopTimer1
   318  0070                     ?_StopTimer1:	; 0 bytes @ 0x0
   319                           	global	?_displayState
   320  0070                     ?_displayState:	; 0 bytes @ 0x0
   321                           	global	?_checkButtons
   322  0070                     ?_checkButtons:	; 0 bytes @ 0x0
   323                           	global	?_main
   324  0070                     ?_main:	; 0 bytes @ 0x0
   325                           	global	?_ToggleEpinOfLCD
   326  0070                     ?_ToggleEpinOfLCD:	; 0 bytes @ 0x0
   327                           	global	?_CheckBusyLCD
   328  0070                     ?_CheckBusyLCD:	; 0 bytes @ 0x0
   329                           	global	?_WriteCommandToLCD
   330  0070                     ?_WriteCommandToLCD:	; 0 bytes @ 0x0
   331                           	global	?_WriteDataToLCD
   332  0070                     ?_WriteDataToLCD:	; 0 bytes @ 0x0
   333                           	global	?_ReadBusyFlagLCD
   334  0070                     ?_ReadBusyFlagLCD:	; 1 bytes @ 0x0
   335  0070                     	ds	5
   336                           	global	??_isdigit
   337  0075                     ??_isdigit:	; 0 bytes @ 0x5
   338                           	global	??_StartTimer1
   339  0075                     ??_StartTimer1:	; 0 bytes @ 0x5
   340                           	global	??_StopTimer1
   341  0075                     ??_StopTimer1:	; 0 bytes @ 0x5
   342                           	global	??_checkButtons
   343  0075                     ??_checkButtons:	; 0 bytes @ 0x5
   344                           	global	??_ToggleEpinOfLCD
   345  0075                     ??_ToggleEpinOfLCD:	; 0 bytes @ 0x5
   346                           	global	??_ReadBusyFlagLCD
   347  0075                     ??_ReadBusyFlagLCD:	; 0 bytes @ 0x5
   348                           	global	??___wmul
   349  0075                     ??___wmul:	; 0 bytes @ 0x5
   350                           	global	??___lwdiv
   351  0075                     ??___lwdiv:	; 0 bytes @ 0x5
   352                           	global	_isdigit$1683
   353  0075                     _isdigit$1683:	; 1 bytes @ 0x5
   354                           	global	___wmul@product
   355  0075                     ___wmul@product:	; 2 bytes @ 0x5
   356  0075                     	ds	1
   357                           	global	??_WriteCommandToLCD
   358  0076                     ??_WriteCommandToLCD:	; 0 bytes @ 0x6
   359                           	global	??___lwmod
   360  0076                     ??___lwmod:	; 0 bytes @ 0x6
   361                           	global	isdigit@c
   362  0076                     isdigit@c:	; 1 bytes @ 0x6
   363  0076                     	ds	1
   364                           	global	ReadBusyFlagLCD@data
   365  0077                     ReadBusyFlagLCD@data:	; 1 bytes @ 0x7
   366                           	global	___lwmod@counter
   367  0077                     ___lwmod@counter:	; 1 bytes @ 0x7
   368  0077                     	ds	1
   369                           	global	??_WriteStringToLCD
   370  0078                     ??_WriteStringToLCD:	; 0 bytes @ 0x8
   371                           	global	??_SetPosLCD
   372  0078                     ??_SetPosLCD:	; 0 bytes @ 0x8
   373                           	global	??_displayState
   374  0078                     ??_displayState:	; 0 bytes @ 0x8
   375                           psect	cstackBANK0,class=BANK0,space=1
   376                           global __pcstackBANK0
   377  0020                     __pcstackBANK0:
   378                           	global	??_CheckBusyLCD
   379  0020                     ??_CheckBusyLCD:	; 0 bytes @ 0x0
   380                           	global	?___wmul
   381  0020                     ?___wmul:	; 2 bytes @ 0x0
   382                           	global	?___lwdiv
   383  0020                     ?___lwdiv:	; 2 bytes @ 0x0
   384                           	global	WriteCommandToLCD@Command
   385  0020                     WriteCommandToLCD@Command:	; 1 bytes @ 0x0
   386                           	global	___wmul@multiplier
   387  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
   388                           	global	___lwdiv@divisor
   389  0020                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   390  0020                     	ds	1
   391                           	global	??_InitLCD
   392  0021                     ??_InitLCD:	; 0 bytes @ 0x1
   393                           	global	??_ClearLCD
   394  0021                     ??_ClearLCD:	; 0 bytes @ 0x1
   395                           	global	??_WriteDataToLCD
   396  0021                     ??_WriteDataToLCD:	; 0 bytes @ 0x1
   397                           	global	SetPosLCD@pos
   398  0021                     SetPosLCD@pos:	; 1 bytes @ 0x1
   399  0021                     	ds	1
   400                           	global	___wmul@multiplicand
   401  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   402                           	global	___lwdiv@dividend
   403  0022                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   404  0022                     	ds	1
   405                           	global	WriteDataToLCD@LCDChar
   406  0023                     WriteDataToLCD@LCDChar:	; 1 bytes @ 0x3
   407  0023                     	ds	1
   408                           	global	?_WriteStringToLCD
   409  0024                     ?_WriteStringToLCD:	; 0 bytes @ 0x4
   410                           	global	___lwdiv@counter
   411  0024                     ___lwdiv@counter:	; 1 bytes @ 0x4
   412                           	global	WriteStringToLCD@str
   413  0024                     WriteStringToLCD@str:	; 2 bytes @ 0x4
   414  0024                     	ds	1
   415                           	global	___lwdiv@quotient
   416  0025                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   417  0025                     	ds	2
   418                           	global	?___lwmod
   419  0027                     ?___lwmod:	; 2 bytes @ 0x7
   420                           	global	___lwmod@divisor
   421  0027                     ___lwmod@divisor:	; 2 bytes @ 0x7
   422  0027                     	ds	2
   423                           	global	___lwmod@dividend
   424  0029                     ___lwmod@dividend:	; 2 bytes @ 0x9
   425  0029                     	ds	2
   426                           	global	?_sprintf
   427  002B                     ?_sprintf:	; 2 bytes @ 0xB
   428                           	global	sprintf@f
   429  002B                     sprintf@f:	; 1 bytes @ 0xB
   430  002B                     	ds	5
   431                           	global	??_sprintf
   432  0030                     ??_sprintf:	; 0 bytes @ 0x10
   433  0030                     	ds	3
   434                           	global	sprintf@ap
   435  0033                     sprintf@ap:	; 1 bytes @ 0x13
   436  0033                     	ds	1
   437                           	global	sprintf@flag
   438  0034                     sprintf@flag:	; 1 bytes @ 0x14
   439  0034                     	ds	1
   440                           	global	sprintf@_val
   441  0035                     sprintf@_val:	; 4 bytes @ 0x15
   442  0035                     	ds	4
   443                           	global	sprintf@prec
   444  0039                     sprintf@prec:	; 1 bytes @ 0x19
   445  0039                     	ds	1
   446                           	global	sprintf@sp
   447  003A                     sprintf@sp:	; 1 bytes @ 0x1A
   448  003A                     	ds	1
   449                           	global	sprintf@width
   450  003B                     sprintf@width:	; 2 bytes @ 0x1B
   451  003B                     	ds	2
   452                           	global	sprintf@c
   453  003D                     sprintf@c:	; 1 bytes @ 0x1D
   454  003D                     	ds	1
   455                           	global	?_displayTime
   456  003E                     ?_displayTime:	; 0 bytes @ 0x1E
   457                           	global	displayTime@t
   458  003E                     displayTime@t:	; 2 bytes @ 0x1E
   459  003E                     	ds	2
   460                           	global	??_displayTime
   461  0040                     ??_displayTime:	; 0 bytes @ 0x20
   462  0040                     	ds	5
   463                           	global	displayTime@buffer
   464  0045                     displayTime@buffer:	; 8 bytes @ 0x25
   465  0045                     	ds	8
   466                           	global	displayTime@min
   467  004D                     displayTime@min:	; 1 bytes @ 0x2D
   468  004D                     	ds	1
   469                           	global	displayTime@sec
   470  004E                     displayTime@sec:	; 1 bytes @ 0x2E
   471  004E                     	ds	1
   472                           	global	??_main
   473  004F                     ??_main:	; 0 bytes @ 0x2F
   474  004F                     	ds	2
   475 ;;Data sizes: Strings 38, constant 10, data 0, bss 5, persistent 0 stack 0
   476 ;;Auto spaces:   Size  Autos    Used
   477 ;; COMMON          14      8       9
   478 ;; BANK0           80     49      54
   479 ;; BANK1           80      0       0
   480 ;; BANK3           96      0       0
   481 ;; BANK2           96      0       0
   482                           
   483 ;;
   484 ;; Pointer list with targets:
   485                           
   486 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   487 ;;
   488 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   489 ;;
   490 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   491 ;;
   492 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 10
   493 ;;		 -> STR_1(CODE[10]), 
   494 ;;
   495 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 8
   496 ;;		 -> displayTime@buffer(BANK0[8]), 
   497 ;;
   498 ;; ?_sprintf	int  size(1) Largest target is 0
   499 ;;
   500 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   501 ;;		 -> ?_sprintf(BANK0[2]), 
   502 ;;
   503 ;; S1318$_cp	PTR const unsigned char  size(1) Largest target is 0
   504 ;;
   505 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   506 ;;
   507 ;; WriteStringToLCD@str	PTR const unsigned char  size(2) Largest target is 14
   508 ;;		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[14]), STR_2(CODE[14]), 
   509 ;;		 -> displayTime@buffer(BANK0[8]), 
   510 ;;
   511                           
   512                           
   513 ;;
   514 ;; Critical Paths under _main in COMMON
   515 ;;
   516 ;;   _displayTime->___lwmod
   517 ;;   _ClearLCD->_WriteCommandToLCD
   518 ;;   _InitLCD->_WriteCommandToLCD
   519 ;;   _SetPosLCD->_WriteCommandToLCD
   520 ;;   _WriteCommandToLCD->_ToggleEpinOfLCD
   521 ;;   _CheckBusyLCD->_ReadBusyFlagLCD
   522 ;;   _sprintf->___lwmod
   523 ;;   ___lwmod->___lwdiv
   524 ;;
   525 ;; Critical Paths under _ISR in COMMON
   526 ;;
   527 ;;   None.
   528 ;;
   529 ;; Critical Paths under _main in BANK0
   530 ;;
   531 ;;   _displayState->_displayTime
   532 ;;   _displayTime->_sprintf
   533 ;;   _WriteStringToLCD->_WriteDataToLCD
   534 ;;   _WriteDataToLCD->_CheckBusyLCD
   535 ;;   _ClearLCD->_CheckBusyLCD
   536 ;;   _ClearLCD->_WriteCommandToLCD
   537 ;;   _InitLCD->_WriteCommandToLCD
   538 ;;   _SetPosLCD->_CheckBusyLCD
   539 ;;   _SetPosLCD->_WriteCommandToLCD
   540 ;;   _sprintf->___lwmod
   541 ;;   ___lwmod->___lwdiv
   542 ;;
   543 ;; Critical Paths under _ISR in BANK0
   544 ;;
   545 ;;   None.
   546 ;;
   547 ;; Critical Paths under _main in BANK1
   548 ;;
   549 ;;   None.
   550 ;;
   551 ;; Critical Paths under _ISR in BANK1
   552 ;;
   553 ;;   None.
   554 ;;
   555 ;; Critical Paths under _main in BANK3
   556 ;;
   557 ;;   None.
   558 ;;
   559 ;; Critical Paths under _ISR in BANK3
   560 ;;
   561 ;;   None.
   562 ;;
   563 ;; Critical Paths under _main in BANK2
   564 ;;
   565 ;;   None.
   566 ;;
   567 ;; Critical Paths under _ISR in BANK2
   568 ;;
   569 ;;   None.
   570                           
   571 ;;
   572 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   573 ;;
   574                           
   575 ;;
   576 ;;Call Graph Tables:
   577 ;;
   578 ;; ---------------------------------------------------------------------------------
   579 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   580 ;; ---------------------------------------------------------------------------------
   581 ;; (0) _main                                                 2     2      0    3006
   582 ;;                                             47 BANK0      2     2      0
   583 ;;                            _InitLCD
   584 ;;                           _ClearLCD
   585 ;;                       _checkButtons
   586 ;;                       _displayState
   587 ;; ---------------------------------------------------------------------------------
   588 ;; (1) _displayState                                         0     0      0    2858
   589 ;;                          _SetPosLCD
   590 ;;                   _WriteStringToLCD
   591 ;;                        _displayTime
   592 ;; ---------------------------------------------------------------------------------
   593 ;; (2) _displayTime                                         17    15      2    2590
   594 ;;                                             30 BANK0     17    15      2
   595 ;;                            ___lwdiv
   596 ;;                            ___lwmod
   597 ;;                            _sprintf
   598 ;;                   _WriteStringToLCD
   599 ;; ---------------------------------------------------------------------------------
   600 ;; (3) _WriteStringToLCD                                     2     0      2     151
   601 ;;                                              4 BANK0      2     0      2
   602 ;;                     _WriteDataToLCD
   603 ;; ---------------------------------------------------------------------------------
   604 ;; (4) _WriteDataToLCD                                       3     3      0      86
   605 ;;                                              1 BANK0      3     3      0
   606 ;;                       _CheckBusyLCD
   607 ;;                    _ToggleEpinOfLCD
   608 ;; ---------------------------------------------------------------------------------
   609 ;; (1) _ClearLCD                                             2     2      0      86
   610 ;;                                              1 BANK0      2     2      0
   611 ;;                       _CheckBusyLCD
   612 ;;                  _WriteCommandToLCD
   613 ;; ---------------------------------------------------------------------------------
   614 ;; (1) _InitLCD                                              2     2      0      62
   615 ;;                                              1 BANK0      2     2      0
   616 ;;                    _ToggleEpinOfLCD
   617 ;;                  _WriteCommandToLCD
   618 ;; ---------------------------------------------------------------------------------
   619 ;; (2) _SetPosLCD                                            1     1      0     117
   620 ;;                                              1 BANK0      1     1      0
   621 ;;                       _CheckBusyLCD
   622 ;;                  _WriteCommandToLCD
   623 ;; ---------------------------------------------------------------------------------
   624 ;; (3) _WriteCommandToLCD                                    3     3      0      62
   625 ;;                                              6 COMMON     2     2      0
   626 ;;                                              0 BANK0      1     1      0
   627 ;;                    _ToggleEpinOfLCD
   628 ;; ---------------------------------------------------------------------------------
   629 ;; (5) _CheckBusyLCD                                         1     1      0      24
   630 ;;                                              0 BANK0      1     1      0
   631 ;;                    _ReadBusyFlagLCD
   632 ;; ---------------------------------------------------------------------------------
   633 ;; (6) _ReadBusyFlagLCD                                      3     3      0      24
   634 ;;                                              5 COMMON     3     3      0
   635 ;; ---------------------------------------------------------------------------------
   636 ;; (5) _ToggleEpinOfLCD                                      1     1      0       0
   637 ;;                                              5 COMMON     1     1      0
   638 ;; ---------------------------------------------------------------------------------
   639 ;; (1) _checkButtons                                         1     1      0       0
   640 ;;                                              5 COMMON     1     1      0
   641 ;;                         _StopTimer1
   642 ;;                        _StartTimer1
   643 ;; ---------------------------------------------------------------------------------
   644 ;; (3) _sprintf                                             19    14      5    1738
   645 ;;                                             11 BANK0     19    14      5
   646 ;;                            _isdigit
   647 ;;                             ___wmul
   648 ;;                            ___lwdiv
   649 ;;                            ___lwmod
   650 ;; ---------------------------------------------------------------------------------
   651 ;; (4) ___lwmod                                              6     2      4     232
   652 ;;                                              6 COMMON     2     2      0
   653 ;;                                              7 BANK0      4     0      4
   654 ;;                            ___lwdiv (ARG)
   655 ;; ---------------------------------------------------------------------------------
   656 ;; (4) ___lwdiv                                              8     4      4     241
   657 ;;                                              5 COMMON     1     1      0
   658 ;;                                              0 BANK0      7     3      4
   659 ;; ---------------------------------------------------------------------------------
   660 ;; (4) ___wmul                                               6     2      4     136
   661 ;;                                              5 COMMON     2     2      0
   662 ;;                                              0 BANK0      4     0      4
   663 ;; ---------------------------------------------------------------------------------
   664 ;; (4) _isdigit                                              2     2      0      68
   665 ;;                                              5 COMMON     2     2      0
   666 ;; ---------------------------------------------------------------------------------
   667 ;; (2) _StopTimer1                                           0     0      0       0
   668 ;; ---------------------------------------------------------------------------------
   669 ;; (2) _StartTimer1                                          0     0      0       0
   670 ;; ---------------------------------------------------------------------------------
   671 ;; Estimated maximum stack depth 6
   672 ;; ---------------------------------------------------------------------------------
   673 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   674 ;; ---------------------------------------------------------------------------------
   675 ;; (7) _ISR                                                  5     5      0       0
   676 ;;                                              0 COMMON     5     5      0
   677 ;; ---------------------------------------------------------------------------------
   678 ;; Estimated maximum stack depth 7
   679 ;; ---------------------------------------------------------------------------------
   680                           
   681 ;; Call Graph Graphs:
   682                           
   683 ;; _main (ROOT)
   684 ;;   _InitLCD
   685 ;;     _ToggleEpinOfLCD
   686 ;;     _WriteCommandToLCD
   687 ;;       _ToggleEpinOfLCD
   688 ;;   _ClearLCD
   689 ;;     _CheckBusyLCD
   690 ;;       _ReadBusyFlagLCD
   691 ;;     _WriteCommandToLCD
   692 ;;       _ToggleEpinOfLCD
   693 ;;   _checkButtons
   694 ;;     _StopTimer1
   695 ;;     _StartTimer1
   696 ;;   _displayState
   697 ;;     _SetPosLCD
   698 ;;       _CheckBusyLCD
   699 ;;         _ReadBusyFlagLCD
   700 ;;       _WriteCommandToLCD
   701 ;;         _ToggleEpinOfLCD
   702 ;;     _WriteStringToLCD
   703 ;;       _WriteDataToLCD
   704 ;;         _CheckBusyLCD
   705 ;;           _ReadBusyFlagLCD
   706 ;;         _ToggleEpinOfLCD
   707 ;;     _displayTime
   708 ;;       ___lwdiv
   709 ;;       ___lwmod
   710 ;;         ___lwdiv (ARG)
   711 ;;       _sprintf
   712 ;;         _isdigit
   713 ;;         ___wmul
   714 ;;         ___lwdiv
   715 ;;         ___lwmod
   716 ;;           ___lwdiv (ARG)
   717 ;;       _WriteStringToLCD
   718 ;;         _WriteDataToLCD
   719 ;;           _CheckBusyLCD
   720 ;;             _ReadBusyFlagLCD
   721 ;;           _ToggleEpinOfLCD
   722 ;;
   723 ;; _ISR (ROOT)
   724 ;;
   725                           
   726 ;; Address spaces:
   727                           
   728 ;;Name               Size   Autos  Total    Cost      Usage
   729 ;;BITCOMMON            E      0       1       0        7.1%
   730 ;;EEDATA             100      0       0       0        0.0%
   731 ;;NULL                 0      0       0       0        0.0%
   732 ;;CODE                 0      0       0       0        0.0%
   733 ;;COMMON               E      8       9       1       64.3%
   734 ;;BITSFR0              0      0       0       1        0.0%
   735 ;;SFR0                 0      0       0       1        0.0%
   736 ;;BITSFR1              0      0       0       2        0.0%
   737 ;;SFR1                 0      0       0       2        0.0%
   738 ;;STACK                0      0       6       2        0.0%
   739 ;;ABS                  0      0      3F       3        0.0%
   740 ;;BITBANK0            50      0       0       4        0.0%
   741 ;;BITSFR3              0      0       0       4        0.0%
   742 ;;SFR3                 0      0       0       4        0.0%
   743 ;;BANK0               50     31      36       5       67.5%
   744 ;;BITSFR2              0      0       0       5        0.0%
   745 ;;SFR2                 0      0       0       5        0.0%
   746 ;;BITBANK1            50      0       0       6        0.0%
   747 ;;BANK1               50      0       0       7        0.0%
   748 ;;BITBANK3            60      0       0       8        0.0%
   749 ;;BANK3               60      0       0       9        0.0%
   750 ;;BITBANK2            60      0       0      10        0.0%
   751 ;;BANK2               60      0       0      11        0.0%
   752 ;;DATA                 0      0      45      12        0.0%
   753                           
   754                           	global	_main
   755                           psect	maintext,global,class=CODE,delta=2
   756                           global __pmaintext
   757  04CA                     __pmaintext:
   758                           
   759 ;; *************** function _main *****************
   760 ;; Defined at:
   761 ;;		line 193 in file "C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;		None               void
   768 ;; Registers used:
   769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 17F/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   775 ;;      Params:         0       0       0       0       0
   776 ;;      Locals:         0       0       0       0       0
   777 ;;      Temps:          0       2       0       0       0
   778 ;;      Totals:         0       2       0       0       0
   779 ;;Total ram usage:        2 bytes
   780 ;; Hardware stack levels required when called:    7
   781 ;; This function calls:
   782 ;;		_InitLCD
   783 ;;		_ClearLCD
   784 ;;		_checkButtons
   785 ;;		_displayState
   786 ;; This function is called by:
   787 ;;		Startup code after reset
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           psect	maintext
   791                           	file	"C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
   792                           	line	193
   793                           	global	__size_of_main
   794  003A                     	__size_of_main	equ	__end_of_main-_main
   795                           	
   796  04CA                     _main:	
   797                           	opt	stack 1
   798                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   799                           	line	195
   800                           	
   801  04CA                     l3942:	
   802                           ;temporizador.c: 195: TRISA = 0b11111000;
   803  04CA  30F8               	movlw	(0F8h)
   804  04CB  1683               	bsf	status, 5	;RP0=1, select bank1
   805  04CC  1303               	bcf	status, 6	;RP1=0, select bank1
   806  04CD  0085               	movwf	(133)^080h	;volatile
   807                           	line	196
   808                           ;temporizador.c: 196: TRISB = 0b11110000;
   809  04CE  30F0               	movlw	(0F0h)
   810  04CF  0086               	movwf	(134)^080h	;volatile
   811                           	line	197
   812                           ;temporizador.c: 197: TRISD = 0b11111111;
   813  04D0  30FF               	movlw	(0FFh)
   814  04D1  0088               	movwf	(136)^080h	;volatile
   815                           	line	199
   816                           ;temporizador.c: 199: ADCON1 = 0b00000110;
   817  04D2  3006               	movlw	(06h)
   818  04D3  009F               	movwf	(159)^080h	;volatile
   819                           	line	202
   820                           	
   821  04D4                     l3944:	
   822                           ;temporizador.c: 202: time = 0;
   823  04D4  1283               	bcf	status, 5	;RP0=0, select bank0
   824  04D5  1303               	bcf	status, 6	;RP1=0, select bank0
   825  04D6  01D1               	clrf	(_time)
   826  04D7  01D2               	clrf	(_time+1)
   827                           	line	203
   828                           	
   829  04D8                     l3946:	
   830                           ;temporizador.c: 203: mode = 0;
   831  04D8  01D4               	clrf	(_mode)
   832                           	line	204
   833                           	
   834  04D9                     l3948:	
   835                           ;temporizador.c: 204: running = 0;
   836  04D9  01D5               	clrf	(_running)
   837                           	line	205
   838                           	
   839  04DA                     l3950:	
   840                           ;temporizador.c: 205: halfSecCount = 0;
   841  04DA  01D3               	clrf	(_halfSecCount)
   842                           	line	208
   843                           	
   844  04DB                     l3952:	
   845                           ;temporizador.c: 208: InitLCD();
   846  04DB  120A  118A  227D   	fcall	_InitLCD
              120A  118A         
   847                           	line	209
   848                           	
   849  04E0                     l3954:	
   850                           ;temporizador.c: 209: ClearLCD();
   851  04E0  120A  118A  25F8   	fcall	_ClearLCD
              120A  118A         
   852                           	line	211
   853                           	
   854  04E5                     l3956:	
   855                           ;temporizador.c: 211: RB0 = 0;
   856  04E5  1283               	bcf	status, 5	;RP0=0, select bank0
   857  04E6  1303               	bcf	status, 6	;RP1=0, select bank0
   858  04E7  1006               	bcf	(48/8),(48)&7
   859                           	line	212
   860                           	
   861  04E8                     l3958:	
   862                           ;temporizador.c: 212: RB1 = 0;
   863  04E8  1086               	bcf	(49/8),(49)&7
   864  04E9  2CEA               	goto	l3960
   865                           	line	215
   866                           ;temporizador.c: 215: while (1)
   867                           	
   868  04EA                     l754:	
   869                           	line	217
   870                           	
   871  04EA                     l3960:	
   872                           ;temporizador.c: 216: {
   873                           ;temporizador.c: 217: checkButtons();
   874  04EA  120A  118A  21D5   	fcall	_checkButtons
              120A  118A         
   875                           	line	218
   876                           	
   877  04EF                     l3962:	
   878                           ;temporizador.c: 218: displayState();
   879  04EF  120A  118A  23F7   	fcall	_displayState
              120A  118A         
   880                           	line	219
   881                           	
   882  04F4                     l3964:	
   883                           ;temporizador.c: 219: _delay((unsigned long)((50)*(4000000/4000.0)));
   884                           	opt asmopt_off
   885  04F4  3041               movlw	65
   886  04F5  1283               	bcf	status, 5	;RP0=0, select bank0
   887  04F6  1303               	bcf	status, 6	;RP1=0, select bank0
   888  04F7  00D0               movwf	((??_main+0)+0+1),f
   889  04F8  30EE               	movlw	238
   890  04F9  00CF               movwf	((??_main+0)+0),f
   891  04FA                     u3757:
   892  04FA  0BCF               	decfsz	((??_main+0)+0),f
   893  04FB  2CFA               	goto	u3757
   894  04FC  0BD0               	decfsz	((??_main+0)+0+1),f
   895  04FD  2CFA               	goto	u3757
   896  04FE  0064               	clrwdt
   897                           opt asmopt_on
   898                           
   899  04FF  2CEA               	goto	l3960
   900                           	line	220
   901                           	
   902  0500                     l755:	
   903                           	line	215
   904  0500  2CEA               	goto	l3960
   905                           	
   906  0501                     l756:	
   907                           	line	221
   908                           	
   909  0501                     l757:	
   910                           	global	start
   911  0501  120A  118A  2812   	ljmp	start
   912                           	opt stack 0
   913                           GLOBAL	__end_of_main
   914  0504                     	__end_of_main:
   915 ;; =============== function _main ends ============
   916                           
   917                           	signat	_main,88
   918                           	global	_displayState
   919                           psect	text706,local,class=CODE,delta=2
   920                           global __ptext706
   921  03F7                     __ptext706:
   922                           
   923 ;; *************** function _displayState *****************
   924 ;; Defined at:
   925 ;;		line 110 in file "C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;		None
   928 ;; Auto vars:     Size  Location     Type
   929 ;;		None
   930 ;; Return value:  Size  Location     Type
   931 ;;		None               void
   932 ;; Registers used:
   933 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   939 ;;      Params:         0       0       0       0       0
   940 ;;      Locals:         0       0       0       0       0
   941 ;;      Temps:          0       0       0       0       0
   942 ;;      Totals:         0       0       0       0       0
   943 ;;Total ram usage:        0 bytes
   944 ;; Hardware stack levels used:    1
   945 ;; Hardware stack levels required when called:    6
   946 ;; This function calls:
   947 ;;		_SetPosLCD
   948 ;;		_WriteStringToLCD
   949 ;;		_displayTime
   950 ;; This function is called by:
   951 ;;		_main
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           psect	text706
   955                           	file	"C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
   956                           	line	110
   957                           	global	__size_of_displayState
   958  004D                     	__size_of_displayState	equ	__end_of_displayState-_displayState
   959                           	
   960  03F7                     _displayState:	
   961                           	opt	stack 1
   962                           ; Regs used in _displayState: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   963                           	line	111
   964                           	
   965  03F7                     l3926:	
   966                           ;temporizador.c: 111: SetPosLCD(0x00);
   967  03F7  3000               	movlw	(0)
   968  03F8  120A  118A  2624   	fcall	_SetPosLCD
              120A  118A         
   969                           	line	112
   970                           	
   971  03FD                     l3928:	
   972                           ;temporizador.c: 112: if (mode == 0)
   973  03FD  1283               	bcf	status, 5	;RP0=0, select bank0
   974  03FE  1303               	bcf	status, 6	;RP1=0, select bank0
   975  03FF  08D4               	movf	(_mode),f
   976  0400  1D03               	skipz
   977  0401  2C03               	goto	u3741
   978  0402  2C04               	goto	u3740
   979  0403                     u3741:
   980  0403  2C0E               	goto	l3932
   981  0404                     u3740:
   982                           	line	114
   983                           	
   984  0404                     l3930:	
   985                           ;temporizador.c: 113: {
   986                           ;temporizador.c: 114: WriteStringToLCD("STOPWATCH    ");
   987  0404  3019               	movlw	low((STR_2-__stringbase))
   988  0405  00A4               	movwf	(?_WriteStringToLCD)
   989  0406  3080               	movlw	80h
   990  0407  00A5               	movwf	(?_WriteStringToLCD+1)
   991  0408  120A  118A  25A0   	fcall	_WriteStringToLCD
              120A  118A         
   992                           	line	115
   993                           ;temporizador.c: 115: }
   994  040D  2C1A               	goto	l3934
   995                           	line	116
   996                           	
   997  040E                     l725:	
   998                           	line	118
   999                           	
  1000  040E                     l3932:	
  1001                           ;temporizador.c: 116: else
  1002                           ;temporizador.c: 117: {
  1003                           ;temporizador.c: 118: WriteStringToLCD("TIMER        ");
  1004  040E  300B               	movlw	low((STR_3-__stringbase))
  1005  040F  1283               	bcf	status, 5	;RP0=0, select bank0
  1006  0410  1303               	bcf	status, 6	;RP1=0, select bank0
  1007  0411  00A4               	movwf	(?_WriteStringToLCD)
  1008  0412  3080               	movlw	80h
  1009  0413  00A5               	movwf	(?_WriteStringToLCD+1)
  1010  0414  120A  118A  25A0   	fcall	_WriteStringToLCD
              120A  118A         
  1011  0419  2C1A               	goto	l3934
  1012                           	line	119
  1013                           	
  1014  041A                     l726:	
  1015                           	line	121
  1016                           	
  1017  041A                     l3934:	
  1018                           ;temporizador.c: 119: }
  1019                           ;temporizador.c: 121: SetPosLCD(0x40);
  1020  041A  3040               	movlw	(040h)
  1021  041B  120A  118A  2624   	fcall	_SetPosLCD
              120A  118A         
  1022                           	line	122
  1023                           	
  1024  0420                     l3936:	
  1025                           ;temporizador.c: 122: WriteStringToLCD("    ");
  1026  0420  3014               	movlw	low((STR_4-__stringbase))
  1027  0421  1283               	bcf	status, 5	;RP0=0, select bank0
  1028  0422  1303               	bcf	status, 6	;RP1=0, select bank0
  1029  0423  00A4               	movwf	(?_WriteStringToLCD)
  1030  0424  3080               	movlw	80h
  1031  0425  00A5               	movwf	(?_WriteStringToLCD+1)
  1032  0426  120A  118A  25A0   	fcall	_WriteStringToLCD
              120A  118A         
  1033                           	line	123
  1034                           	
  1035  042B                     l3938:	
  1036                           ;temporizador.c: 123: displayTime(time);
  1037  042B  1283               	bcf	status, 5	;RP0=0, select bank0
  1038  042C  1303               	bcf	status, 6	;RP1=0, select bank0
  1039  042D  0852               	movf	(_time+1),w
  1040  042E  01BF               	clrf	(?_displayTime+1)
  1041  042F  07BF               	addwf	(?_displayTime+1)
  1042  0430  0851               	movf	(_time),w
  1043  0431  01BE               	clrf	(?_displayTime)
  1044  0432  07BE               	addwf	(?_displayTime)
  1045                           
  1046  0433  120A  118A  2308   	fcall	_displayTime
              120A  118A         
  1047                           	line	124
  1048                           	
  1049  0438                     l3940:	
  1050                           ;temporizador.c: 124: WriteStringToLCD("    ");
  1051  0438  3014               	movlw	low((STR_5-__stringbase))
  1052  0439  1283               	bcf	status, 5	;RP0=0, select bank0
  1053  043A  1303               	bcf	status, 6	;RP1=0, select bank0
  1054  043B  00A4               	movwf	(?_WriteStringToLCD)
  1055  043C  3080               	movlw	80h
  1056  043D  00A5               	movwf	(?_WriteStringToLCD+1)
  1057  043E  120A  118A  25A0   	fcall	_WriteStringToLCD
              120A  118A         
  1058                           	line	125
  1059                           	
  1060  0443                     l727:	
  1061  0443  0008               	return
  1062                           	opt stack 0
  1063                           GLOBAL	__end_of_displayState
  1064  0444                     	__end_of_displayState:
  1065 ;; =============== function _displayState ends ============
  1066                           
  1067                           	signat	_displayState,88
  1068                           	global	_displayTime
  1069                           psect	text707,local,class=CODE,delta=2
  1070                           global __ptext707
  1071  0308                     __ptext707:
  1072                           
  1073 ;; *************** function _displayTime *****************
  1074 ;; Defined at:
  1075 ;;		line 101 in file "C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  t               2   30[BANK0 ] unsigned int 
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;  buffer          8   37[BANK0 ] unsigned char [8]
  1080 ;;  sec             1   46[BANK0 ] unsigned char 
  1081 ;;  min             1   45[BANK0 ] unsigned char 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;		None               void
  1084 ;; Registers used:
  1085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1091 ;;      Params:         0       2       0       0       0
  1092 ;;      Locals:         0      10       0       0       0
  1093 ;;      Temps:          0       5       0       0       0
  1094 ;;      Totals:         0      17       0       0       0
  1095 ;;Total ram usage:       17 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    5
  1098 ;; This function calls:
  1099 ;;		___lwdiv
  1100 ;;		___lwmod
  1101 ;;		_sprintf
  1102 ;;		_WriteStringToLCD
  1103 ;; This function is called by:
  1104 ;;		_displayState
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           psect	text707
  1108                           	file	"C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  1109                           	line	101
  1110                           	global	__size_of_displayTime
  1111  0050                     	__size_of_displayTime	equ	__end_of_displayTime-_displayTime
  1112                           	
  1113  0308                     _displayTime:	
  1114                           	opt	stack 1
  1115                           ; Regs used in _displayTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1116                           	line	103
  1117                           	
  1118  0308                     l3920:	
  1119                           ;temporizador.c: 102: char buffer[8];
  1120                           ;temporizador.c: 103: unsigned char min = t / 60;
  1121  0308  303C               	movlw	low(03Ch)
  1122  0309  1283               	bcf	status, 5	;RP0=0, select bank0
  1123  030A  1303               	bcf	status, 6	;RP1=0, select bank0
  1124  030B  00A0               	movwf	(?___lwdiv)
  1125  030C  3000               	movlw	high(03Ch)
  1126  030D  00A1               	movwf	((?___lwdiv))+1
  1127  030E  083F               	movf	(displayTime@t+1),w
  1128  030F  01A3               	clrf	1+(?___lwdiv)+02h
  1129  0310  07A3               	addwf	1+(?___lwdiv)+02h
  1130  0311  083E               	movf	(displayTime@t),w
  1131  0312  01A2               	clrf	0+(?___lwdiv)+02h
  1132  0313  07A2               	addwf	0+(?___lwdiv)+02h
  1133                           
  1134  0314  120A  118A  2358   	fcall	___lwdiv
              120A  118A         
  1135  0319  1283               	bcf	status, 5	;RP0=0, select bank0
  1136  031A  1303               	bcf	status, 6	;RP1=0, select bank0
  1137  031B  0820               	movf	(0+(?___lwdiv)),w
  1138  031C  00C0               	movwf	(??_displayTime+0)+0
  1139  031D  0840               	movf	(??_displayTime+0)+0,w
  1140  031E  00CD               	movwf	(displayTime@min)
  1141                           	line	104
  1142                           ;temporizador.c: 104: unsigned char sec = t % 60;
  1143  031F  303C               	movlw	low(03Ch)
  1144  0320  00A7               	movwf	(?___lwmod)
  1145  0321  3000               	movlw	high(03Ch)
  1146  0322  00A8               	movwf	((?___lwmod))+1
  1147  0323  083F               	movf	(displayTime@t+1),w
  1148  0324  01AA               	clrf	1+(?___lwmod)+02h
  1149  0325  07AA               	addwf	1+(?___lwmod)+02h
  1150  0326  083E               	movf	(displayTime@t),w
  1151  0327  01A9               	clrf	0+(?___lwmod)+02h
  1152  0328  07A9               	addwf	0+(?___lwmod)+02h
  1153                           
  1154  0329  120A  118A  2444   	fcall	___lwmod
              120A  118A         
  1155  032E  1283               	bcf	status, 5	;RP0=0, select bank0
  1156  032F  1303               	bcf	status, 6	;RP1=0, select bank0
  1157  0330  0827               	movf	(0+(?___lwmod)),w
  1158  0331  00C0               	movwf	(??_displayTime+0)+0
  1159  0332  0840               	movf	(??_displayTime+0)+0,w
  1160  0333  00CE               	movwf	(displayTime@sec)
  1161                           	line	105
  1162                           	
  1163  0334                     l3922:	
  1164                           ;temporizador.c: 105: sprintf(buffer, "%02u:%02u", min, sec);
  1165  0334  3027               	movlw	((STR_1-__stringbase))&0ffh
  1166  0335  00C0               	movwf	(??_displayTime+0)+0
  1167  0336  0840               	movf	(??_displayTime+0)+0,w
  1168  0337  00AB               	movwf	(?_sprintf)
  1169  0338  084D               	movf	(displayTime@min),w
  1170  0339  00C1               	movwf	(??_displayTime+1)+0
  1171  033A  01C2               	clrf	(??_displayTime+1)+0+1
  1172  033B  0841               	movf	0+(??_displayTime+1)+0,w
  1173  033C  00AC               	movwf	0+(?_sprintf)+01h
  1174  033D  0842               	movf	1+(??_displayTime+1)+0,w
  1175  033E  00AD               	movwf	1+(?_sprintf)+01h
  1176  033F  084E               	movf	(displayTime@sec),w
  1177  0340  00C3               	movwf	(??_displayTime+3)+0
  1178  0341  01C4               	clrf	(??_displayTime+3)+0+1
  1179  0342  0843               	movf	0+(??_displayTime+3)+0,w
  1180  0343  00AE               	movwf	0+(?_sprintf)+03h
  1181  0344  0844               	movf	1+(??_displayTime+3)+0,w
  1182  0345  00AF               	movwf	1+(?_sprintf)+03h
  1183  0346  3045               	movlw	(displayTime@buffer)&0ffh
  1184  0347  120A  118A  2015   	fcall	_sprintf
              120A  118A         
  1185                           	line	106
  1186                           	
  1187  034C                     l3924:	
  1188                           ;temporizador.c: 106: WriteStringToLCD(buffer);
  1189  034C  3045               	movlw	(displayTime@buffer&0ffh)
  1190  034D  1283               	bcf	status, 5	;RP0=0, select bank0
  1191  034E  1303               	bcf	status, 6	;RP1=0, select bank0
  1192  034F  00A4               	movwf	(?_WriteStringToLCD)
  1193  0350  3000               	movlw	(0x0/2)
  1194  0351  00A5               	movwf	(?_WriteStringToLCD+1)
  1195  0352  120A  118A  25A0   	fcall	_WriteStringToLCD
              120A  118A         
  1196                           	line	107
  1197                           	
  1198  0357                     l722:	
  1199  0357  0008               	return
  1200                           	opt stack 0
  1201                           GLOBAL	__end_of_displayTime
  1202  0358                     	__end_of_displayTime:
  1203 ;; =============== function _displayTime ends ============
  1204                           
  1205                           	signat	_displayTime,4216
  1206                           	global	_WriteStringToLCD
  1207                           psect	text708,local,class=CODE,delta=2
  1208                           global __ptext708
  1209  05A0                     __ptext708:
  1210                           
  1211 ;; *************** function _WriteStringToLCD *****************
  1212 ;; Defined at:
  1213 ;;		line 334 in file "C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  str             2    4[BANK0 ] PTR const unsigned char 
  1216 ;;		 -> STR_5(5), STR_4(5), STR_3(14), STR_2(14), 
  1217 ;;		 -> displayTime@buffer(8), 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;		None               void
  1222 ;; Registers used:
  1223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1229 ;;      Params:         0       2       0       0       0
  1230 ;;      Locals:         0       0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0
  1232 ;;      Totals:         0       2       0       0       0
  1233 ;;Total ram usage:        2 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; Hardware stack levels required when called:    4
  1236 ;; This function calls:
  1237 ;;		_WriteDataToLCD
  1238 ;; This function is called by:
  1239 ;;		_displayTime
  1240 ;;		_displayState
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           psect	text708
  1244                           	file	"C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  1245                           	line	334
  1246                           	global	__size_of_WriteStringToLCD
  1247  002C                     	__size_of_WriteStringToLCD	equ	__end_of_WriteStringToLCD-_WriteStringToLCD
  1248                           	
  1249  05A0                     _WriteStringToLCD:	
  1250                           	opt	stack 1
  1251                           ; Regs used in _WriteStringToLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1252                           	line	335
  1253                           	
  1254  05A0                     l3912:	
  1255                           ;temporizador.c: 335: while (*str)
  1256  05A0  2DBA               	goto	l3918
  1257                           	
  1258  05A1                     l788:	
  1259                           	line	337
  1260                           	
  1261  05A1                     l3914:	
  1262                           ;temporizador.c: 336: {
  1263                           ;temporizador.c: 337: WriteDataToLCD(*str++);
  1264  05A1  1283               	bcf	status, 5	;RP0=0, select bank0
  1265  05A2  1303               	bcf	status, 6	;RP1=0, select bank0
  1266  05A3  0825               	movf	(WriteStringToLCD@str+1),w
  1267  05A4  00FF               	movwf	btemp+1
  1268  05A5  0824               	movf	(WriteStringToLCD@str),w
  1269  05A6  0084               	movwf	fsr0
  1270  05A7  120A  118A  248A   	fcall	stringtab
              120A  118A         
  1271  05AC  120A  118A  253C   	fcall	_WriteDataToLCD
              120A  118A         
  1272                           	
  1273  05B1                     l3916:	
  1274  05B1  3001               	movlw	low(01h)
  1275  05B2  1283               	bcf	status, 5	;RP0=0, select bank0
  1276  05B3  1303               	bcf	status, 6	;RP1=0, select bank0
  1277  05B4  07A4               	addwf	(WriteStringToLCD@str),f
  1278  05B5  1803               	skipnc
  1279  05B6  0AA5               	incf	(WriteStringToLCD@str+1),f
  1280  05B7  3000               	movlw	high(01h)
  1281  05B8  07A5               	addwf	(WriteStringToLCD@str+1),f
  1282  05B9  2DBA               	goto	l3918
  1283                           	line	338
  1284                           	
  1285  05BA                     l787:	
  1286                           	line	335
  1287                           	
  1288  05BA                     l3918:	
  1289  05BA  1283               	bcf	status, 5	;RP0=0, select bank0
  1290  05BB  1303               	bcf	status, 6	;RP1=0, select bank0
  1291  05BC  0825               	movf	(WriteStringToLCD@str+1),w
  1292  05BD  00FF               	movwf	btemp+1
  1293  05BE  0824               	movf	(WriteStringToLCD@str),w
  1294  05BF  0084               	movwf	fsr0
  1295  05C0  120A  118A  248A   	fcall	stringtab
              120A  118A         
  1296  05C5  3800               	iorlw	0
  1297  05C6  1D03               	skipz
  1298  05C7  2DC9               	goto	u3731
  1299  05C8  2DCA               	goto	u3730
  1300  05C9                     u3731:
  1301  05C9  2DA1               	goto	l3914
  1302  05CA                     u3730:
  1303  05CA  2DCB               	goto	l790
  1304                           	
  1305  05CB                     l789:	
  1306                           	line	339
  1307                           	
  1308  05CB                     l790:	
  1309  05CB  0008               	return
  1310                           	opt stack 0
  1311                           GLOBAL	__end_of_WriteStringToLCD
  1312  05CC                     	__end_of_WriteStringToLCD:
  1313 ;; =============== function _WriteStringToLCD ends ============
  1314                           
  1315                           	signat	_WriteStringToLCD,4216
  1316                           	global	_WriteDataToLCD
  1317                           psect	text709,local,class=CODE,delta=2
  1318                           global __ptext709
  1319  053C                     __ptext709:
  1320                           
  1321 ;; *************** function _WriteDataToLCD *****************
  1322 ;; Defined at:
  1323 ;;		line 274 in file "C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  LCDChar         1    wreg     unsigned char 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;  LCDChar         1    3[BANK0 ] unsigned char 
  1328 ;; Return value:  Size  Location     Type
  1329 ;;		None               void
  1330 ;; Registers used:
  1331 ;;		wreg, status,2, status,0, pclath, cstack
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1337 ;;      Params:         0       0       0       0       0
  1338 ;;      Locals:         0       1       0       0       0
  1339 ;;      Temps:          0       2       0       0       0
  1340 ;;      Totals:         0       3       0       0       0
  1341 ;;Total ram usage:        3 bytes
  1342 ;; Hardware stack levels used:    1
  1343 ;; Hardware stack levels required when called:    3
  1344 ;; This function calls:
  1345 ;;		_CheckBusyLCD
  1346 ;;		_ToggleEpinOfLCD
  1347 ;; This function is called by:
  1348 ;;		_WriteStringToLCD
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           psect	text709
  1352                           	file	"C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  1353                           	line	274
  1354                           	global	__size_of_WriteDataToLCD
  1355  0037                     	__size_of_WriteDataToLCD	equ	__end_of_WriteDataToLCD-_WriteDataToLCD
  1356                           	
  1357  053C                     _WriteDataToLCD:	
  1358                           	opt	stack 1
  1359                           ; Regs used in _WriteDataToLCD: [wreg+status,2+status,0+pclath+cstack]
  1360                           ;WriteDataToLCD@LCDChar stored from wreg
  1361  053C  1283               	bcf	status, 5	;RP0=0, select bank0
  1362  053D  1303               	bcf	status, 6	;RP1=0, select bank0
  1363  053E  00A3               	movwf	(WriteDataToLCD@LCDChar)
  1364                           	line	275
  1365                           	
  1366  053F                     l3896:	
  1367                           ;temporizador.c: 275: CheckBusyLCD();
  1368  053F  120A  118A  2647   	fcall	_CheckBusyLCD
              120A  118A         
  1369                           	line	276
  1370                           	
  1371  0544                     l3898:	
  1372                           ;temporizador.c: 276: RA1 = 1;
  1373  0544  1283               	bcf	status, 5	;RP0=0, select bank0
  1374  0545  1303               	bcf	status, 6	;RP1=0, select bank0
  1375  0546  1485               	bsf	(41/8),(41)&7
  1376                           	line	277
  1377                           	
  1378  0547                     l3900:	
  1379                           ;temporizador.c: 277: RA2 = 0;
  1380  0547  1105               	bcf	(42/8),(42)&7
  1381                           	line	278
  1382                           	
  1383  0548                     l3902:	
  1384                           ;temporizador.c: 278: PORTB &= 0x0F;
  1385  0548  300F               	movlw	(0Fh)
  1386  0549  00A1               	movwf	(??_WriteDataToLCD+0)+0
  1387  054A  0821               	movf	(??_WriteDataToLCD+0)+0,w
  1388  054B  0586               	andwf	(6),f	;volatile
  1389                           	line	279
  1390                           	
  1391  054C                     l3904:	
  1392                           ;temporizador.c: 279: PORTB |= (LCDChar & 0xF0);
  1393  054C  0823               	movf	(WriteDataToLCD@LCDChar),w
  1394  054D  39F0               	andlw	0F0h
  1395  054E  00A1               	movwf	(??_WriteDataToLCD+0)+0
  1396  054F  0821               	movf	(??_WriteDataToLCD+0)+0,w
  1397  0550  0486               	iorwf	(6),f	;volatile
  1398                           	line	280
  1399                           ;temporizador.c: 280: ToggleEpinOfLCD();
  1400  0551  120A  118A  2636   	fcall	_ToggleEpinOfLCD
              120A  118A         
  1401                           	line	281
  1402                           	
  1403  0556                     l3906:	
  1404                           ;temporizador.c: 281: PORTB &= 0x0F;
  1405  0556  300F               	movlw	(0Fh)
  1406  0557  1283               	bcf	status, 5	;RP0=0, select bank0
  1407  0558  1303               	bcf	status, 6	;RP1=0, select bank0
  1408  0559  00A1               	movwf	(??_WriteDataToLCD+0)+0
  1409  055A  0821               	movf	(??_WriteDataToLCD+0)+0,w
  1410  055B  0586               	andwf	(6),f	;volatile
  1411                           	line	282
  1412                           	
  1413  055C                     l3908:	
  1414                           ;temporizador.c: 282: PORTB |= ((LCDChar << 4) & 0xF0);
  1415  055C  0823               	movf	(WriteDataToLCD@LCDChar),w
  1416  055D  00A1               	movwf	(??_WriteDataToLCD+0)+0
  1417  055E  3003               	movlw	(04h)-1
  1418  055F                     u3725:
  1419  055F  1003               	clrc
  1420  0560  0DA1               	rlf	(??_WriteDataToLCD+0)+0,f
  1421  0561  3EFF               	addlw	-1
  1422  0562  1D03               	skipz
  1423  0563  2D5F               	goto	u3725
  1424  0564  1003               	clrc
  1425  0565  0D21               	rlf	(??_WriteDataToLCD+0)+0,w
  1426  0566  39F0               	andlw	0F0h
  1427  0567  00A2               	movwf	(??_WriteDataToLCD+1)+0
  1428  0568  0822               	movf	(??_WriteDataToLCD+1)+0,w
  1429  0569  0486               	iorwf	(6),f	;volatile
  1430                           	line	283
  1431                           ;temporizador.c: 283: ToggleEpinOfLCD();
  1432  056A  120A  118A  2636   	fcall	_ToggleEpinOfLCD
              120A  118A         
  1433                           	line	284
  1434                           	
  1435  056F                     l3910:	
  1436                           ;temporizador.c: 284: RA1 = 0;
  1437  056F  1283               	bcf	status, 5	;RP0=0, select bank0
  1438  0570  1303               	bcf	status, 6	;RP1=0, select bank0
  1439  0571  1085               	bcf	(41/8),(41)&7
  1440                           	line	285
  1441                           	
  1442  0572                     l775:	
  1443  0572  0008               	return
  1444                           	opt stack 0
  1445                           GLOBAL	__end_of_WriteDataToLCD
  1446  0573                     	__end_of_WriteDataToLCD:
  1447 ;; =============== function _WriteDataToLCD ends ============
  1448                           
  1449                           	signat	_WriteDataToLCD,4216
  1450                           	global	_ClearLCD
  1451                           psect	text710,local,class=CODE,delta=2
  1452                           global __ptext710
  1453  05F8                     __ptext710:
  1454                           
  1455 ;; *************** function _ClearLCD *****************
  1456 ;; Defined at:
  1457 ;;		line 321 in file "C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;		None               void
  1464 ;; Registers used:
  1465 ;;		wreg, status,2, status,0, pclath, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1471 ;;      Params:         0       0       0       0       0
  1472 ;;      Locals:         0       0       0       0       0
  1473 ;;      Temps:          0       2       0       0       0
  1474 ;;      Totals:         0       2       0       0       0
  1475 ;;Total ram usage:        2 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; Hardware stack levels required when called:    3
  1478 ;; This function calls:
  1479 ;;		_CheckBusyLCD
  1480 ;;		_WriteCommandToLCD
  1481 ;; This function is called by:
  1482 ;;		_main
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           psect	text710
  1486                           	file	"C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  1487                           	line	321
  1488                           	global	__size_of_ClearLCD
  1489  0017                     	__size_of_ClearLCD	equ	__end_of_ClearLCD-_ClearLCD
  1490                           	
  1491  05F8                     _ClearLCD:	
  1492                           	opt	stack 4
  1493                           ; Regs used in _ClearLCD: [wreg+status,2+status,0+pclath+cstack]
  1494                           	line	322
  1495                           	
  1496  05F8                     l3892:	
  1497                           ;temporizador.c: 322: CheckBusyLCD();
  1498  05F8  120A  118A  2647   	fcall	_CheckBusyLCD
              120A  118A         
  1499                           	line	323
  1500                           ;temporizador.c: 323: WriteCommandToLCD(0x01);
  1501  05FD  3001               	movlw	(01h)
  1502  05FE  120A  118A  2573   	fcall	_WriteCommandToLCD
              120A  118A         
  1503                           	line	324
  1504                           	
  1505  0603                     l3894:	
  1506                           ;temporizador.c: 324: _delay((unsigned long)((2)*(4000000/4000.0)));
  1507                           	opt asmopt_off
  1508  0603  3003               movlw	3
  1509  0604  1283               	bcf	status, 5	;RP0=0, select bank0
  1510  0605  1303               	bcf	status, 6	;RP1=0, select bank0
  1511  0606  00A2               movwf	((??_ClearLCD+0)+0+1),f
  1512  0607  3097               	movlw	151
  1513  0608  00A1               movwf	((??_ClearLCD+0)+0),f
  1514  0609                     u3767:
  1515  0609  0BA1               	decfsz	((??_ClearLCD+0)+0),f
  1516  060A  2E09               	goto	u3767
  1517  060B  0BA2               	decfsz	((??_ClearLCD+0)+0+1),f
  1518  060C  2E09               	goto	u3767
  1519  060D  2E0E               	nop2
  1520                           opt asmopt_on
  1521                           
  1522                           	line	325
  1523                           	
  1524  060E                     l781:	
  1525  060E  0008               	return
  1526                           	opt stack 0
  1527                           GLOBAL	__end_of_ClearLCD
  1528  060F                     	__end_of_ClearLCD:
  1529 ;; =============== function _ClearLCD ends ============
  1530                           
  1531                           	signat	_ClearLCD,88
  1532                           	global	_InitLCD
  1533                           psect	text711,local,class=CODE,delta=2
  1534                           global __ptext711
  1535  027D                     __ptext711:
  1536                           
  1537 ;; *************** function _InitLCD *****************
  1538 ;; Defined at:
  1539 ;;		line 288 in file "C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;		None
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;		None
  1544 ;; Return value:  Size  Location     Type
  1545 ;;		None               void
  1546 ;; Registers used:
  1547 ;;		wreg, status,2, status,0, pclath, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1553 ;;      Params:         0       0       0       0       0
  1554 ;;      Locals:         0       0       0       0       0
  1555 ;;      Temps:          0       2       0       0       0
  1556 ;;      Totals:         0       2       0       0       0
  1557 ;;Total ram usage:        2 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    3
  1560 ;; This function calls:
  1561 ;;		_ToggleEpinOfLCD
  1562 ;;		_WriteCommandToLCD
  1563 ;; This function is called by:
  1564 ;;		_main
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           psect	text711
  1568                           	file	"C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  1569                           	line	288
  1570                           	global	__size_of_InitLCD
  1571  008B                     	__size_of_InitLCD	equ	__end_of_InitLCD-_InitLCD
  1572                           	
  1573  027D                     _InitLCD:	
  1574                           	opt	stack 4
  1575                           ; Regs used in _InitLCD: [wreg+status,2+status,0+pclath+cstack]
  1576                           	line	289
  1577                           	
  1578  027D                     l3848:	
  1579                           ;temporizador.c: 289: TRISB = 0x00;
  1580  027D  1683               	bsf	status, 5	;RP0=1, select bank1
  1581  027E  1303               	bcf	status, 6	;RP1=0, select bank1
  1582  027F  0186               	clrf	(134)^080h	;volatile
  1583                           	line	290
  1584                           	
  1585  0280                     l3850:	
  1586                           ;temporizador.c: 290: _delay((unsigned long)((40)*(4000000/4000.0)));
  1587                           	opt asmopt_off
  1588  0280  3034               movlw	52
  1589  0281  1283               	bcf	status, 5	;RP0=0, select bank0
  1590  0282  1303               	bcf	status, 6	;RP1=0, select bank0
  1591  0283  00A2               movwf	((??_InitLCD+0)+0+1),f
  1592  0284  30F1               	movlw	241
  1593  0285  00A1               movwf	((??_InitLCD+0)+0),f
  1594  0286                     u3777:
  1595  0286  0BA1               	decfsz	((??_InitLCD+0)+0),f
  1596  0287  2A86               	goto	u3777
  1597  0288  0BA2               	decfsz	((??_InitLCD+0)+0+1),f
  1598  0289  2A86               	goto	u3777
  1599  028A  2A8B               	nop2
  1600                           opt asmopt_on
  1601                           
  1602                           	line	293
  1603                           	
  1604  028B                     l3852:	
  1605                           ;temporizador.c: 293: PORTB &= 0x0F;
  1606  028B  300F               	movlw	(0Fh)
  1607  028C  1283               	bcf	status, 5	;RP0=0, select bank0
  1608  028D  1303               	bcf	status, 6	;RP1=0, select bank0
  1609  028E  00A1               	movwf	(??_InitLCD+0)+0
  1610  028F  0821               	movf	(??_InitLCD+0)+0,w
  1611  0290  0586               	andwf	(6),f	;volatile
  1612                           	line	294
  1613                           	
  1614  0291                     l3854:	
  1615                           ;temporizador.c: 294: PORTB |= 0x30;
  1616  0291  3030               	movlw	(030h)
  1617  0292  00A1               	movwf	(??_InitLCD+0)+0
  1618  0293  0821               	movf	(??_InitLCD+0)+0,w
  1619  0294  0486               	iorwf	(6),f	;volatile
  1620                           	line	295
  1621                           	
  1622  0295                     l3856:	
  1623                           ;temporizador.c: 295: ToggleEpinOfLCD();
  1624  0295  120A  118A  2636   	fcall	_ToggleEpinOfLCD
              120A  118A         
  1625                           	line	296
  1626                           	
  1627  029A                     l3858:	
  1628                           ;temporizador.c: 296: _delay((unsigned long)((5)*(4000000/4000.0)));
  1629                           	opt asmopt_off
  1630  029A  3007               movlw	7
  1631  029B  1283               	bcf	status, 5	;RP0=0, select bank0
  1632  029C  1303               	bcf	status, 6	;RP1=0, select bank0
  1633  029D  00A2               movwf	((??_InitLCD+0)+0+1),f
  1634  029E  307D               	movlw	125
  1635  029F  00A1               movwf	((??_InitLCD+0)+0),f
  1636  02A0                     u3787:
  1637  02A0  0BA1               	decfsz	((??_InitLCD+0)+0),f
  1638  02A1  2AA0               	goto	u3787
  1639  02A2  0BA2               	decfsz	((??_InitLCD+0)+0+1),f
  1640  02A3  2AA0               	goto	u3787
  1641                           opt asmopt_on
  1642                           
  1643                           	line	298
  1644                           	
  1645  02A4                     l3860:	
  1646                           ;temporizador.c: 298: ToggleEpinOfLCD();
  1647  02A4  120A  118A  2636   	fcall	_ToggleEpinOfLCD
              120A  118A         
  1648                           	line	299
  1649                           	
  1650  02A9                     l3862:	
  1651                           ;temporizador.c: 299: _delay((unsigned long)((150)*(4000000/4000000.0)));
  1652                           	opt asmopt_off
  1653  02A9  3031               movlw	49
  1654  02AA  1283               	bcf	status, 5	;RP0=0, select bank0
  1655  02AB  1303               	bcf	status, 6	;RP1=0, select bank0
  1656  02AC  00A1               movwf	(??_InitLCD+0)+0,f
  1657  02AD                     u3797:
  1658  02AD  0BA1               decfsz	(??_InitLCD+0)+0,f
  1659  02AE  2AAD               	goto	u3797
  1660  02AF  2AB0               	nop2	;nop
  1661                           opt asmopt_on
  1662                           
  1663                           	line	301
  1664                           	
  1665  02B0                     l3864:	
  1666                           ;temporizador.c: 301: ToggleEpinOfLCD();
  1667  02B0  120A  118A  2636   	fcall	_ToggleEpinOfLCD
              120A  118A         
  1668                           	line	302
  1669                           	
  1670  02B5                     l3866:	
  1671                           ;temporizador.c: 302: _delay((unsigned long)((50)*(4000000/4000000.0)));
  1672                           	opt asmopt_off
  1673  02B5  3010               movlw	16
  1674  02B6  1283               	bcf	status, 5	;RP0=0, select bank0
  1675  02B7  1303               	bcf	status, 6	;RP1=0, select bank0
  1676  02B8  00A1               movwf	(??_InitLCD+0)+0,f
  1677  02B9                     u3807:
  1678  02B9  0BA1               decfsz	(??_InitLCD+0)+0,f
  1679  02BA  2AB9               	goto	u3807
  1680  02BB  0064               	clrwdt
  1681                           opt asmopt_on
  1682                           
  1683                           	line	304
  1684                           	
  1685  02BC                     l3868:	
  1686                           ;temporizador.c: 304: PORTB &= 0x0F;
  1687  02BC  300F               	movlw	(0Fh)
  1688  02BD  1283               	bcf	status, 5	;RP0=0, select bank0
  1689  02BE  1303               	bcf	status, 6	;RP1=0, select bank0
  1690  02BF  00A1               	movwf	(??_InitLCD+0)+0
  1691  02C0  0821               	movf	(??_InitLCD+0)+0,w
  1692  02C1  0586               	andwf	(6),f	;volatile
  1693                           	line	305
  1694                           	
  1695  02C2                     l3870:	
  1696                           ;temporizador.c: 305: PORTB |= 0x20;
  1697  02C2  1686               	bsf	(6)+(5/8),(5)&7	;volatile
  1698                           	line	306
  1699                           	
  1700  02C3                     l3872:	
  1701                           ;temporizador.c: 306: ToggleEpinOfLCD();
  1702  02C3  120A  118A  2636   	fcall	_ToggleEpinOfLCD
              120A  118A         
  1703                           	line	307
  1704                           	
  1705  02C8                     l3874:	
  1706                           ;temporizador.c: 307: _delay((unsigned long)((50)*(4000000/4000000.0)));
  1707                           	opt asmopt_off
  1708  02C8  3010               movlw	16
  1709  02C9  1283               	bcf	status, 5	;RP0=0, select bank0
  1710  02CA  1303               	bcf	status, 6	;RP1=0, select bank0
  1711  02CB  00A1               movwf	(??_InitLCD+0)+0,f
  1712  02CC                     u3817:
  1713  02CC  0BA1               decfsz	(??_InitLCD+0)+0,f
  1714  02CD  2ACC               	goto	u3817
  1715  02CE  0064               	clrwdt
  1716                           opt asmopt_on
  1717                           
  1718                           	line	310
  1719                           	
  1720  02CF                     l3876:	
  1721                           ;temporizador.c: 310: WriteCommandToLCD(0x28);
  1722  02CF  3028               	movlw	(028h)
  1723  02D0  120A  118A  2573   	fcall	_WriteCommandToLCD
              120A  118A         
  1724                           	line	311
  1725                           	
  1726  02D5                     l3878:	
  1727                           ;temporizador.c: 311: _delay((unsigned long)((50)*(4000000/4000000.0)));
  1728                           	opt asmopt_off
  1729  02D5  3010               movlw	16
  1730  02D6  1283               	bcf	status, 5	;RP0=0, select bank0
  1731  02D7  1303               	bcf	status, 6	;RP1=0, select bank0
  1732  02D8  00A1               movwf	(??_InitLCD+0)+0,f
  1733  02D9                     u3827:
  1734  02D9  0BA1               decfsz	(??_InitLCD+0)+0,f
  1735  02DA  2AD9               	goto	u3827
  1736  02DB  0064               	clrwdt
  1737                           opt asmopt_on
  1738                           
  1739                           	line	312
  1740                           	
  1741  02DC                     l3880:	
  1742                           ;temporizador.c: 312: WriteCommandToLCD(0x0C);
  1743  02DC  300C               	movlw	(0Ch)
  1744  02DD  120A  118A  2573   	fcall	_WriteCommandToLCD
              120A  118A         
  1745                           	line	313
  1746                           	
  1747  02E2                     l3882:	
  1748                           ;temporizador.c: 313: _delay((unsigned long)((50)*(4000000/4000000.0)));
  1749                           	opt asmopt_off
  1750  02E2  3010               movlw	16
  1751  02E3  1283               	bcf	status, 5	;RP0=0, select bank0
  1752  02E4  1303               	bcf	status, 6	;RP1=0, select bank0
  1753  02E5  00A1               movwf	(??_InitLCD+0)+0,f
  1754  02E6                     u3837:
  1755  02E6  0BA1               decfsz	(??_InitLCD+0)+0,f
  1756  02E7  2AE6               	goto	u3837
  1757  02E8  0064               	clrwdt
  1758                           opt asmopt_on
  1759                           
  1760                           	line	314
  1761                           	
  1762  02E9                     l3884:	
  1763                           ;temporizador.c: 314: WriteCommandToLCD(0x01);
  1764  02E9  3001               	movlw	(01h)
  1765  02EA  120A  118A  2573   	fcall	_WriteCommandToLCD
              120A  118A         
  1766                           	line	315
  1767                           	
  1768  02EF                     l3886:	
  1769                           ;temporizador.c: 315: _delay((unsigned long)((2)*(4000000/4000.0)));
  1770                           	opt asmopt_off
  1771  02EF  3003               movlw	3
  1772  02F0  1283               	bcf	status, 5	;RP0=0, select bank0
  1773  02F1  1303               	bcf	status, 6	;RP1=0, select bank0
  1774  02F2  00A2               movwf	((??_InitLCD+0)+0+1),f
  1775  02F3  3097               	movlw	151
  1776  02F4  00A1               movwf	((??_InitLCD+0)+0),f
  1777  02F5                     u3847:
  1778  02F5  0BA1               	decfsz	((??_InitLCD+0)+0),f
  1779  02F6  2AF5               	goto	u3847
  1780  02F7  0BA2               	decfsz	((??_InitLCD+0)+0+1),f
  1781  02F8  2AF5               	goto	u3847
  1782  02F9  2AFA               	nop2
  1783                           opt asmopt_on
  1784                           
  1785                           	line	316
  1786                           	
  1787  02FA                     l3888:	
  1788                           ;temporizador.c: 316: WriteCommandToLCD(0x06);
  1789  02FA  3006               	movlw	(06h)
  1790  02FB  120A  118A  2573   	fcall	_WriteCommandToLCD
              120A  118A         
  1791                           	line	317
  1792                           	
  1793  0300                     l3890:	
  1794                           ;temporizador.c: 317: _delay((unsigned long)((50)*(4000000/4000000.0)));
  1795                           	opt asmopt_off
  1796  0300  3010               movlw	16
  1797  0301  1283               	bcf	status, 5	;RP0=0, select bank0
  1798  0302  1303               	bcf	status, 6	;RP1=0, select bank0
  1799  0303  00A1               movwf	(??_InitLCD+0)+0,f
  1800  0304                     u3857:
  1801  0304  0BA1               decfsz	(??_InitLCD+0)+0,f
  1802  0305  2B04               	goto	u3857
  1803  0306  0064               	clrwdt
  1804                           opt asmopt_on
  1805                           
  1806                           	line	318
  1807                           	
  1808  0307                     l778:	
  1809  0307  0008               	return
  1810                           	opt stack 0
  1811                           GLOBAL	__end_of_InitLCD
  1812  0308                     	__end_of_InitLCD:
  1813 ;; =============== function _InitLCD ends ============
  1814                           
  1815                           	signat	_InitLCD,88
  1816                           	global	_SetPosLCD
  1817                           psect	text712,local,class=CODE,delta=2
  1818                           global __ptext712
  1819  0624                     __ptext712:
  1820                           
  1821 ;; *************** function _SetPosLCD *****************
  1822 ;; Defined at:
  1823 ;;		line 328 in file "C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  pos             1    wreg     unsigned char 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  pos             1    1[BANK0 ] unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;		None               void
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0, pclath, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1837 ;;      Params:         0       0       0       0       0
  1838 ;;      Locals:         0       1       0       0       0
  1839 ;;      Temps:          0       0       0       0       0
  1840 ;;      Totals:         0       1       0       0       0
  1841 ;;Total ram usage:        1 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:    3
  1844 ;; This function calls:
  1845 ;;		_CheckBusyLCD
  1846 ;;		_WriteCommandToLCD
  1847 ;; This function is called by:
  1848 ;;		_displayState
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           psect	text712
  1852                           	file	"C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  1853                           	line	328
  1854                           	global	__size_of_SetPosLCD
  1855  0012                     	__size_of_SetPosLCD	equ	__end_of_SetPosLCD-_SetPosLCD
  1856                           	
  1857  0624                     _SetPosLCD:	
  1858                           	opt	stack 3
  1859                           ; Regs used in _SetPosLCD: [wreg+status,2+status,0+pclath+cstack]
  1860                           ;SetPosLCD@pos stored from wreg
  1861  0624  1283               	bcf	status, 5	;RP0=0, select bank0
  1862  0625  1303               	bcf	status, 6	;RP1=0, select bank0
  1863  0626  00A1               	movwf	(SetPosLCD@pos)
  1864                           	line	329
  1865                           	
  1866  0627                     l3846:	
  1867                           ;temporizador.c: 329: CheckBusyLCD();
  1868  0627  120A  118A  2647   	fcall	_CheckBusyLCD
              120A  118A         
  1869                           	line	330
  1870                           ;temporizador.c: 330: WriteCommandToLCD(0x80 | pos);
  1871  062C  1283               	bcf	status, 5	;RP0=0, select bank0
  1872  062D  1303               	bcf	status, 6	;RP1=0, select bank0
  1873  062E  0821               	movf	(SetPosLCD@pos),w
  1874  062F  3880               	iorlw	080h
  1875  0630  120A  118A  2573   	fcall	_WriteCommandToLCD
              120A  118A         
  1876                           	line	331
  1877                           	
  1878  0635                     l784:	
  1879  0635  0008               	return
  1880                           	opt stack 0
  1881                           GLOBAL	__end_of_SetPosLCD
  1882  0636                     	__end_of_SetPosLCD:
  1883 ;; =============== function _SetPosLCD ends ============
  1884                           
  1885                           	signat	_SetPosLCD,4216
  1886                           	global	_WriteCommandToLCD
  1887                           psect	text713,local,class=CODE,delta=2
  1888                           global __ptext713
  1889  0573                     __ptext713:
  1890                           
  1891 ;; *************** function _WriteCommandToLCD *****************
  1892 ;; Defined at:
  1893 ;;		line 262 in file "C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  Command         1    wreg     unsigned char 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  Command         1    0[BANK0 ] unsigned char 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;		None               void
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, status,0, pclath, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1907 ;;      Params:         0       0       0       0       0
  1908 ;;      Locals:         0       1       0       0       0
  1909 ;;      Temps:          2       0       0       0       0
  1910 ;;      Totals:         2       1       0       0       0
  1911 ;;Total ram usage:        3 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; Hardware stack levels required when called:    2
  1914 ;; This function calls:
  1915 ;;		_ToggleEpinOfLCD
  1916 ;; This function is called by:
  1917 ;;		_InitLCD
  1918 ;;		_ClearLCD
  1919 ;;		_SetPosLCD
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           psect	text713
  1923                           	file	"C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  1924                           	line	262
  1925                           	global	__size_of_WriteCommandToLCD
  1926  002D                     	__size_of_WriteCommandToLCD	equ	__end_of_WriteCommandToLCD-_WriteCommandToLCD
  1927                           	
  1928  0573                     _WriteCommandToLCD:	
  1929                           	opt	stack 3
  1930                           ; Regs used in _WriteCommandToLCD: [wreg+status,2+status,0+pclath+cstack]
  1931                           ;WriteCommandToLCD@Command stored from wreg
  1932  0573  1283               	bcf	status, 5	;RP0=0, select bank0
  1933  0574  1303               	bcf	status, 6	;RP1=0, select bank0
  1934  0575  00A0               	movwf	(WriteCommandToLCD@Command)
  1935                           	line	263
  1936                           	
  1937  0576                     l3834:	
  1938                           ;temporizador.c: 263: RA1 = 0;
  1939  0576  1085               	bcf	(41/8),(41)&7
  1940                           	line	264
  1941                           ;temporizador.c: 264: RA2 = 0;
  1942  0577  1105               	bcf	(42/8),(42)&7
  1943                           	line	265
  1944                           	
  1945  0578                     l3836:	
  1946                           ;temporizador.c: 265: PORTB &= 0x0F;
  1947  0578  300F               	movlw	(0Fh)
  1948  0579  00F6               	movwf	(??_WriteCommandToLCD+0)+0
  1949  057A  0876               	movf	(??_WriteCommandToLCD+0)+0,w
  1950  057B  0586               	andwf	(6),f	;volatile
  1951                           	line	266
  1952                           ;temporizador.c: 266: PORTB |= (Command & 0xF0);
  1953  057C  0820               	movf	(WriteCommandToLCD@Command),w
  1954  057D  39F0               	andlw	0F0h
  1955  057E  00F6               	movwf	(??_WriteCommandToLCD+0)+0
  1956  057F  0876               	movf	(??_WriteCommandToLCD+0)+0,w
  1957  0580  0486               	iorwf	(6),f	;volatile
  1958                           	line	267
  1959                           	
  1960  0581                     l3838:	
  1961                           ;temporizador.c: 267: ToggleEpinOfLCD();
  1962  0581  120A  118A  2636   	fcall	_ToggleEpinOfLCD
              120A  118A         
  1963                           	line	268
  1964                           	
  1965  0586                     l3840:	
  1966                           ;temporizador.c: 268: PORTB &= 0x0F;
  1967  0586  300F               	movlw	(0Fh)
  1968  0587  00F6               	movwf	(??_WriteCommandToLCD+0)+0
  1969  0588  0876               	movf	(??_WriteCommandToLCD+0)+0,w
  1970  0589  1283               	bcf	status, 5	;RP0=0, select bank0
  1971  058A  1303               	bcf	status, 6	;RP1=0, select bank0
  1972  058B  0586               	andwf	(6),f	;volatile
  1973                           	line	269
  1974                           	
  1975  058C                     l3842:	
  1976                           ;temporizador.c: 269: PORTB |= ((Command << 4) & 0xF0);
  1977  058C  0820               	movf	(WriteCommandToLCD@Command),w
  1978  058D  00F6               	movwf	(??_WriteCommandToLCD+0)+0
  1979  058E  3003               	movlw	(04h)-1
  1980  058F                     u3715:
  1981  058F  1003               	clrc
  1982  0590  0DF6               	rlf	(??_WriteCommandToLCD+0)+0,f
  1983  0591  3EFF               	addlw	-1
  1984  0592  1D03               	skipz
  1985  0593  2D8F               	goto	u3715
  1986  0594  1003               	clrc
  1987  0595  0D76               	rlf	(??_WriteCommandToLCD+0)+0,w
  1988  0596  39F0               	andlw	0F0h
  1989  0597  00F7               	movwf	(??_WriteCommandToLCD+1)+0
  1990  0598  0877               	movf	(??_WriteCommandToLCD+1)+0,w
  1991  0599  0486               	iorwf	(6),f	;volatile
  1992                           	line	270
  1993                           	
  1994  059A                     l3844:	
  1995                           ;temporizador.c: 270: ToggleEpinOfLCD();
  1996  059A  120A  118A  2636   	fcall	_ToggleEpinOfLCD
              120A  118A         
  1997                           	line	271
  1998                           	
  1999  059F                     l772:	
  2000  059F  0008               	return
  2001                           	opt stack 0
  2002                           GLOBAL	__end_of_WriteCommandToLCD
  2003  05A0                     	__end_of_WriteCommandToLCD:
  2004 ;; =============== function _WriteCommandToLCD ends ============
  2005                           
  2006                           	signat	_WriteCommandToLCD,4216
  2007                           	global	_CheckBusyLCD
  2008                           psect	text714,local,class=CODE,delta=2
  2009                           global __ptext714
  2010  0647                     __ptext714:
  2011                           
  2012 ;; *************** function _CheckBusyLCD *****************
  2013 ;; Defined at:
  2014 ;;		line 254 in file "C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;		None
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;		None               void
  2021 ;; Registers used:
  2022 ;;		wreg, status,2, status,0, pclath, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2028 ;;      Params:         0       0       0       0       0
  2029 ;;      Locals:         0       0       0       0       0
  2030 ;;      Temps:          0       1       0       0       0
  2031 ;;      Totals:         0       1       0       0       0
  2032 ;;Total ram usage:        1 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    2
  2035 ;; This function calls:
  2036 ;;		_ReadBusyFlagLCD
  2037 ;; This function is called by:
  2038 ;;		_WriteDataToLCD
  2039 ;;		_ClearLCD
  2040 ;;		_SetPosLCD
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           psect	text714
  2044                           	file	"C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  2045                           	line	254
  2046                           	global	__size_of_CheckBusyLCD
  2047  0010                     	__size_of_CheckBusyLCD	equ	__end_of_CheckBusyLCD-_CheckBusyLCD
  2048                           	
  2049  0647                     _CheckBusyLCD:	
  2050                           	opt	stack 1
  2051                           ; Regs used in _CheckBusyLCD: [wreg+status,2+status,0+pclath+cstack]
  2052                           	line	255
  2053                           	
  2054  0647                     l3830:	
  2055                           ;temporizador.c: 255: while ((ReadBusyFlagLCD() & 0x80) == 0x80)
  2056  0647  2E49               	goto	l3832
  2057                           	
  2058  0648                     l767:	
  2059  0648  2E49               	goto	l3832
  2060                           	line	258
  2061                           ;temporizador.c: 256: {
  2062                           	
  2063  0649                     l766:	
  2064                           	line	255
  2065                           	
  2066  0649                     l3832:	
  2067  0649  120A  118A  2504   	fcall	_ReadBusyFlagLCD
              120A  118A         
  2068  064E  1283               	bcf	status, 5	;RP0=0, select bank0
  2069  064F  1303               	bcf	status, 6	;RP1=0, select bank0
  2070  0650  00A0               	movwf	(??_CheckBusyLCD+0)+0
  2071  0651  1BA0               	btfsc	0+(??_CheckBusyLCD+0)+0,(7)&7
  2072  0652  2E54               	goto	u3701
  2073  0653  2E55               	goto	u3700
  2074  0654                     u3701:
  2075  0654  2E49               	goto	l3832
  2076  0655                     u3700:
  2077  0655  2E56               	goto	l769
  2078                           	
  2079  0656                     l768:	
  2080                           	line	259
  2081                           	
  2082  0656                     l769:	
  2083  0656  0008               	return
  2084                           	opt stack 0
  2085                           GLOBAL	__end_of_CheckBusyLCD
  2086  0657                     	__end_of_CheckBusyLCD:
  2087 ;; =============== function _CheckBusyLCD ends ============
  2088                           
  2089                           	signat	_CheckBusyLCD,88
  2090                           	global	_ReadBusyFlagLCD
  2091                           psect	text715,local,class=CODE,delta=2
  2092                           global __ptext715
  2093  0504                     __ptext715:
  2094                           
  2095 ;; *************** function _ReadBusyFlagLCD *****************
  2096 ;; Defined at:
  2097 ;;		line 233 in file "C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  data            1    7[COMMON] unsigned char 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      unsigned char 
  2104 ;; Registers used:
  2105 ;;		wreg, status,2, status,0
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2111 ;;      Params:         0       0       0       0       0
  2112 ;;      Locals:         1       0       0       0       0
  2113 ;;      Temps:          2       0       0       0       0
  2114 ;;      Totals:         3       0       0       0       0
  2115 ;;Total ram usage:        3 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    1
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_CheckBusyLCD
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           psect	text715
  2125                           	file	"C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  2126                           	line	233
  2127                           	global	__size_of_ReadBusyFlagLCD
  2128  0038                     	__size_of_ReadBusyFlagLCD	equ	__end_of_ReadBusyFlagLCD-_ReadBusyFlagLCD
  2129                           	
  2130  0504                     _ReadBusyFlagLCD:	
  2131                           	opt	stack 1
  2132                           ; Regs used in _ReadBusyFlagLCD: [wreg+status,2+status,0]
  2133                           	line	235
  2134                           	
  2135  0504                     l3492:	
  2136                           ;temporizador.c: 234: unsigned char data;
  2137                           ;temporizador.c: 235: TRISB = 0xF0;
  2138  0504  30F0               	movlw	(0F0h)
  2139  0505  1683               	bsf	status, 5	;RP0=1, select bank1
  2140  0506  1303               	bcf	status, 6	;RP1=0, select bank1
  2141  0507  0086               	movwf	(134)^080h	;volatile
  2142                           	line	236
  2143                           	
  2144  0508                     l3494:	
  2145                           ;temporizador.c: 236: RA1 = 0;
  2146  0508  1283               	bcf	status, 5	;RP0=0, select bank0
  2147  0509  1303               	bcf	status, 6	;RP1=0, select bank0
  2148  050A  1085               	bcf	(41/8),(41)&7
  2149                           	line	237
  2150                           	
  2151  050B                     l3496:	
  2152                           ;temporizador.c: 237: RA2 = 1;
  2153  050B  1505               	bsf	(42/8),(42)&7
  2154                           	line	238
  2155                           	
  2156  050C                     l3498:	
  2157                           ;temporizador.c: 238: RA0 = 1;
  2158  050C  1405               	bsf	(40/8),(40)&7
  2159                           	line	239
  2160                           	
  2161  050D                     l3500:	
  2162                           ;temporizador.c: 239: _delay((unsigned long)((5)*(4000000/4000000.0)));
  2163                           		opt asmopt_off
  2164  050D  2D0E               	nop2	;2 cycle nop
  2165                           	opt asmopt_on
  2166                           	opt asmopt_off
  2167  050E  2D0F               	nop2	;2 cycle nop
  2168                           	opt asmopt_on
  2169                           	opt asmopt_off
  2170  050F  0064               	clrwdt
  2171                           	opt asmopt_on
  2172                           
  2173                           	line	240
  2174                           	
  2175  0510                     l3502:	
  2176                           ;temporizador.c: 240: data = (PORTB & 0xF0);
  2177  0510  1283               	bcf	status, 5	;RP0=0, select bank0
  2178  0511  1303               	bcf	status, 6	;RP1=0, select bank0
  2179  0512  0806               	movf	(6),w
  2180  0513  39F0               	andlw	0F0h
  2181  0514  00F5               	movwf	(??_ReadBusyFlagLCD+0)+0
  2182  0515  0875               	movf	(??_ReadBusyFlagLCD+0)+0,w
  2183  0516  00F7               	movwf	(ReadBusyFlagLCD@data)
  2184                           	line	241
  2185                           	
  2186  0517                     l3504:	
  2187                           ;temporizador.c: 241: RA0 = 0;
  2188  0517  1005               	bcf	(40/8),(40)&7
  2189                           	line	242
  2190                           	
  2191  0518                     l3506:	
  2192                           ;temporizador.c: 242: _delay((unsigned long)((5)*(4000000/4000000.0)));
  2193                           		opt asmopt_off
  2194  0518  2D19               	nop2	;2 cycle nop
  2195                           	opt asmopt_on
  2196                           	opt asmopt_off
  2197  0519  2D1A               	nop2	;2 cycle nop
  2198                           	opt asmopt_on
  2199                           	opt asmopt_off
  2200  051A  0064               	clrwdt
  2201                           	opt asmopt_on
  2202                           
  2203                           	line	243
  2204                           	
  2205  051B                     l3508:	
  2206                           ;temporizador.c: 243: RA0 = 1;
  2207  051B  1283               	bcf	status, 5	;RP0=0, select bank0
  2208  051C  1303               	bcf	status, 6	;RP1=0, select bank0
  2209  051D  1405               	bsf	(40/8),(40)&7
  2210                           	line	244
  2211                           	
  2212  051E                     l3510:	
  2213                           ;temporizador.c: 244: _delay((unsigned long)((5)*(4000000/4000000.0)));
  2214                           		opt asmopt_off
  2215  051E  2D1F               	nop2	;2 cycle nop
  2216                           	opt asmopt_on
  2217                           	opt asmopt_off
  2218  051F  2D20               	nop2	;2 cycle nop
  2219                           	opt asmopt_on
  2220                           	opt asmopt_off
  2221  0520  0064               	clrwdt
  2222                           	opt asmopt_on
  2223                           
  2224                           	line	245
  2225                           	
  2226  0521                     l3512:	
  2227                           ;temporizador.c: 245: data |= ((PORTB >> 4) & 0x0F);
  2228  0521  1283               	bcf	status, 5	;RP0=0, select bank0
  2229  0522  1303               	bcf	status, 6	;RP1=0, select bank0
  2230  0523  0806               	movf	(6),w	;volatile
  2231  0524  00F5               	movwf	(??_ReadBusyFlagLCD+0)+0
  2232  0525  3004               	movlw	04h
  2233  0526                     u3335:
  2234  0526  1003               	clrc
  2235  0527  0CF5               	rrf	(??_ReadBusyFlagLCD+0)+0,f
  2236  0528  3EFF               	addlw	-1
  2237  0529  1D03               	skipz
  2238  052A  2D26               	goto	u3335
  2239  052B  0875               	movf	0+(??_ReadBusyFlagLCD+0)+0,w
  2240  052C  390F               	andlw	0Fh
  2241  052D  00F6               	movwf	(??_ReadBusyFlagLCD+1)+0
  2242  052E  0876               	movf	(??_ReadBusyFlagLCD+1)+0,w
  2243  052F  04F7               	iorwf	(ReadBusyFlagLCD@data),f
  2244                           	line	246
  2245                           	
  2246  0530                     l3514:	
  2247                           ;temporizador.c: 246: RA0 = 0;
  2248  0530  1005               	bcf	(40/8),(40)&7
  2249                           	line	247
  2250                           	
  2251  0531                     l3516:	
  2252                           ;temporizador.c: 247: RA2 = 0;
  2253  0531  1105               	bcf	(42/8),(42)&7
  2254                           	line	248
  2255                           	
  2256  0532                     l3518:	
  2257                           ;temporizador.c: 248: _delay((unsigned long)((40)*(4000000/4000000.0)));
  2258                           	opt asmopt_off
  2259  0532  300D               movlw	13
  2260  0533  00F5               movwf	(??_ReadBusyFlagLCD+0)+0,f
  2261  0534                     u3867:
  2262  0534  0BF5               decfsz	(??_ReadBusyFlagLCD+0)+0,f
  2263  0535  2D34               	goto	u3867
  2264                           opt asmopt_on
  2265                           
  2266                           	line	249
  2267                           	
  2268  0536                     l3520:	
  2269                           ;temporizador.c: 249: TRISB = 0x00;
  2270  0536  1683               	bsf	status, 5	;RP0=1, select bank1
  2271  0537  1303               	bcf	status, 6	;RP1=0, select bank1
  2272  0538  0186               	clrf	(134)^080h	;volatile
  2273                           	line	250
  2274                           	
  2275  0539                     l3522:	
  2276                           ;temporizador.c: 250: return data;
  2277  0539  0877               	movf	(ReadBusyFlagLCD@data),w
  2278  053A  2D3B               	goto	l763
  2279                           	
  2280  053B                     l3524:	
  2281                           	line	251
  2282                           	
  2283  053B                     l763:	
  2284  053B  0008               	return
  2285                           	opt stack 0
  2286                           GLOBAL	__end_of_ReadBusyFlagLCD
  2287  053C                     	__end_of_ReadBusyFlagLCD:
  2288 ;; =============== function _ReadBusyFlagLCD ends ============
  2289                           
  2290                           	signat	_ReadBusyFlagLCD,89
  2291                           	global	_ToggleEpinOfLCD
  2292                           psect	text716,local,class=CODE,delta=2
  2293                           global __ptext716
  2294  0636                     __ptext716:
  2295                           
  2296 ;; *************** function _ToggleEpinOfLCD *****************
  2297 ;; Defined at:
  2298 ;;		line 225 in file "C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;		None
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;		None
  2303 ;; Return value:  Size  Location     Type
  2304 ;;		None               void
  2305 ;; Registers used:
  2306 ;;		wreg
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2312 ;;      Params:         0       0       0       0       0
  2313 ;;      Locals:         0       0       0       0       0
  2314 ;;      Temps:          1       0       0       0       0
  2315 ;;      Totals:         1       0       0       0       0
  2316 ;;Total ram usage:        1 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:    1
  2319 ;; This function calls:
  2320 ;;		Nothing
  2321 ;; This function is called by:
  2322 ;;		_WriteCommandToLCD
  2323 ;;		_WriteDataToLCD
  2324 ;;		_InitLCD
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           psect	text716
  2328                           	file	"C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  2329                           	line	225
  2330                           	global	__size_of_ToggleEpinOfLCD
  2331  0011                     	__size_of_ToggleEpinOfLCD	equ	__end_of_ToggleEpinOfLCD-_ToggleEpinOfLCD
  2332                           	
  2333  0636                     _ToggleEpinOfLCD:	
  2334                           	opt	stack 2
  2335                           ; Regs used in _ToggleEpinOfLCD: [wreg]
  2336                           	line	226
  2337                           	
  2338  0636                     l3824:	
  2339                           ;temporizador.c: 226: RA0 = 1;
  2340  0636  1283               	bcf	status, 5	;RP0=0, select bank0
  2341  0637  1303               	bcf	status, 6	;RP1=0, select bank0
  2342  0638  1405               	bsf	(40/8),(40)&7
  2343                           	line	227
  2344                           	
  2345  0639                     l3826:	
  2346                           ;temporizador.c: 227: _delay((unsigned long)((500)*(4000000/4000000.0)));
  2347                           	opt asmopt_off
  2348  0639  30A6               movlw	166
  2349  063A  00F5               movwf	(??_ToggleEpinOfLCD+0)+0,f
  2350  063B                     u3877:
  2351  063B  0BF5               decfsz	(??_ToggleEpinOfLCD+0)+0,f
  2352  063C  2E3B               	goto	u3877
  2353  063D  0064               	clrwdt
  2354                           opt asmopt_on
  2355                           
  2356                           	line	228
  2357                           	
  2358  063E                     l3828:	
  2359                           ;temporizador.c: 228: RA0 = 0;
  2360  063E  1283               	bcf	status, 5	;RP0=0, select bank0
  2361  063F  1303               	bcf	status, 6	;RP1=0, select bank0
  2362  0640  1005               	bcf	(40/8),(40)&7
  2363                           	line	229
  2364                           ;temporizador.c: 229: _delay((unsigned long)((500)*(4000000/4000000.0)));
  2365                           	opt asmopt_off
  2366  0641  30A6               movlw	166
  2367  0642  00F5               movwf	(??_ToggleEpinOfLCD+0)+0,f
  2368  0643                     u3887:
  2369  0643  0BF5               decfsz	(??_ToggleEpinOfLCD+0)+0,f
  2370  0644  2E43               	goto	u3887
  2371  0645  0064               	clrwdt
  2372                           opt asmopt_on
  2373                           
  2374                           	line	230
  2375                           	
  2376  0646                     l760:	
  2377  0646  0008               	return
  2378                           	opt stack 0
  2379                           GLOBAL	__end_of_ToggleEpinOfLCD
  2380  0647                     	__end_of_ToggleEpinOfLCD:
  2381 ;; =============== function _ToggleEpinOfLCD ends ============
  2382                           
  2383                           	signat	_ToggleEpinOfLCD,88
  2384                           	global	_checkButtons
  2385                           psect	text717,local,class=CODE,delta=2
  2386                           global __ptext717
  2387  01D5                     __ptext717:
  2388                           
  2389 ;; *************** function _checkButtons *****************
  2390 ;; Defined at:
  2391 ;;		line 128 in file "C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;		None
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;		None
  2396 ;; Return value:  Size  Location     Type
  2397 ;;		None               void
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0, pclath, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2405 ;;      Params:         0       0       0       0       0
  2406 ;;      Locals:         0       0       0       0       0
  2407 ;;      Temps:          1       0       0       0       0
  2408 ;;      Totals:         1       0       0       0       0
  2409 ;;Total ram usage:        1 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:    2
  2412 ;; This function calls:
  2413 ;;		_StopTimer1
  2414 ;;		_StartTimer1
  2415 ;; This function is called by:
  2416 ;;		_main
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           psect	text717
  2420                           	file	"C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  2421                           	line	128
  2422                           	global	__size_of_checkButtons
  2423  00A8                     	__size_of_checkButtons	equ	__end_of_checkButtons-_checkButtons
  2424                           	
  2425  01D5                     _checkButtons:	
  2426                           	opt	stack 5
  2427                           ; Regs used in _checkButtons: [wreg+status,2+status,0+pclath+cstack]
  2428                           	line	136
  2429                           	
  2430  01D5                     l3424:	
  2431                           ;temporizador.c: 129: static bit oldStartStop = 0;
  2432                           ;temporizador.c: 130: static bit oldMode = 0;
  2433                           ;temporizador.c: 131: static bit oldReset = 0;
  2434                           ;temporizador.c: 132: static bit oldInc = 0;
  2435                           ;temporizador.c: 133: static bit oldDec = 0;
  2436                           ;temporizador.c: 136: if (RD3 && !oldMode)
  2437  01D5  1283               	bcf	status, 5	;RP0=0, select bank0
  2438  01D6  1303               	bcf	status, 6	;RP1=0, select bank0
  2439  01D7  1D88               	btfss	(67/8),(67)&7
  2440  01D8  29DA               	goto	u3121
  2441  01D9  29DB               	goto	u3120
  2442  01DA                     u3121:
  2443  01DA  29F2               	goto	l3434
  2444  01DB                     u3120:
  2445                           	
  2446  01DB                     l3426:	
  2447  01DB  1978               	btfsc	(checkButtons@oldMode/8),(checkButtons@oldMode)&7
  2448  01DC  29DE               	goto	u3131
  2449  01DD  29DF               	goto	u3130
  2450  01DE                     u3131:
  2451  01DE  29F2               	goto	l3434
  2452  01DF                     u3130:
  2453                           	line	138
  2454                           	
  2455  01DF                     l3428:	
  2456                           ;temporizador.c: 137: {
  2457                           ;temporizador.c: 138: mode = !mode;
  2458  01DF  08D4               	movf	(_mode)
  2459  01E0  3000               	movlw	0
  2460  01E1  1903               	skipnz
  2461  01E2  3001               	movlw	1
  2462  01E3  00F5               	movwf	(??_checkButtons+0)+0
  2463  01E4  0875               	movf	(??_checkButtons+0)+0,w
  2464  01E5  00D4               	movwf	(_mode)
  2465                           	line	139
  2466                           ;temporizador.c: 139: if (running)
  2467  01E6  0855               	movf	(_running),w
  2468  01E7  1D03               	skipz
  2469  01E8  29EA               	goto	u3140
  2470  01E9  29F2               	goto	l3434
  2471  01EA                     u3140:
  2472                           	line	141
  2473                           	
  2474  01EA                     l3430:	
  2475                           ;temporizador.c: 140: {
  2476                           ;temporizador.c: 141: running = 0;
  2477  01EA  01D5               	clrf	(_running)
  2478                           	line	142
  2479                           	
  2480  01EB                     l3432:	
  2481                           ;temporizador.c: 142: StopTimer1();
  2482  01EB  120A  118A  266E   	fcall	_StopTimer1
              120A  118A         
  2483  01F0  29F2               	goto	l3434
  2484                           	line	143
  2485                           	
  2486  01F1                     l741:	
  2487  01F1  29F2               	goto	l3434
  2488                           	line	144
  2489                           	
  2490  01F2                     l740:	
  2491                           	line	145
  2492                           	
  2493  01F2                     l3434:	
  2494                           ;temporizador.c: 143: }
  2495                           ;temporizador.c: 144: }
  2496                           ;temporizador.c: 145: oldMode = RD3;
  2497  01F2  1178               	bcf	(checkButtons@oldMode/8),(checkButtons@oldMode)&7
  2498  01F3  1283               	bcf	status, 5	;RP0=0, select bank0
  2499  01F4  1303               	bcf	status, 6	;RP1=0, select bank0
  2500  01F5  1D88               	btfss	(67/8),(67)&7
  2501  01F6  29F8               	goto	u3155
  2502  01F7  1578               	bsf	(checkButtons@oldMode/8),(checkButtons@oldMode)&7
  2503  01F8                     u3155:
  2504                           
  2505                           	line	148
  2506                           	
  2507  01F8                     l3436:	
  2508                           ;temporizador.c: 148: if (RD5 == 0 && oldStartStop == 0)
  2509  01F8  1283               	bcf	status, 5	;RP0=0, select bank0
  2510  01F9  1303               	bcf	status, 6	;RP1=0, select bank0
  2511  01FA  1A88               	btfsc	(69/8),(69)&7
  2512  01FB  29FD               	goto	u3161
  2513  01FC  29FE               	goto	u3160
  2514  01FD                     u3161:
  2515  01FD  2A1C               	goto	l3448
  2516  01FE                     u3160:
  2517                           	
  2518  01FE                     l3438:	
  2519  01FE  1A78               	btfsc	(checkButtons@oldStartStop/8),(checkButtons@oldStartStop)&7
  2520  01FF  2A01               	goto	u3171
  2521  0200  2A02               	goto	u3170
  2522  0201                     u3171:
  2523  0201  2A1C               	goto	l3448
  2524  0202                     u3170:
  2525                           	line	150
  2526                           	
  2527  0202                     l3440:	
  2528                           ;temporizador.c: 149: {
  2529                           ;temporizador.c: 150: running = !running;
  2530  0202  08D5               	movf	(_running)
  2531  0203  3000               	movlw	0
  2532  0204  1903               	skipnz
  2533  0205  3001               	movlw	1
  2534  0206  00F5               	movwf	(??_checkButtons+0)+0
  2535  0207  0875               	movf	(??_checkButtons+0)+0,w
  2536  0208  00D5               	movwf	(_running)
  2537                           	line	151
  2538                           ;temporizador.c: 151: if (running)
  2539  0209  0855               	movf	(_running),w
  2540  020A  1D03               	skipz
  2541  020B  2A0D               	goto	u3180
  2542  020C  2A15               	goto	l3446
  2543  020D                     u3180:
  2544                           	line	153
  2545                           	
  2546  020D                     l3442:	
  2547                           ;temporizador.c: 152: {
  2548                           ;temporizador.c: 153: RB0 = 0;
  2549  020D  1006               	bcf	(48/8),(48)&7
  2550                           	line	154
  2551                           ;temporizador.c: 154: RB1 = 0;
  2552  020E  1086               	bcf	(49/8),(49)&7
  2553                           	line	155
  2554                           	
  2555  020F                     l3444:	
  2556                           ;temporizador.c: 155: StartTimer1();
  2557  020F  120A  118A  2657   	fcall	_StartTimer1
              120A  118A         
  2558                           	line	156
  2559                           ;temporizador.c: 156: }
  2560  0214  2A1C               	goto	l3448
  2561                           	line	157
  2562                           	
  2563  0215                     l743:	
  2564                           	line	159
  2565                           	
  2566  0215                     l3446:	
  2567                           ;temporizador.c: 157: else
  2568                           ;temporizador.c: 158: {
  2569                           ;temporizador.c: 159: StopTimer1();
  2570  0215  120A  118A  266E   	fcall	_StopTimer1
              120A  118A         
  2571  021A  2A1C               	goto	l3448
  2572                           	line	160
  2573                           	
  2574  021B                     l744:	
  2575  021B  2A1C               	goto	l3448
  2576                           	line	161
  2577                           	
  2578  021C                     l742:	
  2579                           	line	162
  2580                           	
  2581  021C                     l3448:	
  2582                           ;temporizador.c: 160: }
  2583                           ;temporizador.c: 161: }
  2584                           ;temporizador.c: 162: oldStartStop = RD5;
  2585  021C  1278               	bcf	(checkButtons@oldStartStop/8),(checkButtons@oldStartStop)&7
  2586  021D  1283               	bcf	status, 5	;RP0=0, select bank0
  2587  021E  1303               	bcf	status, 6	;RP1=0, select bank0
  2588  021F  1E88               	btfss	(69/8),(69)&7
  2589  0220  2A22               	goto	u3195
  2590  0221  1678               	bsf	(checkButtons@oldStartStop/8),(checkButtons@oldStartStop)&7
  2591  0222                     u3195:
  2592                           
  2593                           	line	165
  2594                           	
  2595  0222                     l3450:	
  2596                           ;temporizador.c: 165: if (RD4 && !oldReset)
  2597  0222  1283               	bcf	status, 5	;RP0=0, select bank0
  2598  0223  1303               	bcf	status, 6	;RP1=0, select bank0
  2599  0224  1E08               	btfss	(68/8),(68)&7
  2600  0225  2A27               	goto	u3201
  2601  0226  2A28               	goto	u3200
  2602  0227                     u3201:
  2603  0227  2A31               	goto	l3460
  2604  0228                     u3200:
  2605                           	
  2606  0228                     l3452:	
  2607  0228  19F8               	btfsc	(checkButtons@oldReset/8),(checkButtons@oldReset)&7
  2608  0229  2A2B               	goto	u3211
  2609  022A  2A2C               	goto	u3210
  2610  022B                     u3211:
  2611  022B  2A31               	goto	l3460
  2612  022C                     u3210:
  2613                           	line	167
  2614                           	
  2615  022C                     l3454:	
  2616                           ;temporizador.c: 166: {
  2617                           ;temporizador.c: 167: time = 0;
  2618  022C  01D1               	clrf	(_time)
  2619  022D  01D2               	clrf	(_time+1)
  2620                           	line	168
  2621                           	
  2622  022E                     l3456:	
  2623                           ;temporizador.c: 168: RB0 = 0;
  2624  022E  1006               	bcf	(48/8),(48)&7
  2625                           	line	169
  2626                           	
  2627  022F                     l3458:	
  2628                           ;temporizador.c: 169: RB1 = 0;
  2629  022F  1086               	bcf	(49/8),(49)&7
  2630  0230  2A31               	goto	l3460
  2631                           	line	170
  2632                           	
  2633  0231                     l745:	
  2634                           	line	171
  2635                           	
  2636  0231                     l3460:	
  2637                           ;temporizador.c: 170: }
  2638                           ;temporizador.c: 171: oldReset = RD4;
  2639  0231  11F8               	bcf	(checkButtons@oldReset/8),(checkButtons@oldReset)&7
  2640  0232  1E08               	btfss	(68/8),(68)&7
  2641  0233  2A35               	goto	u3225
  2642  0234  15F8               	bsf	(checkButtons@oldReset/8),(checkButtons@oldReset)&7
  2643  0235                     u3225:
  2644                           
  2645                           	line	174
  2646                           	
  2647  0235                     l3462:	
  2648                           ;temporizador.c: 174: if (mode == 1 && !running)
  2649  0235  1283               	bcf	status, 5	;RP0=0, select bank0
  2650  0236  1303               	bcf	status, 6	;RP1=0, select bank0
  2651  0237  0854               	movf	(_mode),w
  2652  0238  3A01               	xorlw	01h
  2653  0239  1D03               	skipz
  2654  023A  2A3C               	goto	u3231
  2655  023B  2A3D               	goto	u3230
  2656  023C                     u3231:
  2657  023C  2A72               	goto	l3482
  2658  023D                     u3230:
  2659                           	
  2660  023D                     l3464:	
  2661  023D  08D5               	movf	(_running),f
  2662  023E  1D03               	skipz
  2663  023F  2A41               	goto	u3241
  2664  0240  2A42               	goto	u3240
  2665  0241                     u3241:
  2666  0241  2A72               	goto	l3482
  2667  0242                     u3240:
  2668                           	line	176
  2669                           	
  2670  0242                     l3466:	
  2671                           ;temporizador.c: 175: {
  2672                           ;temporizador.c: 176: if (RD7 && !oldInc)
  2673  0242  1F88               	btfss	(71/8),(71)&7
  2674  0243  2A45               	goto	u3251
  2675  0244  2A46               	goto	u3250
  2676  0245                     u3251:
  2677  0245  2A5B               	goto	l3474
  2678  0246                     u3250:
  2679                           	
  2680  0246                     l3468:	
  2681  0246  18F8               	btfsc	(checkButtons@oldInc/8),(checkButtons@oldInc)&7
  2682  0247  2A49               	goto	u3261
  2683  0248  2A4A               	goto	u3260
  2684  0249                     u3261:
  2685  0249  2A5B               	goto	l3474
  2686  024A                     u3260:
  2687                           	line	178
  2688                           	
  2689  024A                     l3470:	
  2690                           ;temporizador.c: 177: {
  2691                           ;temporizador.c: 178: if (time <= 5939)
  2692  024A  3017               	movlw	high(01734h)
  2693  024B  0252               	subwf	(_time+1),w
  2694  024C  3034               	movlw	low(01734h)
  2695  024D  1903               	skipnz
  2696  024E  0251               	subwf	(_time),w
  2697  024F  1803               	skipnc
  2698  0250  2A52               	goto	u3271
  2699  0251  2A53               	goto	u3270
  2700  0252                     u3271:
  2701  0252  2A5B               	goto	l3474
  2702  0253                     u3270:
  2703                           	line	179
  2704                           	
  2705  0253                     l3472:	
  2706                           ;temporizador.c: 179: time += 1;
  2707  0253  3001               	movlw	low(01h)
  2708  0254  07D1               	addwf	(_time),f
  2709  0255  1803               	skipnc
  2710  0256  0AD2               	incf	(_time+1),f
  2711  0257  3000               	movlw	high(01h)
  2712  0258  07D2               	addwf	(_time+1),f
  2713  0259  2A5B               	goto	l3474
  2714                           	
  2715  025A                     l748:	
  2716  025A  2A5B               	goto	l3474
  2717                           	line	180
  2718                           	
  2719  025B                     l747:	
  2720                           	line	182
  2721                           	
  2722  025B                     l3474:	
  2723                           ;temporizador.c: 180: }
  2724                           ;temporizador.c: 182: if (RD6 && !oldDec)
  2725  025B  1F08               	btfss	(70/8),(70)&7
  2726  025C  2A5E               	goto	u3281
  2727  025D  2A5F               	goto	u3280
  2728  025E                     u3281:
  2729  025E  2A72               	goto	l3482
  2730  025F                     u3280:
  2731                           	
  2732  025F                     l3476:	
  2733  025F  1878               	btfsc	(checkButtons@oldDec/8),(checkButtons@oldDec)&7
  2734  0260  2A62               	goto	u3291
  2735  0261  2A63               	goto	u3290
  2736  0262                     u3291:
  2737  0262  2A72               	goto	l3482
  2738  0263                     u3290:
  2739                           	line	184
  2740                           	
  2741  0263                     l3478:	
  2742                           ;temporizador.c: 183: {
  2743                           ;temporizador.c: 184: if (time >= 1)
  2744  0263  0852               	movf	(_time+1),w
  2745  0264  0451               	iorwf	(_time),w
  2746  0265  1903               	skipnz
  2747  0266  2A68               	goto	u3301
  2748  0267  2A69               	goto	u3300
  2749  0268                     u3301:
  2750  0268  2A72               	goto	l3482
  2751  0269                     u3300:
  2752                           	line	185
  2753                           	
  2754  0269                     l3480:	
  2755                           ;temporizador.c: 185: time -= 1;
  2756  0269  3001               	movlw	low(01h)
  2757  026A  02D1               	subwf	(_time),f
  2758  026B  3000               	movlw	high(01h)
  2759  026C  1C03               	skipc
  2760  026D  03D2               	decf	(_time+1),f
  2761  026E  02D2               	subwf	(_time+1),f
  2762  026F  2A72               	goto	l3482
  2763                           	
  2764  0270                     l750:	
  2765  0270  2A72               	goto	l3482
  2766                           	line	186
  2767                           	
  2768  0271                     l749:	
  2769  0271  2A72               	goto	l3482
  2770                           	line	187
  2771                           	
  2772  0272                     l746:	
  2773                           	line	188
  2774                           	
  2775  0272                     l3482:	
  2776                           ;temporizador.c: 186: }
  2777                           ;temporizador.c: 187: }
  2778                           ;temporizador.c: 188: oldInc = RD7;
  2779  0272  10F8               	bcf	(checkButtons@oldInc/8),(checkButtons@oldInc)&7
  2780  0273  1F88               	btfss	(71/8),(71)&7
  2781  0274  2A76               	goto	u3315
  2782  0275  14F8               	bsf	(checkButtons@oldInc/8),(checkButtons@oldInc)&7
  2783  0276                     u3315:
  2784                           
  2785                           	line	189
  2786                           	
  2787  0276                     l3484:	
  2788                           ;temporizador.c: 189: oldDec = RD6;
  2789  0276  1078               	bcf	(checkButtons@oldDec/8),(checkButtons@oldDec)&7
  2790  0277  1283               	bcf	status, 5	;RP0=0, select bank0
  2791  0278  1303               	bcf	status, 6	;RP1=0, select bank0
  2792  0279  1F08               	btfss	(70/8),(70)&7
  2793  027A  2A7C               	goto	u3325
  2794  027B  1478               	bsf	(checkButtons@oldDec/8),(checkButtons@oldDec)&7
  2795  027C                     u3325:
  2796                           
  2797                           	line	190
  2798                           	
  2799  027C                     l751:	
  2800  027C  0008               	return
  2801                           	opt stack 0
  2802                           GLOBAL	__end_of_checkButtons
  2803  027D                     	__end_of_checkButtons:
  2804 ;; =============== function _checkButtons ends ============
  2805                           
  2806                           	signat	_checkButtons,88
  2807                           	global	_sprintf
  2808                           psect	text718,local,class=CODE,delta=2
  2809                           global __ptext718
  2810  0015                     __ptext718:
  2811                           
  2812 ;; *************** function _sprintf *****************
  2813 ;; Defined at:
  2814 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  sp              1    wreg     PTR unsigned char 
  2817 ;;		 -> displayTime@buffer(8), 
  2818 ;;  f               1   11[BANK0 ] PTR const unsigned char 
  2819 ;;		 -> STR_1(10), 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  sp              1   26[BANK0 ] PTR unsigned char 
  2822 ;;		 -> displayTime@buffer(8), 
  2823 ;;  _val            4   21[BANK0 ] struct .
  2824 ;;  width           2   27[BANK0 ] int 
  2825 ;;  c               1   29[BANK0 ] char 
  2826 ;;  prec            1   25[BANK0 ] char 
  2827 ;;  flag            1   20[BANK0 ] unsigned char 
  2828 ;;  ap              1   19[BANK0 ] PTR void [1]
  2829 ;;		 -> ?_sprintf(2), 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  2   11[BANK0 ] int 
  2832 ;; Registers used:
  2833 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2839 ;;      Params:         0       5       0       0       0
  2840 ;;      Locals:         0      11       0       0       0
  2841 ;;      Temps:          0       3       0       0       0
  2842 ;;      Totals:         0      19       0       0       0
  2843 ;;Total ram usage:       19 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; Hardware stack levels required when called:    2
  2846 ;; This function calls:
  2847 ;;		_isdigit
  2848 ;;		___wmul
  2849 ;;		___lwdiv
  2850 ;;		___lwmod
  2851 ;; This function is called by:
  2852 ;;		_displayTime
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           psect	text718
  2856                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\doprnt.c"
  2857                           	line	488
  2858                           	global	__size_of_sprintf
  2859  01C0                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  2860                           	
  2861  0015                     _sprintf:	
  2862                           	opt	stack 3
  2863                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2864                           ;sprintf@sp stored from wreg
  2865                           	line	537
  2866  0015  1283               	bcf	status, 5	;RP0=0, select bank0
  2867  0016  1303               	bcf	status, 6	;RP1=0, select bank0
  2868  0017  00BA               	movwf	(sprintf@sp)
  2869                           	
  2870  0018                     l3732:	
  2871  0018  302C               	movlw	(?_sprintf+01h)&0ffh
  2872  0019  00B0               	movwf	(??_sprintf+0)+0
  2873  001A  0830               	movf	(??_sprintf+0)+0,w
  2874  001B  00B3               	movwf	(sprintf@ap)
  2875                           	line	540
  2876  001C  29B7               	goto	l3818
  2877                           	
  2878  001D                     l802:	
  2879                           	line	542
  2880                           	
  2881  001D                     l3734:	
  2882  001D  083D               	movf	(sprintf@c),w
  2883  001E  3A25               	xorlw	025h
  2884  001F  1903               	skipnz
  2885  0020  2822               	goto	u3561
  2886  0021  2823               	goto	u3560
  2887  0022                     u3561:
  2888  0022  282F               	goto	l3740
  2889  0023                     u3560:
  2890                           	line	545
  2891                           	
  2892  0023                     l3736:	
  2893  0023  083D               	movf	(sprintf@c),w
  2894  0024  00B0               	movwf	(??_sprintf+0)+0
  2895  0025  083A               	movf	(sprintf@sp),w
  2896  0026  0084               	movwf	fsr0
  2897  0027  0830               	movf	(??_sprintf+0)+0,w
  2898  0028  1383               	bcf	status, 7	;select IRP bank0
  2899  0029  0080               	movwf	indf
  2900                           	
  2901  002A                     l3738:	
  2902  002A  3001               	movlw	(01h)
  2903  002B  00B0               	movwf	(??_sprintf+0)+0
  2904  002C  0830               	movf	(??_sprintf+0)+0,w
  2905  002D  07BA               	addwf	(sprintf@sp),f
  2906                           	line	546
  2907  002E  29B7               	goto	l3818
  2908                           	line	547
  2909                           	
  2910  002F                     l803:	
  2911                           	line	550
  2912                           	
  2913  002F                     l3740:	
  2914  002F  01BB               	clrf	(sprintf@width)
  2915  0030  01BC               	clrf	(sprintf@width+1)
  2916                           	line	552
  2917                           	
  2918  0031                     l3742:	
  2919  0031  01B4               	clrf	(sprintf@flag)
  2920  0032  283B               	goto	l3748
  2921                           	line	554
  2922                           	
  2923  0033                     l804:	
  2924                           	line	555
  2925  0033  283B               	goto	l3748
  2926                           	line	583
  2927                           	
  2928  0034                     l806:	
  2929                           	line	584
  2930  0034  1534               	bsf	(sprintf@flag)+(2/8),(2)&7
  2931                           	line	585
  2932                           	
  2933  0035                     l3744:	
  2934  0035  3001               	movlw	(01h)
  2935  0036  00B0               	movwf	(??_sprintf+0)+0
  2936  0037  0830               	movf	(??_sprintf+0)+0,w
  2937  0038  07AB               	addwf	(sprintf@f),f
  2938                           	line	586
  2939  0039  283B               	goto	l3748
  2940                           	line	588
  2941                           	
  2942  003A                     l3746:	
  2943  003A  2848               	goto	l3750
  2944                           	line	555
  2945                           	
  2946  003B                     l805:	
  2947                           	
  2948  003B                     l3748:	
  2949  003B  082B               	movf	(sprintf@f),w
  2950  003C  0084               	movwf	fsr0
  2951  003D  120A  118A  2494   	fcall	stringdir
              120A  118A         
  2952                           	; Switch size 1, requested type "space"
  2953                           ; Number of cases is 1, Range of values is 48 to 48
  2954                           ; switch strategies available:
  2955                           ; Name         Instructions Cycles
  2956                           ; simple_byte            4     3 (average)
  2957                           ; direct_byte           14    11 (fixed)
  2958                           ; jumptable            263     9 (fixed)
  2959                           ;	Chosen strategy is simple_byte
  2960                           
  2961                           	opt asmopt_off
  2962  0042  3A30               	xorlw	48^0	; case 48
  2963  0043  1903               	skipnz
  2964  0044  2834               	goto	l806
  2965  0045  2848               	goto	l3750
  2966                           	opt asmopt_on
  2967                           
  2968                           	line	588
  2969                           	
  2970  0046                     l808:	
  2971                           	line	589
  2972  0046  2848               	goto	l3750
  2973                           	line	590
  2974                           	
  2975  0047                     l807:	
  2976  0047  283B               	goto	l3748
  2977                           	
  2978  0048                     l809:	
  2979                           	line	601
  2980                           	
  2981  0048                     l3750:	
  2982  0048  082B               	movf	(sprintf@f),w
  2983  0049  0084               	movwf	fsr0
  2984  004A  120A  118A  2494   	fcall	stringdir
              120A  118A         
  2985  004F  120A  118A  260F   	fcall	_isdigit
              120A  118A         
  2986  0054  1C03               	btfss	status,0
  2987  0055  2857               	goto	u3571
  2988  0056  2858               	goto	u3570
  2989  0057                     u3571:
  2990  0057  28A7               	goto	l3764
  2991  0058                     u3570:
  2992                           	line	602
  2993                           	
  2994  0058                     l3752:	
  2995  0058  1283               	bcf	status, 5	;RP0=0, select bank0
  2996  0059  1303               	bcf	status, 6	;RP1=0, select bank0
  2997  005A  01BB               	clrf	(sprintf@width)
  2998  005B  01BC               	clrf	(sprintf@width+1)
  2999  005C  285D               	goto	l3754
  3000                           	line	603
  3001                           	
  3002  005D                     l811:	
  3003                           	line	604
  3004                           	
  3005  005D                     l3754:	
  3006  005D  1283               	bcf	status, 5	;RP0=0, select bank0
  3007  005E  1303               	bcf	status, 6	;RP1=0, select bank0
  3008  005F  083C               	movf	(sprintf@width+1),w
  3009  0060  01A1               	clrf	(?___wmul+1)
  3010  0061  07A1               	addwf	(?___wmul+1)
  3011  0062  083B               	movf	(sprintf@width),w
  3012  0063  01A0               	clrf	(?___wmul)
  3013  0064  07A0               	addwf	(?___wmul)
  3014                           
  3015  0065  300A               	movlw	low(0Ah)
  3016  0066  00A2               	movwf	0+(?___wmul)+02h
  3017  0067  3000               	movlw	high(0Ah)
  3018  0068  00A3               	movwf	(0+(?___wmul)+02h)+1
  3019  0069  120A  118A  25CC   	fcall	___wmul
              120A  118A         
  3020  006E  1283               	bcf	status, 5	;RP0=0, select bank0
  3021  006F  1303               	bcf	status, 6	;RP1=0, select bank0
  3022  0070  082B               	movf	(sprintf@f),w
  3023  0071  0084               	movwf	fsr0
  3024  0072  120A  118A  2494   	fcall	stringdir
              120A  118A         
  3025  0077  0720               	addwf	(0+(?___wmul)),w
  3026  0078  00B0               	movwf	(??_sprintf+0)+0
  3027  0079  3000               	movlw	0
  3028  007A  1803               	skipnc
  3029  007B  3001               	movlw	1
  3030  007C  0721               	addwf	(1+(?___wmul)),w
  3031  007D  00B1               	movwf	1+(??_sprintf+0)+0
  3032  007E  0830               	movf	0+(??_sprintf+0)+0,w
  3033  007F  3ED0               	addlw	low(0FFD0h)
  3034  0080  00BB               	movwf	(sprintf@width)
  3035  0081  0831               	movf	1+(??_sprintf+0)+0,w
  3036  0082  1803               	skipnc
  3037  0083  3E01               	addlw	1
  3038  0084  3EFF               	addlw	high(0FFD0h)
  3039  0085  00BC               	movwf	1+(sprintf@width)
  3040                           	
  3041  0086                     l3756:	
  3042  0086  3001               	movlw	(01h)
  3043  0087  00B0               	movwf	(??_sprintf+0)+0
  3044  0088  0830               	movf	(??_sprintf+0)+0,w
  3045  0089  07AB               	addwf	(sprintf@f),f
  3046                           	line	605
  3047                           	
  3048  008A                     l3758:	
  3049  008A  082B               	movf	(sprintf@f),w
  3050  008B  0084               	movwf	fsr0
  3051  008C  120A  118A  2494   	fcall	stringdir
              120A  118A         
  3052  0091  120A  118A  260F   	fcall	_isdigit
              120A  118A         
  3053  0096  1803               	btfsc	status,0
  3054  0097  2899               	goto	u3581
  3055  0098  289A               	goto	u3580
  3056  0099                     u3581:
  3057  0099  285D               	goto	l3754
  3058  009A                     u3580:
  3059  009A  28A7               	goto	l3764
  3060                           	
  3061  009B                     l812:	
  3062  009B  28A7               	goto	l3764
  3063                           	line	611
  3064                           	
  3065  009C                     l810:	
  3066                           	line	638
  3067  009C  28A7               	goto	l3764
  3068                           	line	640
  3069                           	
  3070  009D                     l814:	
  3071                           	line	641
  3072  009D  29CD               	goto	l3820
  3073                           	line	805
  3074                           	
  3075  009E                     l816:	
  3076                           	line	816
  3077  009E  29B7               	goto	l3818
  3078                           	line	820
  3079                           	
  3080  009F                     l817:	
  3081                           	line	821
  3082                           	
  3083  009F                     l3760:	
  3084  009F  30C0               	movlw	(0C0h)
  3085  00A0  1283               	bcf	status, 5	;RP0=0, select bank0
  3086  00A1  1303               	bcf	status, 6	;RP1=0, select bank0
  3087  00A2  00B0               	movwf	(??_sprintf+0)+0
  3088  00A3  0830               	movf	(??_sprintf+0)+0,w
  3089  00A4  04B4               	iorwf	(sprintf@flag),f
  3090                           	line	822
  3091  00A5  28BB               	goto	l3766
  3092                           	line	825
  3093                           	
  3094  00A6                     l3762:	
  3095  00A6  28BB               	goto	l3766
  3096                           	line	638
  3097                           	
  3098  00A7                     l813:	
  3099                           	
  3100  00A7                     l3764:	
  3101  00A7  3001               	movlw	01h
  3102  00A8  1283               	bcf	status, 5	;RP0=0, select bank0
  3103  00A9  1303               	bcf	status, 6	;RP1=0, select bank0
  3104  00AA  07AB               	addwf	(sprintf@f),f
  3105  00AB  30FF               	movlw	-01h
  3106  00AC  072B               	addwf	(sprintf@f),w
  3107  00AD  0084               	movwf	fsr0
  3108  00AE  120A  118A  2494   	fcall	stringdir
              120A  118A         
  3109  00B3  00BD               	movwf	(sprintf@c)
  3110                           	; Switch size 1, requested type "space"
  3111                           ; Number of cases is 2, Range of values is 0 to 117
  3112                           ; switch strategies available:
  3113                           ; Name         Instructions Cycles
  3114                           ; simple_byte            7     4 (average)
  3115                           ; jumptable            260     6 (fixed)
  3116                           ; rangetable           122     6 (fixed)
  3117                           ; spacedrange          242     9 (fixed)
  3118                           ; locatedrange         118     3 (fixed)
  3119                           ;	Chosen strategy is simple_byte
  3120                           
  3121                           	opt asmopt_off
  3122  00B4  3A00               	xorlw	0^0	; case 0
  3123  00B5  1903               	skipnz
  3124  00B6  29CD               	goto	l3820
  3125  00B7  3A75               	xorlw	117^0	; case 117
  3126  00B8  1903               	skipnz
  3127  00B9  289F               	goto	l3760
  3128  00BA  29B7               	goto	l3818
  3129                           	opt asmopt_on
  3130                           
  3131                           	line	825
  3132                           	
  3133  00BB                     l818:	
  3134                           	line	1281
  3135                           	
  3136  00BB                     l3766:	
  3137  00BB  0833               	movf	(sprintf@ap),w
  3138  00BC  0084               	movwf	fsr0
  3139  00BD  1383               	bcf	status, 7	;select IRP bank0
  3140  00BE  0800               	movf	indf,w
  3141  00BF  00B5               	movwf	(sprintf@_val)
  3142  00C0  0A84               	incf	fsr0,f
  3143  00C1  0800               	movf	indf,w
  3144  00C2  00B6               	movwf	(sprintf@_val+1)
  3145                           	
  3146  00C3                     l3768:	
  3147  00C3  3002               	movlw	(02h)
  3148  00C4  00B0               	movwf	(??_sprintf+0)+0
  3149  00C5  0830               	movf	(??_sprintf+0)+0,w
  3150  00C6  07B3               	addwf	(sprintf@ap),f
  3151                           	line	1300
  3152                           	
  3153  00C7                     l3770:	
  3154  00C7  01BD               	clrf	(sprintf@c)
  3155  00C8  1403               	bsf	status,0
  3156  00C9  0DBD               	rlf	(sprintf@c),f
  3157                           	
  3158  00CA                     l3772:	
  3159  00CA  083D               	movf	(sprintf@c),w
  3160  00CB  3A05               	xorlw	05h
  3161  00CC  1D03               	skipz
  3162  00CD  28CF               	goto	u3591
  3163  00CE  28D0               	goto	u3590
  3164  00CF                     u3591:
  3165  00CF  28D2               	goto	l3776
  3166  00D0                     u3590:
  3167  00D0  28FA               	goto	l3784
  3168                           	
  3169  00D1                     l3774:	
  3170  00D1  28FA               	goto	l3784
  3171                           	line	1301
  3172                           	
  3173  00D2                     l819:	
  3174                           	
  3175  00D2                     l3776:	
  3176  00D2  083D               	movf	(sprintf@c),w
  3177  00D3  00B0               	movwf	(??_sprintf+0)+0
  3178  00D4  0730               	addwf	(??_sprintf+0)+0,w
  3179  00D5  3E01               	addlw	low((_dpowers-__stringbase))
  3180  00D6  0084               	movwf	fsr0
  3181  00D7  120A  118A  2494   	fcall	stringdir
              120A  118A         
  3182  00DC  00B1               	movwf	(??_sprintf+1)+0
  3183  00DD  120A  118A  2494   	fcall	stringdir
              120A  118A         
  3184  00E2  00B2               	movwf	(??_sprintf+1)+0+1
  3185  00E3  0832               	movf	1+(??_sprintf+1)+0,w
  3186  00E4  0236               	subwf	(sprintf@_val+1),w
  3187  00E5  1D03               	skipz
  3188  00E6  28E9               	goto	u3605
  3189  00E7  0831               	movf	0+(??_sprintf+1)+0,w
  3190  00E8  0235               	subwf	(sprintf@_val),w
  3191  00E9                     u3605:
  3192  00E9  1803               	skipnc
  3193  00EA  28EC               	goto	u3601
  3194  00EB  28ED               	goto	u3600
  3195  00EC                     u3601:
  3196  00EC  28EF               	goto	l3780
  3197  00ED                     u3600:
  3198  00ED  28FA               	goto	l3784
  3199                           	line	1302
  3200                           	
  3201  00EE                     l3778:	
  3202  00EE  28FA               	goto	l3784
  3203                           	
  3204  00EF                     l821:	
  3205                           	line	1300
  3206                           	
  3207  00EF                     l3780:	
  3208  00EF  3001               	movlw	(01h)
  3209  00F0  00B0               	movwf	(??_sprintf+0)+0
  3210  00F1  0830               	movf	(??_sprintf+0)+0,w
  3211  00F2  07BD               	addwf	(sprintf@c),f
  3212                           	
  3213  00F3                     l3782:	
  3214  00F3  083D               	movf	(sprintf@c),w
  3215  00F4  3A05               	xorlw	05h
  3216  00F5  1D03               	skipz
  3217  00F6  28F8               	goto	u3611
  3218  00F7  28F9               	goto	u3610
  3219  00F8                     u3611:
  3220  00F8  28D2               	goto	l3776
  3221  00F9                     u3610:
  3222  00F9  28FA               	goto	l3784
  3223                           	
  3224  00FA                     l820:	
  3225                           	line	1376
  3226                           	
  3227  00FA                     l3784:	
  3228  00FA  083D               	movf	(sprintf@c),w
  3229  00FB  00B0               	movwf	(??_sprintf+0)+0
  3230  00FC  01B1               	clrf	(??_sprintf+0)+0+1
  3231  00FD  1BB0               	btfsc	(??_sprintf+0)+0,7
  3232  00FE  03B1               	decf	(??_sprintf+0)+0+1,f
  3233  00FF  0831               	movf	1+(??_sprintf+0)+0,w
  3234  0100  3A80               	xorlw	80h
  3235  0101  00B2               	movwf	(??_sprintf+2)+0
  3236  0102  083C               	movf	(sprintf@width+1),w
  3237  0103  3A80               	xorlw	80h
  3238  0104  0232               	subwf	(??_sprintf+2)+0,w
  3239  0105  1D03               	skipz
  3240  0106  2909               	goto	u3625
  3241  0107  083B               	movf	(sprintf@width),w
  3242  0108  0230               	subwf	0+(??_sprintf+0)+0,w
  3243  0109                     u3625:
  3244                           
  3245  0109  1803               	skipnc
  3246  010A  290C               	goto	u3621
  3247  010B  290D               	goto	u3620
  3248  010C                     u3621:
  3249  010C  291B               	goto	l3788
  3250  010D                     u3620:
  3251                           	line	1377
  3252                           	
  3253  010D                     l3786:	
  3254  010D  1283               	bcf	status, 5	;RP0=0, select bank0
  3255  010E  1303               	bcf	status, 6	;RP1=0, select bank0
  3256  010F  083D               	movf	(sprintf@c),w
  3257  0110  00B0               	movwf	(??_sprintf+0)+0
  3258  0111  01B1               	clrf	(??_sprintf+0)+0+1
  3259  0112  1BB0               	btfsc	(??_sprintf+0)+0,7
  3260  0113  03B1               	decf	(??_sprintf+0)+0+1,f
  3261  0114  0830               	movf	0+(??_sprintf+0)+0,w
  3262  0115  02BB               	subwf	(sprintf@width),f
  3263  0116  0831               	movf	1+(??_sprintf+0)+0,w
  3264  0117  1C03               	skipc
  3265  0118  03BC               	decf	(sprintf@width+1),f
  3266  0119  02BC               	subwf	(sprintf@width+1),f
  3267  011A  2920               	goto	l3790
  3268                           	line	1378
  3269                           	
  3270  011B                     l822:	
  3271                           	line	1379
  3272                           	
  3273  011B                     l3788:	
  3274  011B  1283               	bcf	status, 5	;RP0=0, select bank0
  3275  011C  1303               	bcf	status, 6	;RP1=0, select bank0
  3276  011D  01BB               	clrf	(sprintf@width)
  3277  011E  01BC               	clrf	(sprintf@width+1)
  3278  011F  2920               	goto	l3790
  3279                           	
  3280  0120                     l823:	
  3281                           	line	1382
  3282                           	
  3283  0120                     l3790:	
  3284  0120  1D34               	btfss	(sprintf@flag),(2)&7
  3285  0121  2923               	goto	u3631
  3286  0122  2924               	goto	u3630
  3287  0123                     u3631:
  3288  0123  2945               	goto	l3800
  3289  0124                     u3630:
  3290                           	line	1410
  3291                           	
  3292  0124                     l3792:	
  3293  0124  083C               	movf	(sprintf@width+1),w
  3294  0125  043B               	iorwf	(sprintf@width),w
  3295  0126  1903               	skipnz
  3296  0127  2929               	goto	u3641
  3297  0128  292A               	goto	u3640
  3298  0129                     u3641:
  3299  0129  2966               	goto	l3808
  3300  012A                     u3640:
  3301  012A  292B               	goto	l3794
  3302                           	line	1411
  3303                           	
  3304  012B                     l826:	
  3305                           	line	1412
  3306                           	
  3307  012B                     l3794:	
  3308  012B  3030               	movlw	(030h)
  3309  012C  00B0               	movwf	(??_sprintf+0)+0
  3310  012D  083A               	movf	(sprintf@sp),w
  3311  012E  0084               	movwf	fsr0
  3312  012F  0830               	movf	(??_sprintf+0)+0,w
  3313  0130  1383               	bcf	status, 7	;select IRP bank0
  3314  0131  0080               	movwf	indf
  3315                           	
  3316  0132                     l3796:	
  3317  0132  3001               	movlw	(01h)
  3318  0133  00B0               	movwf	(??_sprintf+0)+0
  3319  0134  0830               	movf	(??_sprintf+0)+0,w
  3320  0135  07BA               	addwf	(sprintf@sp),f
  3321                           	line	1413
  3322                           	
  3323  0136                     l3798:	
  3324  0136  30FF               	movlw	low(-1)
  3325  0137  07BB               	addwf	(sprintf@width),f
  3326  0138  1803               	skipnc
  3327  0139  0ABC               	incf	(sprintf@width+1),f
  3328  013A  30FF               	movlw	high(-1)
  3329  013B  07BC               	addwf	(sprintf@width+1),f
  3330  013C  083C               	movf	(((sprintf@width+1))),w
  3331  013D  043B               	iorwf	(((sprintf@width))),w
  3332  013E  1D03               	skipz
  3333  013F  2941               	goto	u3651
  3334  0140  2942               	goto	u3650
  3335  0141                     u3651:
  3336  0141  292B               	goto	l3794
  3337  0142                     u3650:
  3338  0142  2966               	goto	l3808
  3339                           	
  3340  0143                     l827:	
  3341  0143  2966               	goto	l3808
  3342                           	
  3343  0144                     l825:	
  3344                           	line	1415
  3345  0144  2966               	goto	l3808
  3346                           	
  3347  0145                     l824:	
  3348                           	line	1423
  3349                           	
  3350  0145                     l3800:	
  3351  0145  083C               	movf	(sprintf@width+1),w
  3352  0146  043B               	iorwf	(sprintf@width),w
  3353  0147  1903               	skipnz
  3354  0148  294A               	goto	u3661
  3355  0149  294B               	goto	u3660
  3356  014A                     u3661:
  3357  014A  2966               	goto	l3808
  3358  014B                     u3660:
  3359  014B  294C               	goto	l3802
  3360                           	line	1424
  3361                           	
  3362  014C                     l830:	
  3363                           	line	1425
  3364                           	
  3365  014C                     l3802:	
  3366  014C  3020               	movlw	(020h)
  3367  014D  00B0               	movwf	(??_sprintf+0)+0
  3368  014E  083A               	movf	(sprintf@sp),w
  3369  014F  0084               	movwf	fsr0
  3370  0150  0830               	movf	(??_sprintf+0)+0,w
  3371  0151  1383               	bcf	status, 7	;select IRP bank0
  3372  0152  0080               	movwf	indf
  3373                           	
  3374  0153                     l3804:	
  3375  0153  3001               	movlw	(01h)
  3376  0154  00B0               	movwf	(??_sprintf+0)+0
  3377  0155  0830               	movf	(??_sprintf+0)+0,w
  3378  0156  07BA               	addwf	(sprintf@sp),f
  3379                           	line	1426
  3380                           	
  3381  0157                     l3806:	
  3382  0157  30FF               	movlw	low(-1)
  3383  0158  07BB               	addwf	(sprintf@width),f
  3384  0159  1803               	skipnc
  3385  015A  0ABC               	incf	(sprintf@width+1),f
  3386  015B  30FF               	movlw	high(-1)
  3387  015C  07BC               	addwf	(sprintf@width+1),f
  3388  015D  083C               	movf	(((sprintf@width+1))),w
  3389  015E  043B               	iorwf	(((sprintf@width))),w
  3390  015F  1D03               	skipz
  3391  0160  2962               	goto	u3671
  3392  0161  2963               	goto	u3670
  3393  0162                     u3671:
  3394  0162  294C               	goto	l3802
  3395  0163                     u3670:
  3396  0163  2966               	goto	l3808
  3397                           	
  3398  0164                     l831:	
  3399  0164  2966               	goto	l3808
  3400                           	
  3401  0165                     l829:	
  3402  0165  2966               	goto	l3808
  3403                           	line	1464
  3404                           	
  3405  0166                     l828:	
  3406                           	line	1467
  3407                           	
  3408  0166                     l3808:	
  3409  0166  083D               	movf	(sprintf@c),w
  3410  0167  00B0               	movwf	(??_sprintf+0)+0
  3411  0168  0830               	movf	(??_sprintf+0)+0,w
  3412  0169  00B9               	movwf	(sprintf@prec)
  3413                           	line	1469
  3414  016A  29AB               	goto	l3816
  3415                           	
  3416  016B                     l833:	
  3417                           	line	1484
  3418                           	
  3419  016B                     l3810:	
  3420  016B  300A               	movlw	low(0Ah)
  3421  016C  00A7               	movwf	(?___lwmod)
  3422  016D  3000               	movlw	high(0Ah)
  3423  016E  00A8               	movwf	((?___lwmod))+1
  3424  016F  0839               	movf	(sprintf@prec),w
  3425  0170  00B0               	movwf	(??_sprintf+0)+0
  3426  0171  0730               	addwf	(??_sprintf+0)+0,w
  3427  0172  3E01               	addlw	low((_dpowers-__stringbase))
  3428  0173  0084               	movwf	fsr0
  3429  0174  120A  118A  2494   	fcall	stringdir
              120A  118A         
  3430  0179  00A0               	movwf	(?___lwdiv)
  3431  017A  120A  118A  2494   	fcall	stringdir
              120A  118A         
  3432  017F  00A1               	movwf	(?___lwdiv+1)
  3433  0180  0836               	movf	(sprintf@_val+1),w
  3434  0181  01A3               	clrf	1+(?___lwdiv)+02h
  3435  0182  07A3               	addwf	1+(?___lwdiv)+02h
  3436  0183  0835               	movf	(sprintf@_val),w
  3437  0184  01A2               	clrf	0+(?___lwdiv)+02h
  3438  0185  07A2               	addwf	0+(?___lwdiv)+02h
  3439                           
  3440  0186  120A  118A  2358   	fcall	___lwdiv
              120A  118A         
  3441  018B  1283               	bcf	status, 5	;RP0=0, select bank0
  3442  018C  1303               	bcf	status, 6	;RP1=0, select bank0
  3443  018D  0821               	movf	(1+(?___lwdiv)),w
  3444  018E  01AA               	clrf	1+(?___lwmod)+02h
  3445  018F  07AA               	addwf	1+(?___lwmod)+02h
  3446  0190  0820               	movf	(0+(?___lwdiv)),w
  3447  0191  01A9               	clrf	0+(?___lwmod)+02h
  3448  0192  07A9               	addwf	0+(?___lwmod)+02h
  3449                           
  3450  0193  120A  118A  2444   	fcall	___lwmod
              120A  118A         
  3451  0198  1283               	bcf	status, 5	;RP0=0, select bank0
  3452  0199  1303               	bcf	status, 6	;RP1=0, select bank0
  3453  019A  0827               	movf	(0+(?___lwmod)),w
  3454  019B  3E30               	addlw	030h
  3455  019C  00B1               	movwf	(??_sprintf+1)+0
  3456  019D  0831               	movf	(??_sprintf+1)+0,w
  3457  019E  00BD               	movwf	(sprintf@c)
  3458                           	line	1516
  3459                           	
  3460  019F                     l3812:	
  3461  019F  083D               	movf	(sprintf@c),w
  3462  01A0  00B0               	movwf	(??_sprintf+0)+0
  3463  01A1  083A               	movf	(sprintf@sp),w
  3464  01A2  0084               	movwf	fsr0
  3465  01A3  0830               	movf	(??_sprintf+0)+0,w
  3466  01A4  1383               	bcf	status, 7	;select IRP bank0
  3467  01A5  0080               	movwf	indf
  3468                           	
  3469  01A6                     l3814:	
  3470  01A6  3001               	movlw	(01h)
  3471  01A7  00B0               	movwf	(??_sprintf+0)+0
  3472  01A8  0830               	movf	(??_sprintf+0)+0,w
  3473  01A9  07BA               	addwf	(sprintf@sp),f
  3474  01AA  29AB               	goto	l3816
  3475                           	line	1517
  3476                           	
  3477  01AB                     l832:	
  3478                           	line	1469
  3479                           	
  3480  01AB                     l3816:	
  3481  01AB  30FF               	movlw	(-1)
  3482  01AC  00B0               	movwf	(??_sprintf+0)+0
  3483  01AD  0830               	movf	(??_sprintf+0)+0,w
  3484  01AE  07B9               	addwf	(sprintf@prec),f
  3485  01AF  0839               	movf	((sprintf@prec)),w
  3486  01B0  3AFF               	xorlw	-1
  3487  01B1  1D03               	skipz
  3488  01B2  29B4               	goto	u3681
  3489  01B3  29B5               	goto	u3680
  3490  01B4                     u3681:
  3491  01B4  296B               	goto	l3810
  3492  01B5                     u3680:
  3493  01B5  29B7               	goto	l3818
  3494                           	
  3495  01B6                     l834:	
  3496  01B6  29B7               	goto	l3818
  3497                           	line	1525
  3498                           	
  3499  01B7                     l801:	
  3500                           	line	540
  3501                           	
  3502  01B7                     l3818:	
  3503  01B7  3001               	movlw	01h
  3504  01B8  1283               	bcf	status, 5	;RP0=0, select bank0
  3505  01B9  1303               	bcf	status, 6	;RP1=0, select bank0
  3506  01BA  07AB               	addwf	(sprintf@f),f
  3507  01BB  30FF               	movlw	-01h
  3508  01BC  072B               	addwf	(sprintf@f),w
  3509  01BD  0084               	movwf	fsr0
  3510  01BE  120A  118A  2494   	fcall	stringdir
              120A  118A         
  3511  01C3  00B0               	movwf	(??_sprintf+0)+0
  3512  01C4  0830               	movf	(??_sprintf+0)+0,w
  3513  01C5  00BD               	movwf	(sprintf@c)
  3514  01C6  08BD               	movf	((sprintf@c)),f
  3515  01C7  1D03               	skipz
  3516  01C8  29CA               	goto	u3691
  3517  01C9  29CB               	goto	u3690
  3518  01CA                     u3691:
  3519  01CA  281D               	goto	l3734
  3520  01CB                     u3690:
  3521  01CB  29CD               	goto	l3820
  3522                           	
  3523  01CC                     l835:	
  3524  01CC  29CD               	goto	l3820
  3525                           	line	1527
  3526                           	
  3527  01CD                     l815:	
  3528                           	line	1530
  3529                           	
  3530  01CD                     l3820:	
  3531  01CD  1283               	bcf	status, 5	;RP0=0, select bank0
  3532  01CE  1303               	bcf	status, 6	;RP1=0, select bank0
  3533  01CF  083A               	movf	(sprintf@sp),w
  3534  01D0  0084               	movwf	fsr0
  3535  01D1  1383               	bcf	status, 7	;select IRP bank0
  3536  01D2  0180               	clrf	indf
  3537  01D3  29D4               	goto	l836
  3538                           	line	1532
  3539                           	
  3540  01D4                     l3822:	
  3541                           	line	1533
  3542                           ;	Return value of _sprintf is never used
  3543                           	
  3544  01D4                     l836:	
  3545  01D4  0008               	return
  3546                           	opt stack 0
  3547                           GLOBAL	__end_of_sprintf
  3548  01D5                     	__end_of_sprintf:
  3549 ;; =============== function _sprintf ends ============
  3550                           
  3551                           	signat	_sprintf,4698
  3552                           	global	___lwmod
  3553                           psect	text719,local,class=CODE,delta=2
  3554                           global __ptext719
  3555  0444                     __ptext719:
  3556                           
  3557 ;; *************** function ___lwmod *****************
  3558 ;; Defined at:
  3559 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwmod.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  divisor         2    7[BANK0 ] unsigned int 
  3562 ;;  dividend        2    9[BANK0 ] unsigned int 
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  counter         1    7[COMMON] unsigned char 
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  2    7[BANK0 ] unsigned int 
  3567 ;; Registers used:
  3568 ;;		wreg, status,2, status,0
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3574 ;;      Params:         0       4       0       0       0
  3575 ;;      Locals:         1       0       0       0       0
  3576 ;;      Temps:          1       0       0       0       0
  3577 ;;      Totals:         2       4       0       0       0
  3578 ;;Total ram usage:        6 bytes
  3579 ;; Hardware stack levels used:    1
  3580 ;; Hardware stack levels required when called:    1
  3581 ;; This function calls:
  3582 ;;		Nothing
  3583 ;; This function is called by:
  3584 ;;		_displayTime
  3585 ;;		_sprintf
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           psect	text719
  3589                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwmod.c"
  3590                           	line	5
  3591                           	global	__size_of___lwmod
  3592  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  3593                           	
  3594  0444                     ___lwmod:	
  3595                           	opt	stack 3
  3596                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3597                           	line	8
  3598                           	
  3599  0444                     l3710:	
  3600  0444  1283               	bcf	status, 5	;RP0=0, select bank0
  3601  0445  1303               	bcf	status, 6	;RP1=0, select bank0
  3602  0446  0828               	movf	(___lwmod@divisor+1),w
  3603  0447  0427               	iorwf	(___lwmod@divisor),w
  3604  0448  1903               	skipnz
  3605  0449  2C4B               	goto	u3501
  3606  044A  2C4C               	goto	u3500
  3607  044B                     u3501:
  3608  044B  2C82               	goto	l3728
  3609  044C                     u3500:
  3610                           	line	9
  3611                           	
  3612  044C                     l3712:	
  3613  044C  01F7               	clrf	(___lwmod@counter)
  3614  044D  1403               	bsf	status,0
  3615  044E  0DF7               	rlf	(___lwmod@counter),f
  3616                           	line	10
  3617  044F  2C5C               	goto	l3718
  3618                           	
  3619  0450                     l1542:	
  3620                           	line	11
  3621                           	
  3622  0450                     l3714:	
  3623  0450  3001               	movlw	01h
  3624                           	
  3625  0451                     u3515:
  3626  0451  1003               	clrc
  3627  0452  0DA7               	rlf	(___lwmod@divisor),f
  3628  0453  0DA8               	rlf	(___lwmod@divisor+1),f
  3629  0454  3EFF               	addlw	-1
  3630  0455  1D03               	skipz
  3631  0456  2C51               	goto	u3515
  3632                           	line	12
  3633                           	
  3634  0457                     l3716:	
  3635  0457  3001               	movlw	(01h)
  3636  0458  00F6               	movwf	(??___lwmod+0)+0
  3637  0459  0876               	movf	(??___lwmod+0)+0,w
  3638  045A  07F7               	addwf	(___lwmod@counter),f
  3639  045B  2C5C               	goto	l3718
  3640                           	line	13
  3641                           	
  3642  045C                     l1541:	
  3643                           	line	10
  3644                           	
  3645  045C                     l3718:	
  3646  045C  1FA8               	btfss	(___lwmod@divisor+1),(15)&7
  3647  045D  2C5F               	goto	u3521
  3648  045E  2C60               	goto	u3520
  3649  045F                     u3521:
  3650  045F  2C50               	goto	l3714
  3651  0460                     u3520:
  3652  0460  2C62               	goto	l3720
  3653                           	
  3654  0461                     l1543:	
  3655  0461  2C62               	goto	l3720
  3656                           	line	14
  3657                           	
  3658  0462                     l1544:	
  3659                           	line	15
  3660                           	
  3661  0462                     l3720:	
  3662  0462  0828               	movf	(___lwmod@divisor+1),w
  3663  0463  022A               	subwf	(___lwmod@dividend+1),w
  3664  0464  1D03               	skipz
  3665  0465  2C68               	goto	u3535
  3666  0466  0827               	movf	(___lwmod@divisor),w
  3667  0467  0229               	subwf	(___lwmod@dividend),w
  3668  0468                     u3535:
  3669  0468  1C03               	skipc
  3670  0469  2C6B               	goto	u3531
  3671  046A  2C6C               	goto	u3530
  3672  046B                     u3531:
  3673  046B  2C73               	goto	l3724
  3674  046C                     u3530:
  3675                           	line	16
  3676                           	
  3677  046C                     l3722:	
  3678  046C  0827               	movf	(___lwmod@divisor),w
  3679  046D  02A9               	subwf	(___lwmod@dividend),f
  3680  046E  0828               	movf	(___lwmod@divisor+1),w
  3681  046F  1C03               	skipc
  3682  0470  03AA               	decf	(___lwmod@dividend+1),f
  3683  0471  02AA               	subwf	(___lwmod@dividend+1),f
  3684  0472  2C73               	goto	l3724
  3685                           	
  3686  0473                     l1545:	
  3687                           	line	17
  3688                           	
  3689  0473                     l3724:	
  3690  0473  3001               	movlw	01h
  3691                           	
  3692  0474                     u3545:
  3693  0474  1003               	clrc
  3694  0475  0CA8               	rrf	(___lwmod@divisor+1),f
  3695  0476  0CA7               	rrf	(___lwmod@divisor),f
  3696  0477  3EFF               	addlw	-1
  3697  0478  1D03               	skipz
  3698  0479  2C74               	goto	u3545
  3699                           	line	18
  3700                           	
  3701  047A                     l3726:	
  3702  047A  3001               	movlw	low(01h)
  3703  047B  02F7               	subwf	(___lwmod@counter),f
  3704  047C  1D03               	btfss	status,2
  3705  047D  2C7F               	goto	u3551
  3706  047E  2C80               	goto	u3550
  3707  047F                     u3551:
  3708  047F  2C62               	goto	l3720
  3709  0480                     u3550:
  3710  0480  2C82               	goto	l3728
  3711                           	
  3712  0481                     l1546:	
  3713  0481  2C82               	goto	l3728
  3714                           	line	19
  3715                           	
  3716  0482                     l1540:	
  3717                           	line	20
  3718                           	
  3719  0482                     l3728:	
  3720  0482  082A               	movf	(___lwmod@dividend+1),w
  3721  0483  01A8               	clrf	(?___lwmod+1)
  3722  0484  07A8               	addwf	(?___lwmod+1)
  3723  0485  0829               	movf	(___lwmod@dividend),w
  3724  0486  01A7               	clrf	(?___lwmod)
  3725  0487  07A7               	addwf	(?___lwmod)
  3726                           
  3727  0488  2C89               	goto	l1547
  3728                           	
  3729  0489                     l3730:	
  3730                           	line	21
  3731                           	
  3732  0489                     l1547:	
  3733  0489  0008               	return
  3734                           	opt stack 0
  3735                           GLOBAL	__end_of___lwmod
  3736  048A                     	__end_of___lwmod:
  3737 ;; =============== function ___lwmod ends ============
  3738                           
  3739                           	signat	___lwmod,8314
  3740                           	global	___lwdiv
  3741                           psect	text720,local,class=CODE,delta=2
  3742                           global __ptext720
  3743  0358                     __ptext720:
  3744                           
  3745 ;; *************** function ___lwdiv *****************
  3746 ;; Defined at:
  3747 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwdiv.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  divisor         2    0[BANK0 ] unsigned int 
  3750 ;;  dividend        2    2[BANK0 ] unsigned int 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  quotient        2    5[BANK0 ] unsigned int 
  3753 ;;  counter         1    4[BANK0 ] unsigned char 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  2    0[BANK0 ] unsigned int 
  3756 ;; Registers used:
  3757 ;;		wreg, status,2, status,0
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3763 ;;      Params:         0       4       0       0       0
  3764 ;;      Locals:         0       3       0       0       0
  3765 ;;      Temps:          1       0       0       0       0
  3766 ;;      Totals:         1       7       0       0       0
  3767 ;;Total ram usage:        8 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:    1
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_displayTime
  3774 ;;		_sprintf
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           psect	text720
  3778                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwdiv.c"
  3779                           	line	5
  3780                           	global	__size_of___lwdiv
  3781  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  3782                           	
  3783  0358                     ___lwdiv:	
  3784                           	opt	stack 3
  3785                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3786                           	line	9
  3787                           	
  3788  0358                     l3684:	
  3789  0358  1283               	bcf	status, 5	;RP0=0, select bank0
  3790  0359  1303               	bcf	status, 6	;RP1=0, select bank0
  3791  035A  01A5               	clrf	(___lwdiv@quotient)
  3792  035B  01A6               	clrf	(___lwdiv@quotient+1)
  3793                           	line	10
  3794                           	
  3795  035C                     l3686:	
  3796  035C  0821               	movf	(___lwdiv@divisor+1),w
  3797  035D  0420               	iorwf	(___lwdiv@divisor),w
  3798  035E  1903               	skipnz
  3799  035F  2B61               	goto	u3431
  3800  0360  2B62               	goto	u3430
  3801  0361                     u3431:
  3802  0361  2BA0               	goto	l3706
  3803  0362                     u3430:
  3804                           	line	11
  3805                           	
  3806  0362                     l3688:	
  3807  0362  01A4               	clrf	(___lwdiv@counter)
  3808  0363  1403               	bsf	status,0
  3809  0364  0DA4               	rlf	(___lwdiv@counter),f
  3810                           	line	12
  3811  0365  2B72               	goto	l3694
  3812                           	
  3813  0366                     l1532:	
  3814                           	line	13
  3815                           	
  3816  0366                     l3690:	
  3817  0366  3001               	movlw	01h
  3818                           	
  3819  0367                     u3445:
  3820  0367  1003               	clrc
  3821  0368  0DA0               	rlf	(___lwdiv@divisor),f
  3822  0369  0DA1               	rlf	(___lwdiv@divisor+1),f
  3823  036A  3EFF               	addlw	-1
  3824  036B  1D03               	skipz
  3825  036C  2B67               	goto	u3445
  3826                           	line	14
  3827                           	
  3828  036D                     l3692:	
  3829  036D  3001               	movlw	(01h)
  3830  036E  00F5               	movwf	(??___lwdiv+0)+0
  3831  036F  0875               	movf	(??___lwdiv+0)+0,w
  3832  0370  07A4               	addwf	(___lwdiv@counter),f
  3833  0371  2B72               	goto	l3694
  3834                           	line	15
  3835                           	
  3836  0372                     l1531:	
  3837                           	line	12
  3838                           	
  3839  0372                     l3694:	
  3840  0372  1FA1               	btfss	(___lwdiv@divisor+1),(15)&7
  3841  0373  2B75               	goto	u3451
  3842  0374  2B76               	goto	u3450
  3843  0375                     u3451:
  3844  0375  2B66               	goto	l3690
  3845  0376                     u3450:
  3846  0376  2B78               	goto	l3696
  3847                           	
  3848  0377                     l1533:	
  3849  0377  2B78               	goto	l3696
  3850                           	line	16
  3851                           	
  3852  0378                     l1534:	
  3853                           	line	17
  3854                           	
  3855  0378                     l3696:	
  3856  0378  3001               	movlw	01h
  3857                           	
  3858  0379                     u3465:
  3859  0379  1003               	clrc
  3860  037A  0DA5               	rlf	(___lwdiv@quotient),f
  3861  037B  0DA6               	rlf	(___lwdiv@quotient+1),f
  3862  037C  3EFF               	addlw	-1
  3863  037D  1D03               	skipz
  3864  037E  2B79               	goto	u3465
  3865                           	line	18
  3866  037F  0821               	movf	(___lwdiv@divisor+1),w
  3867  0380  0223               	subwf	(___lwdiv@dividend+1),w
  3868  0381  1D03               	skipz
  3869  0382  2B85               	goto	u3475
  3870  0383  0820               	movf	(___lwdiv@divisor),w
  3871  0384  0222               	subwf	(___lwdiv@dividend),w
  3872  0385                     u3475:
  3873  0385  1C03               	skipc
  3874  0386  2B88               	goto	u3471
  3875  0387  2B89               	goto	u3470
  3876  0388                     u3471:
  3877  0388  2B91               	goto	l3702
  3878  0389                     u3470:
  3879                           	line	19
  3880                           	
  3881  0389                     l3698:	
  3882  0389  0820               	movf	(___lwdiv@divisor),w
  3883  038A  02A2               	subwf	(___lwdiv@dividend),f
  3884  038B  0821               	movf	(___lwdiv@divisor+1),w
  3885  038C  1C03               	skipc
  3886  038D  03A3               	decf	(___lwdiv@dividend+1),f
  3887  038E  02A3               	subwf	(___lwdiv@dividend+1),f
  3888                           	line	20
  3889                           	
  3890  038F                     l3700:	
  3891  038F  1425               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3892  0390  2B91               	goto	l3702
  3893                           	line	21
  3894                           	
  3895  0391                     l1535:	
  3896                           	line	22
  3897                           	
  3898  0391                     l3702:	
  3899  0391  3001               	movlw	01h
  3900                           	
  3901  0392                     u3485:
  3902  0392  1003               	clrc
  3903  0393  0CA1               	rrf	(___lwdiv@divisor+1),f
  3904  0394  0CA0               	rrf	(___lwdiv@divisor),f
  3905  0395  3EFF               	addlw	-1
  3906  0396  1D03               	skipz
  3907  0397  2B92               	goto	u3485
  3908                           	line	23
  3909                           	
  3910  0398                     l3704:	
  3911  0398  3001               	movlw	low(01h)
  3912  0399  02A4               	subwf	(___lwdiv@counter),f
  3913  039A  1D03               	btfss	status,2
  3914  039B  2B9D               	goto	u3491
  3915  039C  2B9E               	goto	u3490
  3916  039D                     u3491:
  3917  039D  2B78               	goto	l3696
  3918  039E                     u3490:
  3919  039E  2BA0               	goto	l3706
  3920                           	
  3921  039F                     l1536:	
  3922  039F  2BA0               	goto	l3706
  3923                           	line	24
  3924                           	
  3925  03A0                     l1530:	
  3926                           	line	25
  3927                           	
  3928  03A0                     l3706:	
  3929  03A0  0826               	movf	(___lwdiv@quotient+1),w
  3930  03A1  01A1               	clrf	(?___lwdiv+1)
  3931  03A2  07A1               	addwf	(?___lwdiv+1)
  3932  03A3  0825               	movf	(___lwdiv@quotient),w
  3933  03A4  01A0               	clrf	(?___lwdiv)
  3934  03A5  07A0               	addwf	(?___lwdiv)
  3935                           
  3936  03A6  2BA7               	goto	l1537
  3937                           	
  3938  03A7                     l3708:	
  3939                           	line	26
  3940                           	
  3941  03A7                     l1537:	
  3942  03A7  0008               	return
  3943                           	opt stack 0
  3944                           GLOBAL	__end_of___lwdiv
  3945  03A8                     	__end_of___lwdiv:
  3946 ;; =============== function ___lwdiv ends ============
  3947                           
  3948                           	signat	___lwdiv,8314
  3949                           	global	___wmul
  3950                           psect	text721,local,class=CODE,delta=2
  3951                           global __ptext721
  3952  05CC                     __ptext721:
  3953                           
  3954 ;; *************** function ___wmul *****************
  3955 ;; Defined at:
  3956 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3959 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;  product         2    5[COMMON] unsigned int 
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  2    0[BANK0 ] unsigned int 
  3964 ;; Registers used:
  3965 ;;		wreg, status,2, status,0
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3971 ;;      Params:         0       4       0       0       0
  3972 ;;      Locals:         2       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0
  3974 ;;      Totals:         2       4       0       0       0
  3975 ;;Total ram usage:        6 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:    1
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_sprintf
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           psect	text721
  3985                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
  3986                           	line	3
  3987                           	global	__size_of___wmul
  3988  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  3989                           	
  3990  05CC                     ___wmul:	
  3991                           	opt	stack 3
  3992                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3993                           	line	4
  3994                           	
  3995  05CC                     l3672:	
  3996  05CC  01F5               	clrf	(___wmul@product)
  3997  05CD  01F6               	clrf	(___wmul@product+1)
  3998  05CE  2DCF               	goto	l3674
  3999                           	line	6
  4000                           	
  4001  05CF                     l1524:	
  4002                           	line	7
  4003                           	
  4004  05CF                     l3674:	
  4005  05CF  1283               	bcf	status, 5	;RP0=0, select bank0
  4006  05D0  1303               	bcf	status, 6	;RP1=0, select bank0
  4007  05D1  1C20               	btfss	(___wmul@multiplier),(0)&7
  4008  05D2  2DD4               	goto	u3391
  4009  05D3  2DD5               	goto	u3390
  4010  05D4                     u3391:
  4011  05D4  2DDB               	goto	l1525
  4012  05D5                     u3390:
  4013                           	line	8
  4014                           	
  4015  05D5                     l3676:	
  4016  05D5  0822               	movf	(___wmul@multiplicand),w
  4017  05D6  07F5               	addwf	(___wmul@product),f
  4018  05D7  1803               	skipnc
  4019  05D8  0AF6               	incf	(___wmul@product+1),f
  4020  05D9  0823               	movf	(___wmul@multiplicand+1),w
  4021  05DA  07F6               	addwf	(___wmul@product+1),f
  4022                           	
  4023  05DB                     l1525:	
  4024                           	line	9
  4025  05DB  3001               	movlw	01h
  4026                           	
  4027  05DC                     u3405:
  4028  05DC  1003               	clrc
  4029  05DD  0DA2               	rlf	(___wmul@multiplicand),f
  4030  05DE  0DA3               	rlf	(___wmul@multiplicand+1),f
  4031  05DF  3EFF               	addlw	-1
  4032  05E0  1D03               	skipz
  4033  05E1  2DDC               	goto	u3405
  4034                           	line	10
  4035                           	
  4036  05E2                     l3678:	
  4037  05E2  3001               	movlw	01h
  4038                           	
  4039  05E3                     u3415:
  4040  05E3  1003               	clrc
  4041  05E4  0CA1               	rrf	(___wmul@multiplier+1),f
  4042  05E5  0CA0               	rrf	(___wmul@multiplier),f
  4043  05E6  3EFF               	addlw	-1
  4044  05E7  1D03               	skipz
  4045  05E8  2DE3               	goto	u3415
  4046                           	line	11
  4047  05E9  0821               	movf	((___wmul@multiplier+1)),w
  4048  05EA  0420               	iorwf	((___wmul@multiplier)),w
  4049  05EB  1D03               	skipz
  4050  05EC  2DEE               	goto	u3421
  4051  05ED  2DEF               	goto	u3420
  4052  05EE                     u3421:
  4053  05EE  2DCF               	goto	l3674
  4054  05EF                     u3420:
  4055  05EF  2DF0               	goto	l3680
  4056                           	
  4057  05F0                     l1526:	
  4058                           	line	12
  4059                           	
  4060  05F0                     l3680:	
  4061  05F0  0876               	movf	(___wmul@product+1),w
  4062  05F1  01A1               	clrf	(?___wmul+1)
  4063  05F2  07A1               	addwf	(?___wmul+1)
  4064  05F3  0875               	movf	(___wmul@product),w
  4065  05F4  01A0               	clrf	(?___wmul)
  4066  05F5  07A0               	addwf	(?___wmul)
  4067                           
  4068  05F6  2DF7               	goto	l1527
  4069                           	
  4070  05F7                     l3682:	
  4071                           	line	13
  4072                           	
  4073  05F7                     l1527:	
  4074  05F7  0008               	return
  4075                           	opt stack 0
  4076                           GLOBAL	__end_of___wmul
  4077  05F8                     	__end_of___wmul:
  4078 ;; =============== function ___wmul ends ============
  4079                           
  4080                           	signat	___wmul,8314
  4081                           	global	_isdigit
  4082                           psect	text722,local,class=CODE,delta=2
  4083                           global __ptext722
  4084  060F                     __ptext722:
  4085                           
  4086 ;; *************** function _isdigit *****************
  4087 ;; Defined at:
  4088 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\isdigit.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;  c               1    wreg     unsigned char 
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;  c               1    6[COMMON] unsigned char 
  4093 ;; Return value:  Size  Location     Type
  4094 ;;		None               void
  4095 ;; Registers used:
  4096 ;;		wreg, status,2, status,0
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4102 ;;      Params:         0       0       0       0       0
  4103 ;;      Locals:         2       0       0       0       0
  4104 ;;      Temps:          0       0       0       0       0
  4105 ;;      Totals:         2       0       0       0       0
  4106 ;;Total ram usage:        2 bytes
  4107 ;; Hardware stack levels used:    1
  4108 ;; Hardware stack levels required when called:    1
  4109 ;; This function calls:
  4110 ;;		Nothing
  4111 ;; This function is called by:
  4112 ;;		_sprintf
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           psect	text722
  4116                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\isdigit.c"
  4117                           	global	__size_of_isdigit
  4118  0015                     	__size_of_isdigit	equ	__end_of_isdigit-_isdigit
  4119                           	
  4120  060F                     _isdigit:	
  4121                           	opt	stack 3
  4122                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4123                           ;isdigit@c stored from wreg
  4124  060F  00F6               	movwf	(isdigit@c)
  4125                           	line	14
  4126                           	
  4127  0610                     l3260:	
  4128  0610  01F5               	clrf	(_isdigit$1683)
  4129                           	
  4130  0611                     l3262:	
  4131  0611  303A               	movlw	(03Ah)
  4132  0612  0276               	subwf	(isdigit@c),w
  4133  0613  1803               	skipnc
  4134  0614  2E16               	goto	u2791
  4135  0615  2E17               	goto	u2790
  4136  0616                     u2791:
  4137  0616  2E21               	goto	l3268
  4138  0617                     u2790:
  4139                           	
  4140  0617                     l3264:	
  4141  0617  3030               	movlw	(030h)
  4142  0618  0276               	subwf	(isdigit@c),w
  4143  0619  1C03               	skipc
  4144  061A  2E1C               	goto	u2801
  4145  061B  2E1D               	goto	u2800
  4146  061C                     u2801:
  4147  061C  2E21               	goto	l3268
  4148  061D                     u2800:
  4149                           	
  4150  061D                     l3266:	
  4151  061D  01F5               	clrf	(_isdigit$1683)
  4152  061E  1403               	bsf	status,0
  4153  061F  0DF5               	rlf	(_isdigit$1683),f
  4154  0620  2E21               	goto	l3268
  4155                           	
  4156  0621                     l1514:	
  4157                           	
  4158  0621                     l3268:	
  4159  0621  0C75               	rrf	(_isdigit$1683),w
  4160                           	
  4161  0622  2E23               	goto	l1515
  4162                           	
  4163  0623                     l3270:	
  4164                           	line	15
  4165                           	
  4166  0623                     l1515:	
  4167  0623  0008               	return
  4168                           	opt stack 0
  4169                           GLOBAL	__end_of_isdigit
  4170  0624                     	__end_of_isdigit:
  4171 ;; =============== function _isdigit ends ============
  4172                           
  4173                           	signat	_isdigit,4216
  4174                           	global	_StopTimer1
  4175                           psect	text723,local,class=CODE,delta=2
  4176                           global __ptext723
  4177  066E                     __ptext723:
  4178                           
  4179 ;; *************** function _StopTimer1 *****************
  4180 ;; Defined at:
  4181 ;;		line 95 in file "C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;		None
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;		None               void
  4188 ;; Registers used:
  4189 ;;		None
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4195 ;;      Params:         0       0       0       0       0
  4196 ;;      Locals:         0       0       0       0       0
  4197 ;;      Temps:          0       0       0       0       0
  4198 ;;      Totals:         0       0       0       0       0
  4199 ;;Total ram usage:        0 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; Hardware stack levels required when called:    1
  4202 ;; This function calls:
  4203 ;;		Nothing
  4204 ;; This function is called by:
  4205 ;;		_checkButtons
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           psect	text723
  4209                           	file	"C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  4210                           	line	95
  4211                           	global	__size_of_StopTimer1
  4212  0007                     	__size_of_StopTimer1	equ	__end_of_StopTimer1-_StopTimer1
  4213                           	
  4214  066E                     _StopTimer1:	
  4215                           	opt	stack 5
  4216                           ; Regs used in _StopTimer1: []
  4217                           	line	96
  4218                           	
  4219  066E                     l3258:	
  4220                           ;temporizador.c: 96: TMR1ON = 0;
  4221  066E  1283               	bcf	status, 5	;RP0=0, select bank0
  4222  066F  1303               	bcf	status, 6	;RP1=0, select bank0
  4223  0670  1010               	bcf	(128/8),(128)&7
  4224                           	line	97
  4225                           ;temporizador.c: 97: TMR1IE = 0;
  4226  0671  1683               	bsf	status, 5	;RP0=1, select bank1
  4227  0672  1303               	bcf	status, 6	;RP1=0, select bank1
  4228  0673  100C               	bcf	(1120/8)^080h,(1120)&7
  4229                           	line	98
  4230                           	
  4231  0674                     l719:	
  4232  0674  0008               	return
  4233                           	opt stack 0
  4234                           GLOBAL	__end_of_StopTimer1
  4235  0675                     	__end_of_StopTimer1:
  4236 ;; =============== function _StopTimer1 ends ============
  4237                           
  4238                           	signat	_StopTimer1,88
  4239                           	global	_StartTimer1
  4240                           psect	text724,local,class=CODE,delta=2
  4241                           global __ptext724
  4242  0657                     __ptext724:
  4243                           
  4244 ;; *************** function _StartTimer1 *****************
  4245 ;; Defined at:
  4246 ;;		line 84 in file "C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;		None
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;		None
  4251 ;; Return value:  Size  Location     Type
  4252 ;;		None               void
  4253 ;; Registers used:
  4254 ;;		wreg, status,2
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4260 ;;      Params:         0       0       0       0       0
  4261 ;;      Locals:         0       0       0       0       0
  4262 ;;      Temps:          0       0       0       0       0
  4263 ;;      Totals:         0       0       0       0       0
  4264 ;;Total ram usage:        0 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    1
  4267 ;; This function calls:
  4268 ;;		Nothing
  4269 ;; This function is called by:
  4270 ;;		_checkButtons
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           psect	text724
  4274                           	file	"C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  4275                           	line	84
  4276                           	global	__size_of_StartTimer1
  4277  000D                     	__size_of_StartTimer1	equ	__end_of_StartTimer1-_StartTimer1
  4278                           	
  4279  0657                     _StartTimer1:	
  4280                           	opt	stack 5
  4281                           ; Regs used in _StartTimer1: [wreg+status,2]
  4282                           	line	85
  4283                           	
  4284  0657                     l3246:	
  4285                           ;temporizador.c: 85: TMR1H = 0;
  4286  0657  1283               	bcf	status, 5	;RP0=0, select bank0
  4287  0658  1303               	bcf	status, 6	;RP1=0, select bank0
  4288  0659  018F               	clrf	(15)	;volatile
  4289                           	line	86
  4290                           ;temporizador.c: 86: TMR1L = 0;
  4291  065A  018E               	clrf	(14)	;volatile
  4292                           	line	87
  4293                           	
  4294  065B                     l3248:	
  4295                           ;temporizador.c: 87: T1CON = 0b00110001;
  4296  065B  3031               	movlw	(031h)
  4297  065C  0090               	movwf	(16)	;volatile
  4298                           	line	88
  4299                           	
  4300  065D                     l3250:	
  4301                           ;temporizador.c: 88: TMR1IF = 0;
  4302  065D  100C               	bcf	(96/8),(96)&7
  4303                           	line	89
  4304                           	
  4305  065E                     l3252:	
  4306                           ;temporizador.c: 89: TMR1IE = 1;
  4307  065E  1683               	bsf	status, 5	;RP0=1, select bank1
  4308  065F  1303               	bcf	status, 6	;RP1=0, select bank1
  4309  0660  140C               	bsf	(1120/8)^080h,(1120)&7
  4310                           	line	90
  4311                           	
  4312  0661                     l3254:	
  4313                           ;temporizador.c: 90: PEIE = 1;
  4314  0661  170B               	bsf	(94/8),(94)&7
  4315                           	line	91
  4316                           	
  4317  0662                     l3256:	
  4318                           ;temporizador.c: 91: GIE = 1;
  4319  0662  178B               	bsf	(95/8),(95)&7
  4320                           	line	92
  4321                           	
  4322  0663                     l716:	
  4323  0663  0008               	return
  4324                           	opt stack 0
  4325                           GLOBAL	__end_of_StartTimer1
  4326  0664                     	__end_of_StartTimer1:
  4327 ;; =============== function _StartTimer1 ends ============
  4328                           
  4329                           	signat	_StartTimer1,88
  4330                           	global	_ISR
  4331                           psect	text725,local,class=CODE,delta=2
  4332                           global __ptext725
  4333  03A8                     __ptext725:
  4334                           
  4335 ;; *************** function _ISR *****************
  4336 ;; Defined at:
  4337 ;;		line 52 in file "C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;		None
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;		None
  4342 ;; Return value:  Size  Location     Type
  4343 ;;		None               void
  4344 ;; Registers used:
  4345 ;;		wreg, status,2, status,0
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4351 ;;      Params:         0       0       0       0       0
  4352 ;;      Locals:         0       0       0       0       0
  4353 ;;      Temps:          5       0       0       0       0
  4354 ;;      Totals:         5       0       0       0       0
  4355 ;;Total ram usage:        5 bytes
  4356 ;; Hardware stack levels used:    1
  4357 ;; This function calls:
  4358 ;;		Nothing
  4359 ;; This function is called by:
  4360 ;;		Interrupt level 1
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           psect	text725
  4364                           	file	"C:\Users\henry\Downloads\timer\Timer_Stopwatch - Copy\temporizador.c"
  4365                           	line	52
  4366                           	global	__size_of_ISR
  4367  004F                     	__size_of_ISR	equ	__end_of_ISR-_ISR
  4368                           	
  4369  03A8                     _ISR:	
  4370                           	opt	stack 1
  4371                           ; Regs used in _ISR: [wreg+status,2+status,0]
  4372                           psect	intentry,class=CODE,delta=2
  4373                           global __pintentry
  4374  0004                     __pintentry:
  4375                           global interrupt_function
  4376  0004                     interrupt_function:
  4377                           	global saved_w
  4378  007E                     	saved_w	set	btemp+0
  4379  0004  00FE               	movwf	saved_w
  4380  0005  0E03               	swapf	status,w
  4381  0006  00F1               	movwf	(??_ISR+1)
  4382  0007  0804               	movf	fsr0,w
  4383  0008  00F2               	movwf	(??_ISR+2)
  4384  0009  080A               	movf	pclath,w
  4385  000A  00F3               	movwf	(??_ISR+3)
  4386  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  4387  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  4388  000D  087F               	movf	btemp+1,w
  4389  000E  00F4               	movwf	(??_ISR+4)
  4390  000F  120A  118A  2BA8   	ljmp	_ISR
  4391                           psect	text725
  4392                           	line	53
  4393                           	
  4394  03A8                     i1l3220:	
  4395                           ;temporizador.c: 53: if (TMR1IF)
  4396  03A8  1C0C               	btfss	(96/8),(96)&7
  4397  03A9  2BAB               	goto	u272_21
  4398  03AA  2BAC               	goto	u272_20
  4399  03AB                     u272_21:
  4400  03AB  2BEC               	goto	i1l713
  4401  03AC                     u272_20:
  4402                           	line	55
  4403                           	
  4404  03AC                     i1l3222:	
  4405                           ;temporizador.c: 54: {
  4406                           ;temporizador.c: 55: TMR1IF = 0;
  4407  03AC  100C               	bcf	(96/8),(96)&7
  4408                           	line	56
  4409                           	
  4410  03AD                     i1l3224:	
  4411                           ;temporizador.c: 56: halfSecCount++;
  4412  03AD  3001               	movlw	(01h)
  4413  03AE  00F0               	movwf	(??_ISR+0)+0
  4414  03AF  0870               	movf	(??_ISR+0)+0,w
  4415  03B0  07D3               	addwf	(_halfSecCount),f
  4416                           	line	58
  4417                           	
  4418  03B1                     i1l3226:	
  4419                           ;temporizador.c: 58: if (halfSecCount >= 2)
  4420  03B1  3002               	movlw	(02h)
  4421  03B2  0253               	subwf	(_halfSecCount),w
  4422  03B3  1C03               	skipc
  4423  03B4  2BB6               	goto	u273_21
  4424  03B5  2BB7               	goto	u273_20
  4425  03B6                     u273_21:
  4426  03B6  2BEC               	goto	i1l713
  4427  03B7                     u273_20:
  4428                           	line	60
  4429                           	
  4430  03B7                     i1l3228:	
  4431                           ;temporizador.c: 59: {
  4432                           ;temporizador.c: 60: halfSecCount = 0;
  4433  03B7  01D3               	clrf	(_halfSecCount)
  4434                           	line	62
  4435                           	
  4436  03B8                     i1l3230:	
  4437                           ;temporizador.c: 62: if (running)
  4438  03B8  0855               	movf	(_running),w
  4439  03B9  1D03               	skipz
  4440  03BA  2BBC               	goto	u274_20
  4441  03BB  2BEC               	goto	i1l713
  4442  03BC                     u274_20:
  4443                           	line	64
  4444                           	
  4445  03BC                     i1l3232:	
  4446                           ;temporizador.c: 63: {
  4447                           ;temporizador.c: 64: if (mode == 0)
  4448  03BC  08D4               	movf	(_mode),f
  4449  03BD  1D03               	skipz
  4450  03BE  2BC0               	goto	u275_21
  4451  03BF  2BC1               	goto	u275_20
  4452  03C0                     u275_21:
  4453  03C0  2BD2               	goto	i1l3238
  4454  03C1                     u275_20:
  4455                           	line	66
  4456                           	
  4457  03C1                     i1l3234:	
  4458                           ;temporizador.c: 65: {
  4459                           ;temporizador.c: 66: if (time < 9999)
  4460  03C1  3027               	movlw	high(0270Fh)
  4461  03C2  0252               	subwf	(_time+1),w
  4462  03C3  300F               	movlw	low(0270Fh)
  4463  03C4  1903               	skipnz
  4464  03C5  0251               	subwf	(_time),w
  4465  03C6  1803               	skipnc
  4466  03C7  2BC9               	goto	u276_21
  4467  03C8  2BCA               	goto	u276_20
  4468  03C9                     u276_21:
  4469  03C9  2BEC               	goto	i1l713
  4470  03CA                     u276_20:
  4471                           	line	67
  4472                           	
  4473  03CA                     i1l3236:	
  4474                           ;temporizador.c: 67: time++;
  4475  03CA  3001               	movlw	low(01h)
  4476  03CB  07D1               	addwf	(_time),f
  4477  03CC  1803               	skipnc
  4478  03CD  0AD2               	incf	(_time+1),f
  4479  03CE  3000               	movlw	high(01h)
  4480  03CF  07D2               	addwf	(_time+1),f
  4481  03D0  2BEC               	goto	i1l713
  4482                           	
  4483  03D1                     i1l709:	
  4484                           	line	68
  4485                           ;temporizador.c: 68: }
  4486  03D1  2BEC               	goto	i1l713
  4487                           	line	69
  4488                           	
  4489  03D2                     i1l708:	
  4490                           	
  4491  03D2                     i1l3238:	
  4492                           ;temporizador.c: 69: else if (time > 0)
  4493  03D2  0852               	movf	(_time+1),w
  4494  03D3  0451               	iorwf	(_time),w
  4495  03D4  1903               	skipnz
  4496  03D5  2BD7               	goto	u277_21
  4497  03D6  2BD8               	goto	u277_20
  4498  03D7                     u277_21:
  4499  03D7  2BEC               	goto	i1l713
  4500  03D8                     u277_20:
  4501                           	line	71
  4502                           	
  4503  03D8                     i1l3240:	
  4504                           ;temporizador.c: 70: {
  4505                           ;temporizador.c: 71: time--;
  4506  03D8  3001               	movlw	low(01h)
  4507  03D9  02D1               	subwf	(_time),f
  4508  03DA  3000               	movlw	high(01h)
  4509  03DB  1C03               	skipc
  4510  03DC  03D2               	decf	(_time+1),f
  4511  03DD  02D2               	subwf	(_time+1),f
  4512                           	line	72
  4513                           	
  4514  03DE                     i1l3242:	
  4515                           ;temporizador.c: 72: if (time == 0)
  4516  03DE  0852               	movf	((_time+1)),w
  4517  03DF  0451               	iorwf	((_time)),w
  4518  03E0  1D03               	skipz
  4519  03E1  2BE3               	goto	u278_21
  4520  03E2  2BE4               	goto	u278_20
  4521  03E3                     u278_21:
  4522  03E3  2BEC               	goto	i1l713
  4523  03E4                     u278_20:
  4524                           	line	74
  4525                           	
  4526  03E4                     i1l3244:	
  4527                           ;temporizador.c: 73: {
  4528                           ;temporizador.c: 74: RB0 = 1;
  4529  03E4  1406               	bsf	(48/8),(48)&7
  4530                           	line	75
  4531                           ;temporizador.c: 75: RB1 = 1;
  4532  03E5  1486               	bsf	(49/8),(49)&7
  4533  03E6  2BEC               	goto	i1l713
  4534                           	line	76
  4535                           	
  4536  03E7                     i1l712:	
  4537  03E7  2BEC               	goto	i1l713
  4538                           	line	77
  4539                           	
  4540  03E8                     i1l711:	
  4541  03E8  2BEC               	goto	i1l713
  4542                           	line	78
  4543                           	
  4544  03E9                     i1l710:	
  4545  03E9  2BEC               	goto	i1l713
  4546                           	
  4547  03EA                     i1l707:	
  4548  03EA  2BEC               	goto	i1l713
  4549                           	line	79
  4550                           	
  4551  03EB                     i1l706:	
  4552  03EB  2BEC               	goto	i1l713
  4553                           	line	80
  4554                           	
  4555  03EC                     i1l705:	
  4556                           	line	81
  4557                           	
  4558  03EC                     i1l713:	
  4559  03EC  0874               	movf	(??_ISR+4),w
  4560  03ED  00FF               	movwf	btemp+1
  4561  03EE  0873               	movf	(??_ISR+3),w
  4562  03EF  008A               	movwf	pclath
  4563  03F0  0872               	movf	(??_ISR+2),w
  4564  03F1  0084               	movwf	fsr0
  4565  03F2  0E71               	swapf	(??_ISR+1)^0FFFFFF80h,w
  4566  03F3  0083               	movwf	status
  4567  03F4  0EFE               	swapf	saved_w,f
  4568  03F5  0E7E               	swapf	saved_w,w
  4569  03F6  0009               	retfie
  4570                           	opt stack 0
  4571                           GLOBAL	__end_of_ISR
  4572  03F7                     	__end_of_ISR:
  4573 ;; =============== function _ISR ends ============
  4574                           
  4575                           	signat	_ISR,88
  4576                           psect	text726,local,class=CODE,delta=2
  4577                           global __ptext726
  4578  0000                     __ptext726:
  4579                           	global	btemp
  4580  007E                     	btemp set 07Eh
  4581                           
  4582                           	DABS	1,126,2	;btemp
  4583                           	global	wtemp0
  4584  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Sat Feb 15 16:01:44 2025

      __end_of_checkButtons 027D                           pc 0002                ?_displayTime 003E  
                        _RD 0C60                          _WR 0C61                          fsr 0004  
       ___wmul@multiplicand 0022               ?_displayState 0070                         l801 01B7  
                       l810 009C                         l802 001D                         l722 0357  
                       l811 005D                         l803 002F                         l716 0663  
                       l820 00FA                         l812 009B                         l804 0033  
                       l740 01F2                         l821 00EF                         l813 00A7  
                       l805 003B                         l741 01F1                         l725 040E  
                       l830 014C                         l822 011B                         l814 009D  
                       l806 0034                         l750 0270                         l742 021C  
                       l726 041A                         l719 0674                         l815 01CD  
                       l831 0164                         l823 0120                         l807 0047  
                       l751 027C                         l743 0215                         l727 0443  
                       l832 01AB                         l824 0145                         l816 009E  
                       l808 0046                         l744 021B                         l760 0646  
                       l833 016B                         l825 0144                         l817 009F  
                       l809 0048                         l745 0231                         l834 01B6  
                       l826 012B                         l818 00BB                         l746 0272  
                       l754 04EA                         l835 01CC                         l827 0143  
                       l819 00D2                         l747 025B                         l763 053B  
                       l755 0500                         l836 01D4                         l828 0166  
                       l748 025A                         l772 059F                         l756 0501  
                       l829 0165                         l749 0271                         l781 060E  
                       l757 0501                         l766 0649                         l790 05CB  
                       l767 0648                         l775 0572                         l768 0656  
                       l784 0635                         l769 0656                         l778 0307  
                       l787 05BA                         l788 05A1                         l789 05CB  
                       _GIE 005F                         _RA0 0028                         _RA1 0029  
                       _RB0 0030                         _RA2 002A                         _RB1 0031  
                       _RD3 0043                         _RD4 0044                         _RD5 0045  
                       _RD6 0046                         _RD7 0047                         _ISR 03A8  
                       fsr0 0004                         indf 0000                        ?_ISR 0070  
                      l1514 0621                        l1530 03A0                        l1515 0623  
                      l1531 0372                        l1524 05CF                        l1532 0366  
                      l1540 0482                        l1525 05DB                        l1533 0377  
                      l1541 045C                        l1526 05F0                        l1534 0378  
                      l1542 0450                        l1527 05F7                        l1535 0391  
                      l1543 0461                        l1536 039F                        l1544 0462  
                      l1537 03A7                        l1545 0473                        l3250 065D  
                      l1546 0481                        l1547 0489                        l3252 065E  
                      l3260 0610                        l3500 050D                        l3254 0661  
                      l3246 0657                        l3270 0623                        l3262 0611  
                      l3430 01EA                        l3510 051E                        l3502 0510  
                      l3256 0662                        l3248 065B                        l3264 0617  
                      l3440 0202                        l3432 01EB                        l3424 01D5  
                      l3520 0536                        l3512 0521                        l3504 0517  
                      l3258 066E                        l3266 061D                        l3450 0222  
                      l3442 020D                        l3426 01DB                        l3434 01F2  
                      l3522 0539                        l3514 0530                        l3506 0518  
                      l3268 0621                        l3700 038F                        l3452 0228  
                      l3460 0231                        l3444 020F                        l3436 01F8  
                      l3428 01DF                        l3524 053B                        l3516 0531  
                      l3508 051B                        l3702 0391                        l3710 0444  
                      l3470 024A                        l3462 0235                        l3454 022C  
                      l3446 0215                        l3438 01FE                        l3518 0532  
                      l3704 0398                        l3720 0462                        l3712 044C  
                      l3800 0145                        l3480 0269                        l3472 0253  
                      l3464 023D                        l3456 022E                        l3448 021C  
                      l3706 03A0                        l3730 0489                        l3722 046C  
                      l3714 0450                        l3810 016B                        l3802 014C  
                      l3474 025B                        l3466 0242                        l3482 0272  
                      l3458 022F                        l3708 03A7                        l3724 0473  
                      l3716 0457                        l3812 019F                        l3804 0153  
                      l3820 01CD                        l3740 002F                        l3732 0018  
                      l3484 0276                        l3476 025F                        l3468 0246  
                      l3492 0504                        l3900 0547                        l3726 047A  
                      l3718 045C                        l3822 01D4                        l3814 01A6  
                      l3806 0157                        l3750 0048                        l3742 0031  
                      l3734 001D                        l3478 0263                        l3494 0508  
                      l3830 0647                        l3910 056F                        l3902 0548  
                      l3680 05F0                        l3672 05CC                        l3728 0482  
                      l3816 01AB                        l3808 0166                        l3760 009F  
                      l3752 0058                        l3744 0035                        l3736 0023  
                      l3824 0636                        l3496 050B                        l3832 0649  
                      l3840 0586                        l3904 054C                        l3912 05A0  
                      l3920 0308                        l3682 05F7                        l3674 05CF  
                      l3690 0366                        l3770 00C7                        l3762 00A6  
                      l3754 005D                        l3746 003A                        l3738 002A  
                      l3818 01B7                        l3826 0639                        l3498 050C  
                      l3842 058C                        l3834 0576                        l3850 0280  
                      l3906 0556                        l3914 05A1                        l3922 0334  
                      l3930 0404                        l3676 05D5                        l3692 036D  
                      l3684 0358                        l3780 00EF                        l3772 00CA  
                      l3756 0086                        l3764 00A7                        l3748 003B  
                      l3828 063E                        l3844 059A                        l3836 0578  
                      l3860 02A4                        l3852 028B                        l3908 055C  
                      l3916 05B1                        l3924 034C                        l3940 0438  
                      l3932 040E                        l3678 05E2                        l3694 0372  
                      l3686 035C                        l3790 0120                        l3782 00F3  
                      l3774 00D1                        l3766 00BB                        l3758 008A  
                      l3838 0581                        l3846 0627                        l3870 02C2  
                      l3862 02A9                        l3854 0291                        l3918 05BA  
                      l3934 041A                        l3926 03F7                        l3950 04DA  
                      l3942 04CA                        l3696 0378                        l3688 0362  
                      l3792 0124                        l3784 00FA                        l3776 00D2  
                      l3768 00C3                        l3880 02DC                        l3872 02C3  
                      l3864 02B0                        l3856 0295                        l3848 027D  
                      l3936 0420                        l3928 03FD                        l3960 04EA  
                      l3952 04DB                        l3944 04D4                        l3698 0389  
                      l3794 012B                        l3786 010D                        l3778 00EE  
                      l3890 0300                        l3882 02E2                        l3874 02C8  
                      l3866 02B5                        l3858 029A                        l3938 042B  
                      l3962 04EF                        l3954 04E0                        l3946 04D8  
                      l3796 0132                        l3788 011B                        l3884 02E9  
                      l3876 02CF                        l3868 02BC                        l3892 05F8  
                      l3964 04F4                        l3956 04E5                        l3948 04D9  
                      l3798 0136                        l3886 02EF                        l3878 02D5  
                      l3894 0603                        l3958 04E8                        l3888 02FA  
                      l3896 053F                        l3898 0544                        STR_1 04C0  
                      STR_2 04B2                        STR_3 04A4                        STR_4 04AD  
                      STR_5 04AD                        u3200 0228                        u3120 01DB  
                      u3201 0227                        u3121 01DA                        u3210 022C  
                      u3130 01DF                        u3211 022B                        u3131 01DE  
                      u3300 0269                        u3140 01EA                        u3301 0268  
                      u3230 023D                        u3231 023C                        u3240 0242  
                      u3160 01FE                        u3241 0241                        u3225 0235  
                      u3161 01FD                        u3250 0246                        u3170 0202  
                      u3315 0276                        u3251 0245                        u3171 0201  
                      u3155 01F8                        u3420 05EF                        u3500 044C  
                      u3260 024A                        u3180 020D                        u3421 05EE  
                      u3405 05DC                        u3501 044B                        u3325 027C  
                      u3261 0249                        u3430 0362                        u3270 0253  
                      u3415 05E3                        u3431 0361                        u3271 0252  
                      u3335 0526                        u2800 061D                        u3520 0460  
                      u3600 00ED                        u3280 025F                        u2801 061C  
                      u3521 045F                        u3601 00EC                        u3281 025E  
                      u3450 0376                        u3530 046C                        u3610 00F9  
                      u3290 0263                        u3451 0375                        u3531 046B  
                      u3515 0451                        u3611 00F8                        u3291 0262  
                      u3195 0222                        u3620 010D                        u3700 0655  
                      u3445 0367                        u3621 010C                        u3605 00E9  
                      u3701 0654                        u3390 05D5                        u3470 0389  
                      u3550 0480                        u3630 0124                        u3391 05D4  
                      u3471 0388                        u3551 047F                        u3535 0468  
                      u3631 0123                        u3640 012A                        u3560 0023  
                      u3465 0379                        u3545 0474                        u3641 0129  
                      u3625 0109                        u3561 0022                        u3490 039E  
                      u3650 0142                        u3570 0058                        u3730 05CA  
                      u3491 039D                        u3475 0385                        u3651 0141  
                      u3571 0057                        u3715 058F                        u3731 05C9  
                      _PEIE 005E                        u3660 014B                        u3580 009A  
                      u3740 0404                        u3485 0392                        u3661 014A  
                      u3581 0099                        u3725 055F                        u3741 0403  
                      u2790 0617                        u3670 0163                        u3590 00D0  
                      u2791 0616                        u3671 0162                        u3591 00CF  
                      u3807 02B9                        u3680 01B5                        u3681 01B4  
                      u3817 02CC                        u3690 01CB                        u3691 01CA  
                      u3827 02D9                        u3837 02E6                        u3757 04FA  
                      u3847 02F5                        u3767 0609                        u3857 0304  
                      u3777 0286                        u3867 0534                        u3787 02A0  
                      u3877 063B                        u3797 02AD                        u3887 0643  
                      _WREN 0C62                        _main 04CA                        _mode 0054  
                      _time 0051                        btemp 007E                        start 0012  
           __end_of_InitLCD 0308                       ??_ISR 0070              ??_displayState 0078  
                     ?_main 0070           ??_ReadBusyFlagLCD 0075                       _EEADR 010D  
                     _CARRY 0018                       _T1CON 0010             __end_of___lwdiv 03A8  
           __end_of___lwmod 048A                       i1l710 03E9                       i1l711 03E8  
                     i1l712 03E7                       i1l705 03EC                       i1l713 03EC  
                     i1l706 03EB                       i1l707 03EA                       i1l708 03D2  
                     i1l709 03D1                       _TMR1H 000F                       _TMR1L 000E  
                     _PORTB 0006                       _TRISA 0085                       _TRISB 0086  
                     _TRISD 0088       __size_of_CheckBusyLCD 0010             __end_of_isdigit 0624  
              displayTime@t 003E              __pbitbssCOMMON 03C0                       pclath 000A  
                     status 0003     __size_of_WriteDataToLCD 0037                       wtemp0 007E  
           __end_of_sprintf 01D5            __end_of_ClearLCD 060F             _ToggleEpinOfLCD 0636  
              __end_of_main 0504                _CheckBusyLCD 0647                      ??_main 004F  
                    _ADCON1 009F                      _EEDATA 010C                      _EECON1 018C  
                    _EECON2 018D                      i1l3220 03A8                      i1l3230 03B8  
                    i1l3222 03AC                      i1l3240 03D8                      i1l3232 03BC  
                    i1l3224 03AD                      i1l3242 03DE                      i1l3234 03C1  
                    i1l3226 03B1                      i1l3244 03E4                      i1l3236 03CA  
                    i1l3228 03B7                      i1l3238 03D2                      u272_20 03AC  
                    u272_21 03AB                      u273_20 03B7                      u273_21 03B6  
                    u274_20 03BC                      u275_20 03C1                      u275_21 03C0  
                    u276_20 03CA                      u276_21 03C9                      u277_20 03D8  
                    u277_21 03D7                      u278_20 03E4                      u278_21 03E3  
                    _TMR1IE 0460                      _TMR1IF 0060                      _TMR1ON 0080  
     __size_of_checkButtons 00A8                   ??_InitLCD 0021                      ___wmul 05CC  
        __size_of_SetPosLCD 0012                   ??___lwdiv 0075                   ??___lwmod 0076  
      __size_of_displayTime 0050                   ??_isdigit 0075           ?_WriteStringToLCD 0024  
                    saved_w 007E          ??_WriteStringToLCD 0078                _checkButtons 01D5  
                 ??_sprintf 0030     __end_of_ToggleEpinOfLCD 0647        __end_of_displayState 0444  
                _StopTimer1 066E              __pcstackCOMMON 0070               ??_StartTimer1 0075  
  WriteCommandToLCD@Command 0020                   ?_ClearLCD 0070                sprintf@width 003B  
         __end_of_SetPosLCD 0636                  __pbssBANK0 0051              _WriteDataToLCD 053C  
              _halfSecCount 0053             _ReadBusyFlagLCD 0504                  __pmaintext 04CA  
     WriteDataToLCD@LCDChar 0023                     ?___wmul 0020                  __pintentry 0004  
       __end_of_StartTimer1 0664                  ??_ClearLCD 0021    checkButtons@oldStartStop 03C4  
    __end_of_WriteDataToLCD 0573            ?_ToggleEpinOfLCD 0070                 ?_StopTimer1 0070  
                   _InitLCD 027D             __size_of___wmul 002C                     ___lwdiv 0358  
                   ___lwmod 0444                __size_of_ISR 004F                     _dpowers 049A  
                   _isdigit 060F              displayTime@min 004D              displayTime@sec 004E  
     __size_of_displayState 004D                     _sprintf 0015                     _running 0055  
      end_of_initialization 066A             ?_WriteDataToLCD 0070     __end_of_ReadBusyFlagLCD 053C  
               _StartTimer1 0657                _displayState 03F7         __size_of_StopTimer1 0007  
         displayTime@buffer 0045   __size_of_WriteStringToLCD 002C               ??_displayTime 0040  
            __end_of___wmul 05F8                SetPosLCD@pos 0021         start_initialization 0664  
               __end_of_ISR 03F7           __size_of_ClearLCD 0017            ?_ReadBusyFlagLCD 0070  
                 _SetPosLCD 0624                    ??___wmul 0075         __end_of_displayTime 0358  
             __pcstackBANK0 0020                _isdigit$1683 0075                 sprintf@_val 0035  
               sprintf@flag 0034                ??_StopTimer1 0075                 sprintf@prec 0039  
                ?_SetPosLCD 0070                    ?_InitLCD 0070            ___lwdiv@dividend 0022  
                 __ptext710 05F8                   __ptext711 027D                   __ptext720 0358  
                 __ptext712 0624                   __ptext721 05CC                   __ptext713 0573  
                 __ptext722 060F                   __ptext714 0647                   __ptext706 03F7  
                 __ptext723 066E                   __ptext715 0504                   __ptext707 0308  
                 __ptext724 0657                   __ptext716 0636                   __ptext708 05A0  
                 __ptext725 03A8                   __ptext717 01D5                   __ptext709 053C  
                 __ptext726 0000                   __ptext718 0015                   __ptext719 0444  
                  ?___lwdiv 0020                    ?___lwmod 0027               ?_CheckBusyLCD 0070  
                 __pstrings 048A                    ?_isdigit 0070          __end_of_StopTimer1 0675  
          ??_WriteDataToLCD 0021            ___lwdiv@quotient 0025                    ?_sprintf 002B  
         interrupt_function 0004              ___wmul@product 0075            _WriteStringToLCD 05A0  
  __size_of_ToggleEpinOfLCD 0011                ?_StartTimer1 0070                 _displayTime 0308  
            ??_CheckBusyLCD 0020                 __stringbase 0499           ___wmul@multiplier 0020  
                  _ClearLCD 05F8               ?_checkButtons 0070           _WriteCommandToLCD 0573  
               ??_SetPosLCD 0078          ?_WriteCommandToLCD 0070            __size_of_InitLCD 008B  
       ??_WriteCommandToLCD 0076            __size_of___lwdiv 0050            __size_of___lwmod 0046  
            ??_checkButtons 0075            __size_of_isdigit 0015             ___lwdiv@divisor 0020  
      checkButtons@oldReset 03C3             ___lwdiv@counter 0024   __end_of_WriteCommandToLCD 05A0  
          __size_of_sprintf 01C0         ReadBusyFlagLCD@data 0077               __size_of_main 003A  
       WriteStringToLCD@str 0024           ??_ToggleEpinOfLCD 0075                    isdigit@c 0076  
                  intlevel1 0000                   sprintf@ap 0033                   sprintf@sp 003A  
      __end_of_CheckBusyLCD 0657         checkButtons@oldMode 03C2            ___lwmod@dividend 0029  
                 stringcode 0494    __size_of_ReadBusyFlagLCD 0038        __size_of_StartTimer1 000D  
                  sprintf@c 003D                    sprintf@f 002B          checkButtons@oldDec 03C0  
        checkButtons@oldInc 03C1    __end_of_WriteStringToLCD 05CC             ___lwmod@divisor 0027  
           ___lwmod@counter 0077                    stringdir 0494                    stringtab 048A  
__size_of_WriteCommandToLCD 002D  
